<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1830" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1813.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1813.00"> </text><svg id="frames" x="10" width="1180" total_samples="2982"><g><title>0x104c8a2f3 (1 samples, 0.03%)</title><rect x="0.0000%" y="1765" width="0.0335%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1775.50"></text></g><g><title>0x104ccfce7 (1 samples, 0.03%)</title><rect x="0.0000%" y="1749" width="0.0335%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1759.50"></text></g><g><title>0x104cbb09b (1 samples, 0.03%)</title><rect x="0.0000%" y="1733" width="0.0335%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1743.50"></text></g><g><title>0x104cbaac3 (1 samples, 0.03%)</title><rect x="0.0000%" y="1717" width="0.0335%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1727.50"></text></g><g><title>0x104ce838d (1 samples, 0.03%)</title><rect x="0.0000%" y="1701" width="0.0335%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1711.50"></text></g><g><title>qos_class_main (167 samples, 5.60%)</title><rect x="0.0335%" y="1765" width="5.6003%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="167"/><text x="0.2835%" y="1775.50">qos_cla..</text></g><g><title>start_wqthread (167 samples, 5.60%)</title><rect x="0.0335%" y="1749" width="5.6003%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="167"/><text x="0.2835%" y="1759.50">start_w..</text></g><g><title>dyld4::APIs::runAllInitializersForMain() (1 samples, 0.03%)</title><rect x="5.6338%" y="1717" width="0.0335%" height="15" fill="rgb(228,23,34)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1727.50"></text></g><g><title>dyld4::PrebuiltLoader::runInitializers(dyld4::RuntimeState&amp;) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1701" width="0.0335%" height="15" fill="rgb(218,30,26)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1711.50"></text></g><g><title>dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1685" width="0.0335%" height="15" fill="rgb(220,122,19)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1695.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1669" width="0.0335%" height="15" fill="rgb(250,228,42)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1679.50"></text></g><g><title>mach_o::Header::forEachSection(void (mach_o::Header::SectionInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1653" width="0.0335%" height="15" fill="rgb(240,193,28)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1663.50"></text></g><g><title>mach_o::Header::forEachLoadCommand(void (load_command const*, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1637" width="0.0335%" height="15" fill="rgb(216,20,37)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1647.50"></text></g><g><title>invocation function for block in mach_o::Header::forEachSection(void (mach_o::Header::SectionInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1621" width="0.0335%" height="15" fill="rgb(206,188,39)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1631.50"></text></g><g><title>invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1605" width="0.0335%" height="15" fill="rgb(217,207,13)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1615.50"></text></g><g><title>invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (1 samples, 0.03%)</title><rect x="5.6338%" y="1589" width="0.0335%" height="15" fill="rgb(231,73,38)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1599.50"></text></g><g><title>libSystem_initializer (1 samples, 0.03%)</title><rect x="5.6338%" y="1573" width="0.0335%" height="15" fill="rgb(225,20,46)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1583.50"></text></g><g><title>libdispatch_init (1 samples, 0.03%)</title><rect x="5.6338%" y="1557" width="0.0335%" height="15" fill="rgb(210,31,41)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1567.50"></text></g><g><title>_os_object_init (1 samples, 0.03%)</title><rect x="5.6338%" y="1541" width="0.0335%" height="15" fill="rgb(221,200,47)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1551.50"></text></g><g><title>_objc_init (1 samples, 0.03%)</title><rect x="5.6338%" y="1525" width="0.0335%" height="15" fill="rgb(226,26,5)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1535.50"></text></g><g><title>_dyld_objc_register_callbacks (1 samples, 0.03%)</title><rect x="5.6338%" y="1509" width="0.0335%" height="15" fill="rgb(249,33,26)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1519.50"></text></g><g><title>dyld4::APIs::_dyld_objc_register_callbacks(dyld4::ObjCCallbacks const*) (1 samples, 0.03%)</title><rect x="5.6338%" y="1493" width="0.0335%" height="15" fill="rgb(235,183,28)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1503.50"></text></g><g><title>dyld4::RuntimeState::setObjCNotifiers(dyld4::ReadOnlyCallback&lt;void (*)(char const*, mach_header const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(mach_header const*, void*, mach_header const*, void const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(_dyld_objc_notify_mapped_info const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(unsigned int, _dyld_objc_notify_mapped_info const*, void (unsigned int) block_pointer)&gt;) (1 samples, 0.03%)</title><rect x="5.6338%" y="1477" width="0.0335%" height="15" fill="rgb(221,5,38)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1487.50"></text></g><g><title>dyld4::RuntimeLocks::withLoadersReadLock(void () block_pointer) (1 samples, 0.03%)</title><rect x="5.6338%" y="1461" width="0.0335%" height="15" fill="rgb(247,18,42)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1471.50"></text></g><g><title>invocation function for block in dyld4::RuntimeState::setObjCNotifiers(dyld4::ReadOnlyCallback&lt;void (*)(char const*, mach_header const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(mach_header const*, void*, mach_header const*, void const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(_dyld_objc_notify_mapped_info const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(unsigned int, _dyld_objc_notify_mapped_info const*, void (unsigned int) block_pointer)&gt;)::$_0::operator()() const (1 samples, 0.03%)</title><rect x="5.6338%" y="1445" width="0.0335%" height="15" fill="rgb(241,131,45)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1455.50"></text></g><g><title>map_images (1 samples, 0.03%)</title><rect x="5.6338%" y="1429" width="0.0335%" height="15" fill="rgb(249,31,29)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1439.50"></text></g><g><title>map_images_nolock (1 samples, 0.03%)</title><rect x="5.6338%" y="1413" width="0.0335%" height="15" fill="rgb(225,111,53)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1423.50"></text></g><g><title>realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.03%)</title><rect x="5.6338%" y="1397" width="0.0335%" height="15" fill="rgb(238,160,17)" fg:x="168" fg:w="1"/><text x="5.8838%" y="1407.50"></text></g><g><title>dyld4::start(dyld4::KernelArgs*, void*, void*)::$_0::operator()() const (2 samples, 0.07%)</title><rect x="5.6338%" y="1749" width="0.0671%" height="15" fill="rgb(214,148,48)" fg:x="168" fg:w="2"/><text x="5.8838%" y="1759.50"></text></g><g><title>dyld4::prepare(dyld4::APIs&amp;, mach_o::Header const*) (2 samples, 0.07%)</title><rect x="5.6338%" y="1733" width="0.0671%" height="15" fill="rgb(232,36,49)" fg:x="168" fg:w="2"/><text x="5.8838%" y="1743.50"></text></g><g><title>dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool, lsl::Vector&lt;std::__1::pair&lt;dyld4::Loader const*, char const*&gt;&gt;*) const (1 samples, 0.03%)</title><rect x="5.6673%" y="1717" width="0.0335%" height="15" fill="rgb(209,103,24)" fg:x="169" fg:w="1"/><text x="5.9173%" y="1727.50"></text></g><g><title>dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const (1 samples, 0.03%)</title><rect x="5.6673%" y="1701" width="0.0335%" height="15" fill="rgb(229,88,8)" fg:x="169" fg:w="1"/><text x="5.9173%" y="1711.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachRebaseLocation_Opcodes(Diagnostics&amp;, void (unsigned long long, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="5.6673%" y="1685" width="0.0335%" height="15" fill="rgb(213,181,19)" fg:x="169" fg:w="1"/><text x="5.9173%" y="1695.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachRebase_Opcodes(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, mach_o::Header::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, mach_o::Header::SegmentInfo const*, bool, unsigned int, unsigned char, unsigned long long, dyld3::MachOAnalyzer::Rebase, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="5.6673%" y="1669" width="0.0335%" height="15" fill="rgb(254,191,54)" fg:x="169" fg:w="1"/><text x="5.9173%" y="1679.50"></text></g><g><title>invocation function for block in dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const (1 samples, 0.03%)</title><rect x="5.6673%" y="1653" width="0.0335%" height="15" fill="rgb(241,83,37)" fg:x="169" fg:w="1"/><text x="5.9173%" y="1663.50"></text></g><g><title>wgpu::Device::create_render_pipeline (1 samples, 0.03%)</title><rect x="5.7009%" y="1621" width="0.0335%" height="15" fill="rgb(233,36,39)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1631.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_render_pipeline (1 samples, 0.03%)</title><rect x="5.7009%" y="1605" width="0.0335%" height="15" fill="rgb(226,3,54)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1615.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_render_pipeline (1 samples, 0.03%)</title><rect x="5.7009%" y="1589" width="0.0335%" height="15" fill="rgb(245,192,40)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1599.50"></text></g><g><title>wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_render_pipeline (1 samples, 0.03%)</title><rect x="5.7009%" y="1573" width="0.0335%" height="15" fill="rgb(238,167,29)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1583.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_render_pipeline (1 samples, 0.03%)</title><rect x="5.7009%" y="1557" width="0.0335%" height="15" fill="rgb(232,182,51)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1567.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (1 samples, 0.03%)</title><rect x="5.7009%" y="1541" width="0.0335%" height="15" fill="rgb(231,60,39)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1551.50"></text></g><g><title>metal::device::DeviceRef::new_render_pipeline_state (1 samples, 0.03%)</title><rect x="5.7009%" y="1525" width="0.0335%" height="15" fill="rgb(208,69,12)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1535.50"></text></g><g><title>-[AGXG16GFamilyDevice newRenderPipelineStateWithDescriptor:error:] (1 samples, 0.03%)</title><rect x="5.7009%" y="1509" width="0.0335%" height="15" fill="rgb(235,93,37)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1519.50"></text></g><g><title>AGXG16GFamilyRenderPipeline* AGX::UserCommonShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::createRenderPipeline&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG16GFamilyDevice*, unsigned long, MTLRenderPipelineReflection**, NSError**, void (id&lt;MTLRenderPipelineState&gt;, MTLRenderPipelineReflection*, NSError*) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1493" width="0.0335%" height="15" fill="rgb(213,116,39)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1503.50"></text></g><g><title>invocation function for block in AGXG16GFamilyRenderPipeline* AGX::UserCommonShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::createRenderPipeline&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG16GFamilyDevice*, unsigned long, MTLRenderPipelineReflection**, NSError**, void (id&lt;MTLRenderPipelineState&gt;, MTLRenderPipelineReflection*, NSError*) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1477" width="0.0335%" height="15" fill="rgb(222,207,29)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1487.50"></text></g><g><title>void AGX::UserCommonShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::createFragmentProgramVariant&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG16GFamilyDevice*, unsigned long, AGXG16GFamilyBinaryArchive*, NSArray*, AGX::HAL200::FragmentProgram*, AGX::VertexProgramVaryings const*, NSObject&lt;OS_dispatch_data&gt;*, bool, void (AGX::HAL200::FragmentProgramVariant*, ReflectionKey, NSMutableDictionary*, MTLCompilerError, NSString*, NSObject&lt;OS_dispatch_data&gt;*) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1461" width="0.0335%" height="15" fill="rgb(206,96,30)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1471.50"></text></g><g><title>void AGX::Compiler::compileProgram&lt;AGX::FragmentProgramKey, AGCDeserializedReply&gt;(AGX::FragmentProgramKey const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, MTLCompilerError, NSString*, unsigned long long) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1445" width="0.0335%" height="15" fill="rgb(218,138,4)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1455.50"></text></g><g><title>-[MTLCompiler compileFunctionRequestInternal:frameworkLinking:linkDataSize:reflectionOnly:completionHandler:] (1 samples, 0.03%)</title><rect x="5.7009%" y="1429" width="0.0335%" height="15" fill="rgb(250,191,14)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1439.50"></text></g><g><title>invocation function for block in void AGX::Compiler::compileProgram&lt;AGX::FragmentProgramKey, AGCDeserializedReply&gt;(AGX::FragmentProgramKey const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, MTLCompilerError, NSString*, unsigned long long) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1413" width="0.0335%" height="15" fill="rgb(239,60,40)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1423.50"></text></g><g><title>invocation function for block in void AGX::Compiler::compileProgram&lt;AGX::FragmentProgramKey, AGCDeserializedReply&gt;(AGX::FragmentProgramKey const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, MTLCompilerError, NSString*, unsigned long long) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1397" width="0.0335%" height="15" fill="rgb(206,27,48)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1407.50"></text></g><g><title>invocation function for block in void AGX::Compiler::compileProgram&lt;AGX::FragmentProgramKey, AGCDeserializedReply&gt;(AGX::FragmentProgramKey const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, MTLCompilerError, NSString*, unsigned long long) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1381" width="0.0335%" height="15" fill="rgb(225,35,8)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1391.50"></text></g><g><title>invocation function for block in void AGX::Compiler::compileProgram&lt;AGX::FragmentProgramKey, AGCDeserializedReply&gt;(AGX::FragmentProgramKey const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, AGX::CompileFunctionReplyMetadata const&amp;) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1365" width="0.0335%" height="15" fill="rgb(250,213,24)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1375.50"></text></g><g><title>invocation function for block in void AGX::UserShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::compileFunction_Impl&lt;AGX::FragmentProgramKey&gt;(AGX::FragmentProgramKey const&amp;, MTLCompileFunctionRequestData*, AGX::UserShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::DriverRequestDataImpl&lt;true&gt; const&amp;, void (AGCDeserializedReply const&amp;, AGX::CompileFunctionReplyMetadata const&amp;, AGX::UserShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::DriverReplyDataImpl&lt;true&gt; const&amp;) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1349" width="0.0335%" height="15" fill="rgb(247,123,22)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1359.50"></text></g><g><title>invocation function for block in void AGX::UserCommonShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::createFragmentProgramVariant&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG16GFamilyDevice*, unsigned long, AGXG16GFamilyBinaryArchive*, NSArray*, AGX::HAL200::FragmentProgram*, AGX::VertexProgramVaryings const*, NSObject&lt;OS_dispatch_data&gt;*, bool, void (AGX::HAL200::FragmentProgramVariant*, ReflectionKey, NSMutableDictionary*, MTLCompilerError, NSString*, NSObject&lt;OS_dispatch_data&gt;*) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1333" width="0.0335%" height="15" fill="rgb(231,138,38)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1343.50"></text></g><g><title>invocation function for block in void AGX::UserCommonShaderFactory&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::createFragmentProgramVariant&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG16GFamilyDevice*, unsigned long, AGXG16GFamilyBinaryArchive*, NSArray*, AGX::HAL200::FragmentProgram*, AGX::VertexProgramVaryings const*, NSObject&lt;OS_dispatch_data&gt;*, bool, void (AGX::HAL200::FragmentProgramVariant*, ReflectionKey, NSMutableDictionary*, MTLCompilerError, NSString*, NSObject&lt;OS_dispatch_data&gt;*) block_pointer) (1 samples, 0.03%)</title><rect x="5.7009%" y="1317" width="0.0335%" height="15" fill="rgb(231,145,46)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1327.50"></text></g><g><title>AGX::Program&lt;AGX::HAL200::FragmentProgramVariant, AGX::FragmentProgramKey, AGX::HAL200::IndirectArgumentLayout, AGXG16GFamilyIndirectArgumentBufferLayout&gt;::signalPending(unsigned long, NSObject&lt;OS_dispatch_data&gt;*, ReflectionKey const&amp;, id&lt;MTLDeviceSPI&gt;, MTLFunctionType, MTLCompilerError) (1 samples, 0.03%)</title><rect x="5.7009%" y="1301" width="0.0335%" height="15" fill="rgb(251,118,11)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1311.50"></text></g><g><title>-[MTLFunctionReflectionInternal initWithDevice:reflectionData:functionType:options:] (1 samples, 0.03%)</title><rect x="5.7009%" y="1285" width="0.0335%" height="15" fill="rgb(217,147,25)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1295.50"></text></g><g><title>MTLFragmentReflectionDeserializerAIR::deserialize(id&lt;MTLDeviceSPI&gt;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;) (1 samples, 0.03%)</title><rect x="5.7009%" y="1269" width="0.0335%" height="15" fill="rgb(247,81,37)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1279.50"></text></g><g><title>deserializeArguments(id&lt;MTLDeviceSPI&gt;, flatbuffers::Vector&lt;AirReflection::NodeId const*&gt; const*, flatbuffers&lt;id&lt;MTLDeviceSPI&gt;::Offset&lt;flatbuffers::Vector::Node&gt;&gt; const*, ReflectionDeserializeContext&amp;, MTLBindingInternal**&amp;, bool, unsigned int*) (1 samples, 0.03%)</title><rect x="5.7009%" y="1253" width="0.0335%" height="15" fill="rgb(209,12,38)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1263.50"></text></g><g><title>deserializeArgument(id&lt;MTLDeviceSPI&gt;, AirReflection::NodeId const*, flatbuffers::Vector&lt;AirReflection::NodeId const*::Offset&lt;id&lt;MTLDeviceSPI&gt;::Node&gt;&gt; const*, ReflectionDeserializeContext&amp;, MTLBindingInternal**) (1 samples, 0.03%)</title><rect x="5.7009%" y="1237" width="0.0335%" height="15" fill="rgb(227,1,9)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1247.50"></text></g><g><title>textureTypeFromString(std::__1::basic_string_view&lt;char, std::__1::char_traits&lt;char&gt;&gt;, MTLCompilerDataType*, bool*) (1 samples, 0.03%)</title><rect x="5.7009%" y="1221" width="0.0335%" height="15" fill="rgb(248,47,43)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1231.50"></text></g><g><title>bufferTypeMap() (1 samples, 0.03%)</title><rect x="5.7009%" y="1205" width="0.0335%" height="15" fill="rgb(221,10,30)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1215.50"></text></g><g><title>std::__1::__call_once(unsigned long volatile&amp;, void*, void (*)(void*)) (1 samples, 0.03%)</title><rect x="5.7009%" y="1189" width="0.0335%" height="15" fill="rgb(210,229,1)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1199.50"></text></g><g><title>bufferTypeMap()::$_0::operator()() const (1 samples, 0.03%)</title><rect x="5.7009%" y="1173" width="0.0335%" height="15" fill="rgb(222,148,37)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1183.50"></text></g><g><title>std::__1::map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, TokenData&gt;&gt;&gt;::map[abi:ne190102](std::initializer_list&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, TokenData&gt;&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt; const&amp;) (1 samples, 0.03%)</title><rect x="5.7009%" y="1157" width="0.0335%" height="15" fill="rgb(234,67,33)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1167.50"></text></g><g><title>std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData&gt;&gt;&gt;::__emplace_hint_unique_key_args&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, TokenData&gt; const&amp;&gt;(std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, TokenData&gt;, void*&gt;*, long&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, TokenData&gt; const&amp;) (1 samples, 0.03%)</title><rect x="5.7009%" y="1141" width="0.0335%" height="15" fill="rgb(247,98,35)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1151.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="5.7009%" y="1125" width="0.0335%" height="15" fill="rgb(247,138,52)" fg:x="170" fg:w="1"/><text x="5.9509%" y="1135.50"></text></g><g><title>pixels::builder::create_backing_texture (2 samples, 0.07%)</title><rect x="5.7009%" y="1637" width="0.0671%" height="15" fill="rgb(213,79,30)" fg:x="170" fg:w="2"/><text x="5.9509%" y="1647.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.03%)</title><rect x="5.7344%" y="1621" width="0.0335%" height="15" fill="rgb(246,177,23)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1631.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.03%)</title><rect x="5.7344%" y="1605" width="0.0335%" height="15" fill="rgb(230,62,27)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1615.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.03%)</title><rect x="5.7344%" y="1589" width="0.0335%" height="15" fill="rgb(216,154,8)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1599.50"></text></g><g><title>wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.03%)</title><rect x="5.7344%" y="1573" width="0.0335%" height="15" fill="rgb(244,35,45)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1583.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_shader_module (1 samples, 0.03%)</title><rect x="5.7344%" y="1557" width="0.0335%" height="15" fill="rgb(251,115,12)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1567.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.03%)</title><rect x="5.7344%" y="1541" width="0.0335%" height="15" fill="rgb(240,54,50)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1551.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.03%)</title><rect x="5.7344%" y="1525" width="0.0335%" height="15" fill="rgb(233,84,52)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1535.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1 samples, 0.03%)</title><rect x="5.7344%" y="1509" width="0.0335%" height="15" fill="rgb(207,117,47)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="5.7344%" y="1493" width="0.0335%" height="15" fill="rgb(249,43,39)" fg:x="171" fg:w="1"/><text x="5.9844%" y="1503.50"></text></g><g><title>wgpu::Adapter::request_device (1 samples, 0.03%)</title><rect x="5.7679%" y="1637" width="0.0335%" height="15" fill="rgb(209,38,44)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1647.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::adapter_request_device (1 samples, 0.03%)</title><rect x="5.7679%" y="1621" width="0.0335%" height="15" fill="rgb(236,212,23)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1631.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::adapter_request_device (1 samples, 0.03%)</title><rect x="5.7679%" y="1605" width="0.0335%" height="15" fill="rgb(242,79,21)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1615.50"></text></g><g><title>wgpu_core::instance::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::adapter_request_device (1 samples, 0.03%)</title><rect x="5.7679%" y="1589" width="0.0335%" height="15" fill="rgb(211,96,35)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1599.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (1 samples, 0.03%)</title><rect x="5.7679%" y="1573" width="0.0335%" height="15" fill="rgb(253,215,40)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1583.50"></text></g><g><title>wgpu_hal::metal::adapter::_&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Adapter&gt;::open (1 samples, 0.03%)</title><rect x="5.7679%" y="1557" width="0.0335%" height="15" fill="rgb(211,81,21)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1567.50"></text></g><g><title>-[AGXG16GFamilyDevice newCommandQueueWithDescriptor:] (1 samples, 0.03%)</title><rect x="5.7679%" y="1541" width="0.0335%" height="15" fill="rgb(208,190,38)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1551.50"></text></g><g><title>-[AGXG16GFamilyDevice setupDeferred] (1 samples, 0.03%)</title><rect x="5.7679%" y="1525" width="0.0335%" height="15" fill="rgb(235,213,38)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1535.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="5.7679%" y="1509" width="0.0335%" height="15" fill="rgb(237,122,38)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1519.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.7679%" y="1493" width="0.0335%" height="15" fill="rgb(244,218,35)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1503.50"></text></g><g><title>__36-[AGXG16GFamilyDevice setupDeferred]_block_invoke (1 samples, 0.03%)</title><rect x="5.7679%" y="1477" width="0.0335%" height="15" fill="rgb(240,68,47)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1487.50"></text></g><g><title>-[MTLCompiler compileRequestInternal:binaryArchives:failOnBinaryArchiveMiss:pipelineCache:sync:completionHandler:] (1 samples, 0.03%)</title><rect x="5.7679%" y="1461" width="0.0335%" height="15" fill="rgb(210,16,53)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1471.50"></text></g><g><title>invocation function for block in void AGX::Compiler::compileProgram&lt;ProgramKey&lt;(_AGCStreamToken)29, (AGX::DriverShaderCompilationMode)1&gt;, AGCDeserializedReply&gt;(ProgramKey&lt;(_AGCStreamToken)29, (AGX::DriverShaderCompilationMode)1&gt; const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, MTLCompilerError, NSString*, unsigned long long) block_pointer) (1 samples, 0.03%)</title><rect x="5.7679%" y="1445" width="0.0335%" height="15" fill="rgb(235,124,12)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1455.50"></text></g><g><title>invocation function for block in void AGX::Compiler::compileProgram&lt;ProgramKey&lt;(_AGCStreamToken)29, (AGX::DriverShaderCompilationMode)1&gt;, AGCDeserializedReply&gt;(ProgramKey&lt;(_AGCStreamToken)29, (AGX::DriverShaderCompilationMode)1&gt; const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, MTLCompilerError, NSString*, unsigned long long) block_pointer) (1 samples, 0.03%)</title><rect x="5.7679%" y="1429" width="0.0335%" height="15" fill="rgb(224,169,11)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1439.50"></text></g><g><title>invocation function for block in void AGX::Compiler::compileProgram&lt;ProgramKey&lt;(_AGCStreamToken)29, (AGX::DriverShaderCompilationMode)1&gt;, AGCDeserializedReply&gt;(ProgramKey&lt;(_AGCStreamToken)29, (AGX::DriverShaderCompilationMode)1&gt; const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, MTLCompilerError, NSString*, unsigned long long) block_pointer) (1 samples, 0.03%)</title><rect x="5.7679%" y="1413" width="0.0335%" height="15" fill="rgb(250,166,2)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1423.50"></text></g><g><title>invocation function for block in AGX::DeviceUSCStateLoader&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::setup(AGXG16GFamilyDevice*, AGX::Compiler&amp;, AGX::HAL200::Device&amp;, AGX::SamplerStateEncoderGen4_1&lt;AGX::HAL200::TextureFormatTable&gt;::SamplerStateFields&amp;) (1 samples, 0.03%)</title><rect x="5.7679%" y="1397" width="0.0335%" height="15" fill="rgb(242,216,29)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1407.50"></text></g><g><title>AGX::PassthroughVertexProgramVariant&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::PassthroughVertexProgramVariant(AGX::HAL200::Device&amp;, AGCDeserializedReply const&amp;, AGX::ProgramBindingRemap&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt; const&amp;, AGX::HAL200::VsStateConfig const&amp;) (1 samples, 0.03%)</title><rect x="5.7679%" y="1381" width="0.0335%" height="15" fill="rgb(230,116,27)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1391.50"></text></g><g><title>AGX::ProgramVariantESLState&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::PassthroughVertexArgumentTable, false, 7ul&gt;::ProgramVariantESLState(AGX::ProgramVariantType, AGX::HAL200::Device&amp;, AGCDeserializedReply const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, AGX::ProgramBindingRemap&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt; const&amp;, BufferView&lt;unsigned char&gt;, AGX::HAL200::IndirectArgumentLayout const* const*, AGX::USCProfileControlGen1&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt; const*, bool, bool, bool) (1 samples, 0.03%)</title><rect x="5.7679%" y="1365" width="0.0335%" height="15" fill="rgb(228,99,48)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1375.50"></text></g><g><title>void std::__1::__introsort&lt;std::__1::_ClassicAlgPolicy, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::finishRound()::&apos;lambda&apos;(auto&amp;, auto&amp;)&amp;, std::__1::__deque_iterator&lt;AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad*, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad&amp;, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad**, long, 64l&gt;, false&gt;(std::__1::__deque_iterator&lt;AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad*, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad&amp;, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad**, long, 64l&gt;, std::__1::__deque_iterator&lt;AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad*, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad&amp;, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad**, long, 64l&gt;, auto, std::__1::iterator_traits&lt;std::__1::__deque_iterator&lt;AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad*, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad&amp;, AGX::ESLStateLoadEncoderGen2&lt;AGX::HAL200::Classes, AGX::HAL200::Encoders&gt;::EslBuilder::InflightLoad**, long, 64l&gt;&gt;::difference_type, bool) (1 samples, 0.03%)</title><rect x="5.7679%" y="1349" width="0.0335%" height="15" fill="rgb(253,11,6)" fg:x="172" fg:w="1"/><text x="6.0179%" y="1359.50"></text></g><g><title>pollster::block_on (4 samples, 0.13%)</title><rect x="5.7009%" y="1653" width="0.1341%" height="15" fill="rgb(247,143,39)" fg:x="170" fg:w="4"/><text x="5.9509%" y="1663.50"></text></g><g><title>wgpu::Instance::new (1 samples, 0.03%)</title><rect x="5.8015%" y="1637" width="0.0335%" height="15" fill="rgb(236,97,10)" fg:x="173" fg:w="1"/><text x="6.0515%" y="1647.50"></text></g><g><title>wgpu_core::instance::Instance::new (1 samples, 0.03%)</title><rect x="5.8015%" y="1621" width="0.0335%" height="15" fill="rgb(233,208,19)" fg:x="173" fg:w="1"/><text x="6.0515%" y="1631.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (1 samples, 0.03%)</title><rect x="5.8015%" y="1605" width="0.0335%" height="15" fill="rgb(216,164,2)" fg:x="173" fg:w="1"/><text x="6.0515%" y="1615.50"></text></g><g><title>-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (1 samples, 0.03%)</title><rect x="5.8350%" y="1605" width="0.0335%" height="15" fill="rgb(220,129,5)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1615.50"></text></g><g><title>+[NSSystemAppearanceProxy systemProxy] (1 samples, 0.03%)</title><rect x="5.8350%" y="1589" width="0.0335%" height="15" fill="rgb(242,17,10)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1599.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="5.8350%" y="1573" width="0.0335%" height="15" fill="rgb(242,107,0)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1583.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.8350%" y="1557" width="0.0335%" height="15" fill="rgb(251,28,31)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1567.50"></text></g><g><title>__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (1 samples, 0.03%)</title><rect x="5.8350%" y="1541" width="0.0335%" height="15" fill="rgb(233,223,10)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1551.50"></text></g><g><title>-[NSSystemAppearanceProxy init] (1 samples, 0.03%)</title><rect x="5.8350%" y="1525" width="0.0335%" height="15" fill="rgb(215,21,27)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1535.50"></text></g><g><title>+[NSAppearance appearanceNamed:] (1 samples, 0.03%)</title><rect x="5.8350%" y="1509" width="0.0335%" height="15" fill="rgb(232,23,21)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1519.50"></text></g><g><title>+[NSAppearance _darkAquaAppearance] (1 samples, 0.03%)</title><rect x="5.8350%" y="1493" width="0.0335%" height="15" fill="rgb(244,5,23)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1503.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="5.8350%" y="1477" width="0.0335%" height="15" fill="rgb(226,81,46)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1487.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.8350%" y="1461" width="0.0335%" height="15" fill="rgb(247,70,30)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1471.50"></text></g><g><title>__33+[NSAppearance _initializeCoreUI]_block_invoke (1 samples, 0.03%)</title><rect x="5.8350%" y="1445" width="0.0335%" height="15" fill="rgb(212,68,19)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1455.50"></text></g><g><title>_NSFaultInObject (1 samples, 0.03%)</title><rect x="5.8350%" y="1429" width="0.0335%" height="15" fill="rgb(240,187,13)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1439.50"></text></g><g><title>-[NSBuiltinAppearance initWithBundleResourceName:publicName:catalystName:] (1 samples, 0.03%)</title><rect x="5.8350%" y="1413" width="0.0335%" height="15" fill="rgb(223,113,26)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1423.50"></text></g><g><title>-[NSAppearance initWithAppearanceNamed:bundle:] (1 samples, 0.03%)</title><rect x="5.8350%" y="1397" width="0.0335%" height="15" fill="rgb(206,192,2)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1407.50"></text></g><g><title>NSCreateCoreUIRenderer (1 samples, 0.03%)</title><rect x="5.8350%" y="1381" width="0.0335%" height="15" fill="rgb(241,108,4)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1391.50"></text></g><g><title>CUIRenderer::Create(__CFDictionary const*) (1 samples, 0.03%)</title><rect x="5.8350%" y="1365" width="0.0335%" height="15" fill="rgb(247,173,49)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1375.50"></text></g><g><title>CUICoreThemeRenderer::CUICoreThemeRenderer(__CFDictionary const*) (1 samples, 0.03%)</title><rect x="5.8350%" y="1349" width="0.0335%" height="15" fill="rgb(224,114,35)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1359.50"></text></g><g><title>+[CUIThemeFacet themeNamed:forBundleIdentifier:error:] (1 samples, 0.03%)</title><rect x="5.8350%" y="1333" width="0.0335%" height="15" fill="rgb(245,159,27)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1343.50"></text></g><g><title>PerformBlockWithThemeRefCache (1 samples, 0.03%)</title><rect x="5.8350%" y="1317" width="0.0335%" height="15" fill="rgb(245,172,44)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1327.50"></text></g><g><title>__RunTimeThemeRefForBundleIdentifierAndName_block_invoke (1 samples, 0.03%)</title><rect x="5.8350%" y="1301" width="0.0335%" height="15" fill="rgb(236,23,11)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1311.50"></text></g><g><title>-[CUIStructuredThemeStore initWithPath:] (1 samples, 0.03%)</title><rect x="5.8350%" y="1285" width="0.0335%" height="15" fill="rgb(205,117,38)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1295.50"></text></g><g><title>-[CUICommonAssetStorage initWithPath:forWriting:] (1 samples, 0.03%)</title><rect x="5.8350%" y="1269" width="0.0335%" height="15" fill="rgb(237,72,25)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1279.50"></text></g><g><title>BOMStorageOpenWithSys (1 samples, 0.03%)</title><rect x="5.8350%" y="1253" width="0.0335%" height="15" fill="rgb(244,70,9)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1263.50"></text></g><g><title>read (1 samples, 0.03%)</title><rect x="5.8350%" y="1237" width="0.0335%" height="15" fill="rgb(217,125,39)" fg:x="174" fg:w="1"/><text x="6.0850%" y="1247.50"></text></g><g><title>-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 0.03%)</title><rect x="5.8685%" y="1605" width="0.0335%" height="15" fill="rgb(235,36,10)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1615.50"></text></g><g><title>-[NSObject(NSKeyValueObserverRegistration) _addObserver:forProperty:options:context:] (1 samples, 0.03%)</title><rect x="5.8685%" y="1589" width="0.0335%" height="15" fill="rgb(251,123,47)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1599.50"></text></g><g><title>-[NSKeyValueUnnestedProperty isaForAutonotifying] (1 samples, 0.03%)</title><rect x="5.8685%" y="1573" width="0.0335%" height="15" fill="rgb(221,13,13)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1583.50"></text></g><g><title>-[NSKeyValueUnnestedProperty _isaForAutonotifying] (1 samples, 0.03%)</title><rect x="5.8685%" y="1557" width="0.0335%" height="15" fill="rgb(238,131,9)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1567.50"></text></g><g><title>_NSKVONotifyingEnableForInfoAndKey (1 samples, 0.03%)</title><rect x="5.8685%" y="1541" width="0.0335%" height="15" fill="rgb(211,50,8)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1551.50"></text></g><g><title>_NSKeyValueSetterForClassAndKey (1 samples, 0.03%)</title><rect x="5.8685%" y="1525" width="0.0335%" height="15" fill="rgb(245,182,24)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1535.50"></text></g><g><title>+[NSObject(NSKeyValueCodingPrivate) _createValueSetterWithContainerClassID:key:] (1 samples, 0.03%)</title><rect x="5.8685%" y="1509" width="0.0335%" height="15" fill="rgb(242,14,37)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1519.50"></text></g><g><title>+[NSObject(NSKeyValueCodingPrivate) _createValuePrimitiveSetterWithContainerClassID:key:] (1 samples, 0.03%)</title><rect x="5.8685%" y="1493" width="0.0335%" height="15" fill="rgb(246,228,12)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1503.50"></text></g><g><title>+[NSObject(NSKeyValueCodingPrivate) _createOtherValueSetterWithContainerClassID:key:] (1 samples, 0.03%)</title><rect x="5.8685%" y="1477" width="0.0335%" height="15" fill="rgb(213,55,15)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1487.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="5.8685%" y="1461" width="0.0335%" height="15" fill="rgb(209,9,3)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1471.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="5.8685%" y="1445" width="0.0335%" height="15" fill="rgb(230,59,30)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1455.50"></text></g><g><title>initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin&lt;objc_lock_base_t&gt;&gt;&amp;, bool) (1 samples, 0.03%)</title><rect x="5.8685%" y="1429" width="0.0335%" height="15" fill="rgb(209,121,21)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1439.50"></text></g><g><title>realizeClassMaybeSwiftMaybeRelock(objc_class*, locker_mixin&lt;lockdebug::lock_mixin&lt;objc_lock_base_t&gt;&gt;&amp;, bool) (1 samples, 0.03%)</title><rect x="5.8685%" y="1413" width="0.0335%" height="15" fill="rgb(220,109,13)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1423.50"></text></g><g><title>realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.03%)</title><rect x="5.8685%" y="1397" width="0.0335%" height="15" fill="rgb(232,18,1)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1407.50"></text></g><g><title>realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.03%)</title><rect x="5.8685%" y="1381" width="0.0335%" height="15" fill="rgb(215,41,42)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1391.50"></text></g><g><title>nanov2_size (1 samples, 0.03%)</title><rect x="5.8685%" y="1365" width="0.0335%" height="15" fill="rgb(224,123,36)" fg:x="175" fg:w="1"/><text x="6.1185%" y="1375.50"></text></g><g><title>-[NSResponder init] (1 samples, 0.03%)</title><rect x="5.9021%" y="1605" width="0.0335%" height="15" fill="rgb(240,125,3)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1615.50"></text></g><g><title>_NSDPClassInfoForClass (1 samples, 0.03%)</title><rect x="5.9021%" y="1589" width="0.0335%" height="15" fill="rgb(205,98,50)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1599.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="5.9021%" y="1573" width="0.0335%" height="15" fill="rgb(205,185,37)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1583.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="5.9021%" y="1557" width="0.0335%" height="15" fill="rgb(238,207,15)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1567.50"></text></g><g><title>initializePropertyInfo (1 samples, 0.03%)</title><rect x="5.9021%" y="1541" width="0.0335%" height="15" fill="rgb(213,199,42)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1551.50"></text></g><g><title>+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (1 samples, 0.03%)</title><rect x="5.9021%" y="1525" width="0.0335%" height="15" fill="rgb(235,201,11)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1535.50"></text></g><g><title>_NSDPAccessorSelectorFromComponents (1 samples, 0.03%)</title><rect x="5.9021%" y="1509" width="0.0335%" height="15" fill="rgb(207,46,11)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1519.50"></text></g><g><title>__sel_registerName(char const*, bool, bool) (1 samples, 0.03%)</title><rect x="5.9021%" y="1493" width="0.0335%" height="15" fill="rgb(241,35,35)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1503.50"></text></g><g><title>std::__1::pair&lt;objc::DenseMapIterator&lt;char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo&lt;objc::detail::DenseSetEmpty&gt;, objc::DenseMapInfo&lt;char const*&gt;, objc::detail::DenseSetPair&lt;char const*&gt;, false&gt;, bool&gt; objc::DenseMapBase&lt;objc::DenseMap&lt;char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo&lt;objc::detail::DenseSetEmpty&gt;, objc::DenseMapInfo&lt;char const*&gt;, objc::detail::DenseSetPair&lt;char const*&gt;&gt;, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo&lt;objc::detail::DenseSetEmpty&gt;, objc::DenseMapInfo&lt;char const*&gt;, objc::detail::DenseSetPair&lt;char const*&gt;&gt;::try_emplace&lt;objc::detail::DenseSetEmpty&amp;&gt;(char const* const&amp;, objc::detail::DenseSetEmpty&amp;) (1 samples, 0.03%)</title><rect x="5.9021%" y="1477" width="0.0335%" height="15" fill="rgb(243,32,47)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1487.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo&lt;objc::detail::DenseSetEmpty&gt;, objc::DenseMapInfo&lt;char const*&gt;, objc::detail::DenseSetPair&lt;char const*&gt;&gt;, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo&lt;objc::detail::DenseSetEmpty&gt;, objc::DenseMapInfo&lt;char const*&gt;, objc::detail::DenseSetPair&lt;char const*&gt;&gt;::LookupBucketFor&lt;char const*&gt;(char const* const&amp;, objc::detail::DenseSetPair&lt;char const*&gt; const*&amp;) const (1 samples, 0.03%)</title><rect x="5.9021%" y="1461" width="0.0335%" height="15" fill="rgb(247,202,23)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1471.50"></text></g><g><title>_platform_strcmp$VARIANT$Base (1 samples, 0.03%)</title><rect x="5.9021%" y="1445" width="0.0335%" height="15" fill="rgb(219,102,11)" fg:x="176" fg:w="1"/><text x="6.1521%" y="1455.50"></text></g><g><title>_LSRegisterSelf (1 samples, 0.03%)</title><rect x="5.9356%" y="1477" width="0.0335%" height="15" fill="rgb(243,110,44)" fg:x="177" fg:w="1"/><text x="6.1856%" y="1487.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="5.9356%" y="1461" width="0.0335%" height="15" fill="rgb(222,74,54)" fg:x="177" fg:w="1"/><text x="6.1856%" y="1471.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="5.9356%" y="1445" width="0.0335%" height="15" fill="rgb(216,99,12)" fg:x="177" fg:w="1"/><text x="6.1856%" y="1455.50"></text></g><g><title>+[NSApplication sharedApplication] (5 samples, 0.17%)</title><rect x="5.8350%" y="1637" width="0.1677%" height="15" fill="rgb(226,22,26)" fg:x="174" fg:w="5"/><text x="6.0850%" y="1647.50"></text></g><g><title>-[NSApplication init] (5 samples, 0.17%)</title><rect x="5.8350%" y="1621" width="0.1677%" height="15" fill="rgb(217,163,10)" fg:x="174" fg:w="5"/><text x="6.0850%" y="1631.50"></text></g><g><title>_NSInitializeAppContext (2 samples, 0.07%)</title><rect x="5.9356%" y="1605" width="0.0671%" height="15" fill="rgb(213,25,53)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1615.50"></text></g><g><title>+[NSMenuBarPresentationInstance _isMenuBarVisible] (2 samples, 0.07%)</title><rect x="5.9356%" y="1589" width="0.0671%" height="15" fill="rgb(252,105,26)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1599.50"></text></g><g><title>-[NSMenuBarPresentationInstance _isVisible] (2 samples, 0.07%)</title><rect x="5.9356%" y="1573" width="0.0671%" height="15" fill="rgb(220,39,43)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1583.50"></text></g><g><title>_NSGetAggregateUIMode (2 samples, 0.07%)</title><rect x="5.9356%" y="1557" width="0.0671%" height="15" fill="rgb(229,68,48)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1567.50"></text></g><g><title>-[NSMenuBarPresentationInstance _getAggregateUIMode:withOptions:] (2 samples, 0.07%)</title><rect x="5.9356%" y="1541" width="0.0671%" height="15" fill="rgb(252,8,32)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1551.50"></text></g><g><title>GetCurrentProcess (2 samples, 0.07%)</title><rect x="5.9356%" y="1525" width="0.0671%" height="15" fill="rgb(223,20,43)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1535.50"></text></g><g><title>_RegisterApplication (2 samples, 0.07%)</title><rect x="5.9356%" y="1509" width="0.0671%" height="15" fill="rgb(229,81,49)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1519.50"></text></g><g><title>_LSApplicationCheckIn (2 samples, 0.07%)</title><rect x="5.9356%" y="1493" width="0.0671%" height="15" fill="rgb(236,28,36)" fg:x="177" fg:w="2"/><text x="6.1856%" y="1503.50"></text></g><g><title>asString(void const*) (1 samples, 0.03%)</title><rect x="5.9691%" y="1477" width="0.0335%" height="15" fill="rgb(249,185,26)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1487.50"></text></g><g><title>asString(void const*) (1 samples, 0.03%)</title><rect x="5.9691%" y="1461" width="0.0335%" height="15" fill="rgb(249,174,33)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1471.50"></text></g><g><title>CFAbsoluteTimeGetGregorianDate (1 samples, 0.03%)</title><rect x="5.9691%" y="1445" width="0.0335%" height="15" fill="rgb(233,201,37)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1455.50"></text></g><g><title>CFTimeZoneGetSecondsFromGMT (1 samples, 0.03%)</title><rect x="5.9691%" y="1429" width="0.0335%" height="15" fill="rgb(221,78,26)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1439.50"></text></g><g><title>@objc _NSSwiftTimeZone.secondsFromGMT(for:) (1 samples, 0.03%)</title><rect x="5.9691%" y="1413" width="0.0335%" height="15" fill="rgb(250,127,30)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1423.50"></text></g><g><title>_TimeZoneICU.secondsFromGMT(for:) (1 samples, 0.03%)</title><rect x="5.9691%" y="1397" width="0.0335%" height="15" fill="rgb(230,49,44)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1407.50"></text></g><g><title>icu::Calendar::get(UCalendarDateFields, UErrorCode&amp;) const (1 samples, 0.03%)</title><rect x="5.9691%" y="1381" width="0.0335%" height="15" fill="rgb(229,67,23)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1391.50"></text></g><g><title>icu::Calendar::complete(UErrorCode&amp;) (1 samples, 0.03%)</title><rect x="5.9691%" y="1365" width="0.0335%" height="15" fill="rgb(249,83,47)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1375.50"></text></g><g><title>icu::Calendar::computeFields(UErrorCode&amp;) (1 samples, 0.03%)</title><rect x="5.9691%" y="1349" width="0.0335%" height="15" fill="rgb(215,43,3)" fg:x="178" fg:w="1"/><text x="6.2191%" y="1359.50"></text></g><g><title>winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (6 samples, 0.20%)</title><rect x="5.8350%" y="1653" width="0.2012%" height="15" fill="rgb(238,154,13)" fg:x="174" fg:w="6"/><text x="6.0850%" y="1663.50"></text></g><g><title>&lt;winit::platform_impl::platform::app::WinitApplication as objc2::class_type::ClassType&gt;::class (1 samples, 0.03%)</title><rect x="6.0027%" y="1637" width="0.0335%" height="15" fill="rgb(219,56,2)" fg:x="179" fg:w="1"/><text x="6.2527%" y="1647.50"></text></g><g><title>-[NSResponder init] (1 samples, 0.03%)</title><rect x="6.0362%" y="1605" width="0.0335%" height="15" fill="rgb(233,0,4)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1615.50"></text></g><g><title>_NSDPClassInfoForClass (1 samples, 0.03%)</title><rect x="6.0362%" y="1589" width="0.0335%" height="15" fill="rgb(235,30,7)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1599.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="6.0362%" y="1573" width="0.0335%" height="15" fill="rgb(250,79,13)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1583.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="6.0362%" y="1557" width="0.0335%" height="15" fill="rgb(211,146,34)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1567.50"></text></g><g><title>initializePropertyInfo (1 samples, 0.03%)</title><rect x="6.0362%" y="1541" width="0.0335%" height="15" fill="rgb(228,22,38)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1551.50"></text></g><g><title>+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (1 samples, 0.03%)</title><rect x="6.0362%" y="1525" width="0.0335%" height="15" fill="rgb(235,168,5)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1535.50"></text></g><g><title>dyld4::APIs::dyld_image_header_containing_address(void const*) (1 samples, 0.03%)</title><rect x="6.0362%" y="1509" width="0.0335%" height="15" fill="rgb(221,155,16)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1519.50"></text></g><g><title>dyld4::APIs::findImageMappedAt(void const*, dyld3::MachOLoaded const**, bool*, char const**, void const**, unsigned long long*, unsigned char*, dyld4::Loader const**) (1 samples, 0.03%)</title><rect x="6.0362%" y="1493" width="0.0335%" height="15" fill="rgb(215,215,53)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1503.50"></text></g><g><title>dyld4::RuntimeLocks::withLoadersReadLock(void () block_pointer) (1 samples, 0.03%)</title><rect x="6.0362%" y="1477" width="0.0335%" height="15" fill="rgb(223,4,10)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1487.50"></text></g><g><title>invocation function for block in dyld4::APIs::findImageMappedAt(void const*, dyld3::MachOLoaded const**, bool*, char const**, void const**, unsigned long long*, unsigned char*, dyld4::Loader const**) (1 samples, 0.03%)</title><rect x="6.0362%" y="1461" width="0.0335%" height="15" fill="rgb(234,103,6)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1471.50"></text></g><g><title>dyld4::PrebuiltLoader::contains(dyld4::RuntimeState&amp;, void const*, void const**, unsigned long long*, unsigned char*) const (1 samples, 0.03%)</title><rect x="6.0362%" y="1445" width="0.0335%" height="15" fill="rgb(227,97,0)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1455.50"></text></g><g><title>dyld4::RuntimeState::cachedDylibLoadAddress(unsigned short) const (1 samples, 0.03%)</title><rect x="6.0362%" y="1429" width="0.0335%" height="15" fill="rgb(234,150,53)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1439.50"></text></g><g><title>DyldSharedCache::getIndexedImageEntry(unsigned int, unsigned long long&amp;, unsigned long long&amp;) const (1 samples, 0.03%)</title><rect x="6.0362%" y="1413" width="0.0335%" height="15" fill="rgb(228,201,54)" fg:x="180" fg:w="1"/><text x="6.2862%" y="1423.50"></text></g><g><title>-[NSThemeFrame _tileTitlebarAndRedisplay:] (1 samples, 0.03%)</title><rect x="6.0698%" y="1429" width="0.0335%" height="15" fill="rgb(222,22,37)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1439.50"></text></g><g><title>-[NSThemeFrame _updateTitleTextField] (1 samples, 0.03%)</title><rect x="6.0698%" y="1413" width="0.0335%" height="15" fill="rgb(237,53,32)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1423.50"></text></g><g><title>-[NSControl didChangeValueForKey:] (1 samples, 0.03%)</title><rect x="6.0698%" y="1397" width="0.0335%" height="15" fill="rgb(233,25,53)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1407.50"></text></g><g><title>-[NSView didChangeValueForKey:] (1 samples, 0.03%)</title><rect x="6.0698%" y="1381" width="0.0335%" height="15" fill="rgb(210,40,34)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1391.50"></text></g><g><title>-[NSView _updateLayerBackedness] (1 samples, 0.03%)</title><rect x="6.0698%" y="1365" width="0.0335%" height="15" fill="rgb(241,220,44)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1375.50"></text></g><g><title>-[NSView _createLayerAndInitialize] (1 samples, 0.03%)</title><rect x="6.0698%" y="1349" width="0.0335%" height="15" fill="rgb(235,28,35)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1359.50"></text></g><g><title>-[NSView(NSPrivateLayerSupport) _createLayer] (1 samples, 0.03%)</title><rect x="6.0698%" y="1333" width="0.0335%" height="15" fill="rgb(210,56,17)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1343.50"></text></g><g><title>+[CALayer layer] (1 samples, 0.03%)</title><rect x="6.0698%" y="1317" width="0.0335%" height="15" fill="rgb(224,130,29)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1327.50"></text></g><g><title>-[CALayer init] (1 samples, 0.03%)</title><rect x="6.0698%" y="1301" width="0.0335%" height="15" fill="rgb(235,212,8)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1311.50"></text></g><g><title>CA::Layer::class_state(objc_class*) (1 samples, 0.03%)</title><rect x="6.0698%" y="1285" width="0.0335%" height="15" fill="rgb(223,33,50)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1295.50"></text></g><g><title>classDescription(objc_class*) (1 samples, 0.03%)</title><rect x="6.0698%" y="1269" width="0.0335%" height="15" fill="rgb(219,149,13)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1279.50"></text></g><g><title>classDescription_locked(objc_class*) (1 samples, 0.03%)</title><rect x="6.0698%" y="1253" width="0.0335%" height="15" fill="rgb(250,156,29)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1263.50"></text></g><g><title>classDescription_locked(objc_class*) (1 samples, 0.03%)</title><rect x="6.0698%" y="1237" width="0.0335%" height="15" fill="rgb(216,193,19)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1247.50"></text></g><g><title>CAInternAtomWithCString (1 samples, 0.03%)</title><rect x="6.0698%" y="1221" width="0.0335%" height="15" fill="rgb(216,135,14)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1231.50"></text></g><g><title>initAtoms (1 samples, 0.03%)</title><rect x="6.0698%" y="1205" width="0.0335%" height="15" fill="rgb(241,47,5)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1215.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="6.0698%" y="1189" width="0.0335%" height="15" fill="rgb(233,42,35)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1199.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.03%)</title><rect x="6.0698%" y="1173" width="0.0335%" height="15" fill="rgb(231,13,6)" fg:x="181" fg:w="1"/><text x="6.3198%" y="1183.50"></text></g><g><title>-[NSButtonCell initTextCell:] (1 samples, 0.03%)</title><rect x="6.1033%" y="1333" width="0.0335%" height="15" fill="rgb(207,181,40)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1343.50"></text></g><g><title>-[NSButtonCell _convertToText:] (1 samples, 0.03%)</title><rect x="6.1033%" y="1317" width="0.0335%" height="15" fill="rgb(254,173,49)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1327.50"></text></g><g><title>-[NSCell _convertToText:] (1 samples, 0.03%)</title><rect x="6.1033%" y="1301" width="0.0335%" height="15" fill="rgb(221,1,38)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1311.50"></text></g><g><title>+[NSFont systemFontOfSize:width:] (1 samples, 0.03%)</title><rect x="6.1033%" y="1285" width="0.0335%" height="15" fill="rgb(206,124,46)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1295.50"></text></g><g><title>__NSGetMetaFontInstanceWithType (1 samples, 0.03%)</title><rect x="6.1033%" y="1269" width="0.0335%" height="15" fill="rgb(249,21,11)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1279.50"></text></g><g><title>+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (1 samples, 0.03%)</title><rect x="6.1033%" y="1253" width="0.0335%" height="15" fill="rgb(222,201,40)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1263.50"></text></g><g><title>-[NSConcreteMapTable setObject:forKey:] (1 samples, 0.03%)</title><rect x="6.1033%" y="1237" width="0.0335%" height="15" fill="rgb(235,61,29)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1247.50"></text></g><g><title>probeGC (1 samples, 0.03%)</title><rect x="6.1033%" y="1221" width="0.0335%" height="15" fill="rgb(219,207,3)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1231.50"></text></g><g><title>TDescriptor::Hash() const (1 samples, 0.03%)</title><rect x="6.1033%" y="1205" width="0.0335%" height="15" fill="rgb(222,56,46)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1215.50"></text></g><g><title>TDescriptor::InitBaseFont(unsigned long, double) (1 samples, 0.03%)</title><rect x="6.1033%" y="1189" width="0.0335%" height="15" fill="rgb(239,76,54)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1199.50"></text></g><g><title>TDescriptor::CreateMatchingDescriptorInternal(__CFSet const*, unsigned long) const (1 samples, 0.03%)</title><rect x="6.1033%" y="1173" width="0.0335%" height="15" fill="rgb(231,124,27)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1183.50"></text></g><g><title>TDescriptorSource::CopySplicedDescriptorForName(__CFString const*, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*, __CFNumber const*, __CFString const*, __CFNumber const*, __CFNumber const*, __CFNumber const*, __CFNumber const*, unsigned int, __CFString const*) const (1 samples, 0.03%)</title><rect x="6.1033%" y="1157" width="0.0335%" height="15" fill="rgb(249,195,6)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1167.50"></text></g><g><title>TDescriptorSource::CopySpliceFontForName(__CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*, __CFNumber const*, __CFString const*, __CFNumber const*, __CFNumber const*, __CFNumber const*, __CFNumber const*, unsigned int, __CFString const*) (1 samples, 0.03%)</title><rect x="6.1033%" y="1141" width="0.0335%" height="15" fill="rgb(237,174,47)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1151.50"></text></g><g><title>MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*, void const*, __CFString const*) (1 samples, 0.03%)</title><rect x="6.1033%" y="1125" width="0.0335%" height="15" fill="rgb(206,201,31)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1135.50"></text></g><g><title>AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (1 samples, 0.03%)</title><rect x="6.1033%" y="1109" width="0.0335%" height="15" fill="rgb(231,57,52)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1119.50"></text></g><g><title>XTCopyFontWithName (1 samples, 0.03%)</title><rect x="6.1033%" y="1093" width="0.0335%" height="15" fill="rgb(248,177,22)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1103.50"></text></g><g><title>TGlobalFontRegistry::TGlobalFontRegistry() (1 samples, 0.03%)</title><rect x="6.1033%" y="1077" width="0.0335%" height="15" fill="rgb(215,211,37)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1087.50"></text></g><g><title>pthread_once (1 samples, 0.03%)</title><rect x="6.1033%" y="1061" width="0.0335%" height="15" fill="rgb(241,128,51)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1071.50"></text></g><g><title>_os_once (1 samples, 0.03%)</title><rect x="6.1033%" y="1045" width="0.0335%" height="15" fill="rgb(227,165,31)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1055.50"></text></g><g><title>_os_once_callout (1 samples, 0.03%)</title><rect x="6.1033%" y="1029" width="0.0335%" height="15" fill="rgb(228,167,24)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1039.50"></text></g><g><title>__pthread_once_handler (1 samples, 0.03%)</title><rect x="6.1033%" y="1013" width="0.0335%" height="15" fill="rgb(228,143,12)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1023.50"></text></g><g><title>TGlobalFontRegistry::CreateRegistry() (1 samples, 0.03%)</title><rect x="6.1033%" y="997" width="0.0335%" height="15" fill="rgb(249,149,8)" fg:x="182" fg:w="1"/><text x="6.3533%" y="1007.50"></text></g><g><title>TGlobalFontRegistryImp::RendezvousWithServer(bool&amp;) const (1 samples, 0.03%)</title><rect x="6.1033%" y="981" width="0.0335%" height="15" fill="rgb(243,35,44)" fg:x="182" fg:w="1"/><text x="6.3533%" y="991.50"></text></g><g><title>-[XTypeXPCClient XTRendezvous:] (1 samples, 0.03%)</title><rect x="6.1033%" y="965" width="0.0335%" height="15" fill="rgb(246,89,9)" fg:x="182" fg:w="1"/><text x="6.3533%" y="975.50"></text></g><g><title>-[XTypeXPCClient run:errorHandler:] (1 samples, 0.03%)</title><rect x="6.1033%" y="949" width="0.0335%" height="15" fill="rgb(233,213,13)" fg:x="182" fg:w="1"/><text x="6.3533%" y="959.50"></text></g><g><title>__31-[XTypeXPCClient XTRendezvous:]_block_invoke (1 samples, 0.03%)</title><rect x="6.1033%" y="933" width="0.0335%" height="15" fill="rgb(233,141,41)" fg:x="182" fg:w="1"/><text x="6.3533%" y="943.50"></text></g><g><title>_NSXPCDistantObjectSimpleMessageSend1 (1 samples, 0.03%)</title><rect x="6.1033%" y="917" width="0.0335%" height="15" fill="rgb(239,167,4)" fg:x="182" fg:w="1"/><text x="6.3533%" y="927.50"></text></g><g><title>-[NSXPCConnection _sendSelector:withProxy:arg1:] (1 samples, 0.03%)</title><rect x="6.1033%" y="901" width="0.0335%" height="15" fill="rgb(209,217,16)" fg:x="182" fg:w="1"/><text x="6.3533%" y="911.50"></text></g><g><title>-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.03%)</title><rect x="6.1033%" y="885" width="0.0335%" height="15" fill="rgb(219,88,35)" fg:x="182" fg:w="1"/><text x="6.3533%" y="895.50"></text></g><g><title>__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (1 samples, 0.03%)</title><rect x="6.1033%" y="869" width="0.0335%" height="15" fill="rgb(220,193,23)" fg:x="182" fg:w="1"/><text x="6.3533%" y="879.50"></text></g><g><title>-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (1 samples, 0.03%)</title><rect x="6.1033%" y="853" width="0.0335%" height="15" fill="rgb(230,90,52)" fg:x="182" fg:w="1"/><text x="6.3533%" y="863.50"></text></g><g><title>-[NSXPCDecoder _decodeReplyFromXPCObject:forSelector:] (1 samples, 0.03%)</title><rect x="6.1033%" y="837" width="0.0335%" height="15" fill="rgb(252,106,19)" fg:x="182" fg:w="1"/><text x="6.3533%" y="847.50"></text></g><g><title>-[NSXPCDecoder __decodeXPCObject:allowingSimpleMessageSend:outInvocation:outArguments:outArgumentsMaxCount:outMethodSignature:outSelector:isReply:replySelector:] (1 samples, 0.03%)</title><rect x="6.1033%" y="821" width="0.0335%" height="15" fill="rgb(206,74,20)" fg:x="182" fg:w="1"/><text x="6.3533%" y="831.50"></text></g><g><title>_NSXPCSerializationDecodeInvocationArgumentArray (1 samples, 0.03%)</title><rect x="6.1033%" y="805" width="0.0335%" height="15" fill="rgb(230,138,44)" fg:x="182" fg:w="1"/><text x="6.3533%" y="815.50"></text></g><g><title>_NSXPCSerializationDecodeTypedObjCValuesFromArray (1 samples, 0.03%)</title><rect x="6.1033%" y="789" width="0.0335%" height="15" fill="rgb(235,182,43)" fg:x="182" fg:w="1"/><text x="6.3533%" y="799.50"></text></g><g><title>-[NSXPCDecoder _decodeObjectOfClasses:atObject:] (1 samples, 0.03%)</title><rect x="6.1033%" y="773" width="0.0335%" height="15" fill="rgb(242,16,51)" fg:x="182" fg:w="1"/><text x="6.3533%" y="783.50"></text></g><g><title>_decodeObject (1 samples, 0.03%)</title><rect x="6.1033%" y="757" width="0.0335%" height="15" fill="rgb(248,9,4)" fg:x="182" fg:w="1"/><text x="6.3533%" y="767.50"></text></g><g><title>-[NSDictionary(NSDictionary) initWithCoder:] (1 samples, 0.03%)</title><rect x="6.1033%" y="741" width="0.0335%" height="15" fill="rgb(210,31,22)" fg:x="182" fg:w="1"/><text x="6.3533%" y="751.50"></text></g><g><title>-[NSXPCDecoder _decodeArrayOfObjectsForKey:] (1 samples, 0.03%)</title><rect x="6.1033%" y="725" width="0.0335%" height="15" fill="rgb(239,54,39)" fg:x="182" fg:w="1"/><text x="6.3533%" y="735.50"></text></g><g><title>_NSXPCSerializationIterateArrayObject (1 samples, 0.03%)</title><rect x="6.1033%" y="709" width="0.0335%" height="15" fill="rgb(230,99,41)" fg:x="182" fg:w="1"/><text x="6.3533%" y="719.50"></text></g><g><title>__44-[NSXPCDecoder _decodeArrayOfObjectsForKey:]_block_invoke (1 samples, 0.03%)</title><rect x="6.1033%" y="693" width="0.0335%" height="15" fill="rgb(253,106,12)" fg:x="182" fg:w="1"/><text x="6.3533%" y="703.50"></text></g><g><title>_decodeObject (1 samples, 0.03%)</title><rect x="6.1033%" y="677" width="0.0335%" height="15" fill="rgb(213,46,41)" fg:x="182" fg:w="1"/><text x="6.3533%" y="687.50"></text></g><g><title>-[NSURL(NSURL) initWithCoder:] (1 samples, 0.03%)</title><rect x="6.1033%" y="661" width="0.0335%" height="15" fill="rgb(215,133,35)" fg:x="182" fg:w="1"/><text x="6.3533%" y="671.50"></text></g><g><title>-[NSURL(NSURL) initWithString:relativeToURL:encodingInvalidCharacters:] (1 samples, 0.03%)</title><rect x="6.1033%" y="645" width="0.0335%" height="15" fill="rgb(213,28,5)" fg:x="182" fg:w="1"/><text x="6.3533%" y="655.50"></text></g><g><title>@objc static NSURLComponents._parseString(_:encodingInvalidCharacters:compatibility:) (1 samples, 0.03%)</title><rect x="6.1033%" y="629" width="0.0335%" height="15" fill="rgb(215,77,49)" fg:x="182" fg:w="1"/><text x="6.3533%" y="639.50"></text></g><g><title>specialized static RFC3986Parser.parse(urlString:encodingInvalidCharacters:compatibility:) (1 samples, 0.03%)</title><rect x="6.1033%" y="613" width="0.0335%" height="15" fill="rgb(248,100,22)" fg:x="182" fg:w="1"/><text x="6.3533%" y="623.50"></text></g><g><title>specialized static RFC3986Parser.invalidComponents(of:) (1 samples, 0.03%)</title><rect x="6.1033%" y="597" width="0.0335%" height="15" fill="rgb(208,67,9)" fg:x="182" fg:w="1"/><text x="6.3533%" y="607.50"></text></g><g><title>specialized Slice.withContiguousStorageIfAvailable&lt;A&gt;(_:) (1 samples, 0.03%)</title><rect x="6.1033%" y="581" width="0.0335%" height="15" fill="rgb(219,133,21)" fg:x="182" fg:w="1"/><text x="6.3533%" y="591.50"></text></g><g><title>specialized closure #1 in Slice.withContiguousStorageIfAvailable&lt;A&gt;(_:) (1 samples, 0.03%)</title><rect x="6.1033%" y="565" width="0.0335%" height="15" fill="rgb(246,46,29)" fg:x="182" fg:w="1"/><text x="6.3533%" y="575.50"></text></g><g><title>specialized static RFC3986Parser.validate&lt;A&gt;(buffer:component:percentEncodingAllowed:) (1 samples, 0.03%)</title><rect x="6.1033%" y="549" width="0.0335%" height="15" fill="rgb(246,185,52)" fg:x="182" fg:w="1"/><text x="6.3533%" y="559.50"></text></g><g><title>-[NSThemeFrame newCloseButton] (2 samples, 0.07%)</title><rect x="6.1033%" y="1429" width="0.0671%" height="15" fill="rgb(252,136,11)" fg:x="182" fg:w="2"/><text x="6.3533%" y="1439.50"></text></g><g><title>+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (2 samples, 0.07%)</title><rect x="6.1033%" y="1413" width="0.0671%" height="15" fill="rgb(219,138,53)" fg:x="182" fg:w="2"/><text x="6.3533%" y="1423.50"></text></g><g><title>-[_NSThemeWidget initWithButtonID:] (2 samples, 0.07%)</title><rect x="6.1033%" y="1397" width="0.0671%" height="15" fill="rgb(211,51,23)" fg:x="182" fg:w="2"/><text x="6.3533%" y="1407.50"></text></g><g><title>-[NSButton initWithFrame:] (2 samples, 0.07%)</title><rect x="6.1033%" y="1381" width="0.0671%" height="15" fill="rgb(247,221,28)" fg:x="182" fg:w="2"/><text x="6.3533%" y="1391.50"></text></g><g><title>-[NSControl initWithFrame:] (2 samples, 0.07%)</title><rect x="6.1033%" y="1365" width="0.0671%" height="15" fill="rgb(251,222,45)" fg:x="182" fg:w="2"/><text x="6.3533%" y="1375.50"></text></g><g><title>-[NSButtonCell init] (2 samples, 0.07%)</title><rect x="6.1033%" y="1349" width="0.0671%" height="15" fill="rgb(217,162,53)" fg:x="182" fg:w="2"/><text x="6.3533%" y="1359.50"></text></g><g><title>_NXKitString (1 samples, 0.03%)</title><rect x="6.1368%" y="1333" width="0.0335%" height="15" fill="rgb(229,93,14)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1343.50"></text></g><g><title>_NSKitBundle (1 samples, 0.03%)</title><rect x="6.1368%" y="1317" width="0.0335%" height="15" fill="rgb(209,67,49)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1327.50"></text></g><g><title>_NSLocateKitBundle (1 samples, 0.03%)</title><rect x="6.1368%" y="1301" width="0.0335%" height="15" fill="rgb(213,87,29)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1311.50"></text></g><g><title>+[NSBundle bundleWithIdentifier:] (1 samples, 0.03%)</title><rect x="6.1368%" y="1285" width="0.0335%" height="15" fill="rgb(205,151,52)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1295.50"></text></g><g><title>_CFBundleGetBundleWithIdentifier (1 samples, 0.03%)</title><rect x="6.1368%" y="1269" width="0.0335%" height="15" fill="rgb(253,215,39)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1279.50"></text></g><g><title>_CFBundleEnsureBundleExistsForImagePath (1 samples, 0.03%)</title><rect x="6.1368%" y="1253" width="0.0335%" height="15" fill="rgb(221,220,41)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1263.50"></text></g><g><title>_CFBundleCreate (1 samples, 0.03%)</title><rect x="6.1368%" y="1237" width="0.0335%" height="15" fill="rgb(218,133,21)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1247.50"></text></g><g><title>CFBundleGetInfoDictionary (1 samples, 0.03%)</title><rect x="6.1368%" y="1221" width="0.0335%" height="15" fill="rgb(221,193,43)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1231.50"></text></g><g><title>_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.03%)</title><rect x="6.1368%" y="1205" width="0.0335%" height="15" fill="rgb(240,128,52)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1215.50"></text></g><g><title>_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.03%)</title><rect x="6.1368%" y="1189" width="0.0335%" height="15" fill="rgb(253,114,12)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1199.50"></text></g><g><title>CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="6.1368%" y="1173" width="0.0335%" height="15" fill="rgb(215,223,47)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1183.50"></text></g><g><title>_CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="6.1368%" y="1157" width="0.0335%" height="15" fill="rgb(248,225,23)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1167.50"></text></g><g><title>_CFPropertyListCreateFromUTF8Data (1 samples, 0.03%)</title><rect x="6.1368%" y="1141" width="0.0335%" height="15" fill="rgb(250,108,0)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1151.50"></text></g><g><title>parsePListTag (1 samples, 0.03%)</title><rect x="6.1368%" y="1125" width="0.0335%" height="15" fill="rgb(228,208,7)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1135.50"></text></g><g><title>parseDictTag (1 samples, 0.03%)</title><rect x="6.1368%" y="1109" width="0.0335%" height="15" fill="rgb(244,45,10)" fg:x="183" fg:w="1"/><text x="6.3868%" y="1119.50"></text></g><g><title>-[NSThemeFrame _updateTitleProperties:animated:] (4 samples, 0.13%)</title><rect x="6.0698%" y="1557" width="0.1341%" height="15" fill="rgb(207,125,25)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1567.50"></text></g><g><title>-[NSThemeFrame setRepresentedURL:] (4 samples, 0.13%)</title><rect x="6.0698%" y="1541" width="0.1341%" height="15" fill="rgb(210,195,18)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1551.50"></text></g><g><title>-[NSThemeFrame _updateButtons] (4 samples, 0.13%)</title><rect x="6.0698%" y="1525" width="0.1341%" height="15" fill="rgb(249,80,12)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1535.50"></text></g><g><title>-[NSWindow showsFullScreenButton] (4 samples, 0.13%)</title><rect x="6.0698%" y="1509" width="0.1341%" height="15" fill="rgb(221,65,9)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1519.50"></text></g><g><title>-[NSWindow(NSFullScreen) canEnterFullScreenMode] (4 samples, 0.13%)</title><rect x="6.0698%" y="1493" width="0.1341%" height="15" fill="rgb(235,49,36)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1503.50"></text></g><g><title>-[NSWindow _effectiveCollectionBehavior] (4 samples, 0.13%)</title><rect x="6.0698%" y="1477" width="0.1341%" height="15" fill="rgb(225,32,20)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1487.50"></text></g><g><title>-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (4 samples, 0.13%)</title><rect x="6.0698%" y="1461" width="0.1341%" height="15" fill="rgb(215,141,46)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1471.50"></text></g><g><title>-[NSThemeFrame _updateButtons] (4 samples, 0.13%)</title><rect x="6.0698%" y="1445" width="0.1341%" height="15" fill="rgb(250,160,47)" fg:x="181" fg:w="4"/><text x="6.3198%" y="1455.50"></text></g><g><title>-[NSThemeFrame newZoomButton] (1 samples, 0.03%)</title><rect x="6.1704%" y="1429" width="0.0335%" height="15" fill="rgb(216,222,40)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1439.50"></text></g><g><title>+[_NSThemeZoomWidget zoomWidgetInView:withButtonID:action:] (1 samples, 0.03%)</title><rect x="6.1704%" y="1413" width="0.0335%" height="15" fill="rgb(234,217,39)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1423.50"></text></g><g><title>-[_NSThemeWidget initWithButtonID:] (1 samples, 0.03%)</title><rect x="6.1704%" y="1397" width="0.0335%" height="15" fill="rgb(207,178,40)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1407.50"></text></g><g><title>-[NSButton initWithFrame:] (1 samples, 0.03%)</title><rect x="6.1704%" y="1381" width="0.0335%" height="15" fill="rgb(221,136,13)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1391.50"></text></g><g><title>-[NSControl initWithFrame:] (1 samples, 0.03%)</title><rect x="6.1704%" y="1365" width="0.0335%" height="15" fill="rgb(249,199,10)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1375.50"></text></g><g><title>-[NSButtonCell init] (1 samples, 0.03%)</title><rect x="6.1704%" y="1349" width="0.0335%" height="15" fill="rgb(249,222,13)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1359.50"></text></g><g><title>-[NSButtonCell initTextCell:] (1 samples, 0.03%)</title><rect x="6.1704%" y="1333" width="0.0335%" height="15" fill="rgb(244,185,38)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1343.50"></text></g><g><title>-[NSButtonCell _convertToText:] (1 samples, 0.03%)</title><rect x="6.1704%" y="1317" width="0.0335%" height="15" fill="rgb(236,202,9)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1327.50"></text></g><g><title>objc_release (1 samples, 0.03%)</title><rect x="6.1704%" y="1301" width="0.0335%" height="15" fill="rgb(250,229,37)" fg:x="184" fg:w="1"/><text x="6.4204%" y="1311.50"></text></g><g><title>-[NSFrameView initWithFrame:styleMask:owner:] (5 samples, 0.17%)</title><rect x="6.0698%" y="1573" width="0.1677%" height="15" fill="rgb(206,174,23)" fg:x="181" fg:w="5"/><text x="6.3198%" y="1583.50"></text></g><g><title>-[NSView initWithFrame:] (1 samples, 0.03%)</title><rect x="6.2039%" y="1557" width="0.0335%" height="15" fill="rgb(211,33,43)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1567.50"></text></g><g><title>-[NSResponder init] (1 samples, 0.03%)</title><rect x="6.2039%" y="1541" width="0.0335%" height="15" fill="rgb(245,58,50)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1551.50"></text></g><g><title>_NSDPClassInfoForClass (1 samples, 0.03%)</title><rect x="6.2039%" y="1525" width="0.0335%" height="15" fill="rgb(244,68,36)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1535.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="6.2039%" y="1509" width="0.0335%" height="15" fill="rgb(232,229,15)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1519.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="6.2039%" y="1493" width="0.0335%" height="15" fill="rgb(254,30,23)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1503.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="6.2039%" y="1477" width="0.0335%" height="15" fill="rgb(235,160,14)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1487.50"></text></g><g><title>lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="6.2039%" y="1461" width="0.0335%" height="15" fill="rgb(212,155,44)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1471.50"></text></g><g><title>initializePropertyInfo (1 samples, 0.03%)</title><rect x="6.2039%" y="1445" width="0.0335%" height="15" fill="rgb(226,2,50)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1455.50"></text></g><g><title>+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:] (1 samples, 0.03%)</title><rect x="6.2039%" y="1429" width="0.0335%" height="15" fill="rgb(234,177,6)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1439.50"></text></g><g><title>__84+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:]_block_invoke (1 samples, 0.03%)</title><rect x="6.2039%" y="1413" width="0.0335%" height="15" fill="rgb(217,24,9)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1423.50"></text></g><g><title>snprintf (1 samples, 0.03%)</title><rect x="6.2039%" y="1397" width="0.0335%" height="15" fill="rgb(220,13,46)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1407.50"></text></g><g><title>_vsnprintf (1 samples, 0.03%)</title><rect x="6.2039%" y="1381" width="0.0335%" height="15" fill="rgb(239,221,27)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1391.50"></text></g><g><title>__vfprintf (1 samples, 0.03%)</title><rect x="6.2039%" y="1365" width="0.0335%" height="15" fill="rgb(222,198,25)" fg:x="185" fg:w="1"/><text x="6.4539%" y="1375.50"></text></g><g><title>-[NSThemeFrame _addKnownSubview:positioned:relativeTo:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1525" width="0.0335%" height="15" fill="rgb(211,99,13)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1535.50"></text></g><g><title>-[NSThemeFrame addSubview:positioned:relativeTo:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1509" width="0.0335%" height="15" fill="rgb(232,111,31)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1519.50"></text></g><g><title>-[NSView addSubview:positioned:relativeTo:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1493" width="0.0335%" height="15" fill="rgb(245,82,37)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1503.50"></text></g><g><title>-[NSThemeFrame addSubview:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1477" width="0.0335%" height="15" fill="rgb(227,149,46)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1487.50"></text></g><g><title>-[NSFrameView addSubview:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1461" width="0.0335%" height="15" fill="rgb(218,36,50)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1471.50"></text></g><g><title>-[NSView addSubview:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1445" width="0.0335%" height="15" fill="rgb(226,80,48)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1455.50"></text></g><g><title>-[NSView _setWindow:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1429" width="0.0335%" height="15" fill="rgb(238,224,15)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1439.50"></text></g><g><title>-[NSTitlebarContainerView viewDidMoveToWindow] (1 samples, 0.03%)</title><rect x="6.2374%" y="1413" width="0.0335%" height="15" fill="rgb(241,136,10)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1423.50"></text></g><g><title>-[NSWindowSectionController setWindow:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1397" width="0.0335%" height="15" fill="rgb(208,32,45)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1407.50"></text></g><g><title>-[NSWindowSectionContentController _updateSectionState] (1 samples, 0.03%)</title><rect x="6.2374%" y="1381" width="0.0335%" height="15" fill="rgb(207,135,9)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1391.50"></text></g><g><title>_NSSetRectValueAndNotify (1 samples, 0.03%)</title><rect x="6.2374%" y="1365" width="0.0335%" height="15" fill="rgb(206,86,44)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1375.50"></text></g><g><title>-[NSObject(NSKeyValueObservingPrivate) _changeValueForKey:key:key:usingBlock:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1349" width="0.0335%" height="15" fill="rgb(245,177,15)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1359.50"></text></g><g><title>-[NSObject(NSKeyValueObservingPrivate) _changeValueForKeys:count:maybeOldValuesDict:maybeNewValuesDict:usingBlock:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1333" width="0.0335%" height="15" fill="rgb(206,64,50)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1343.50"></text></g><g><title>NSKeyValueDidChange (1 samples, 0.03%)</title><rect x="6.2374%" y="1317" width="0.0335%" height="15" fill="rgb(234,36,40)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1327.50"></text></g><g><title>NSKeyValueNotifyObserver (1 samples, 0.03%)</title><rect x="6.2374%" y="1301" width="0.0335%" height="15" fill="rgb(213,64,8)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1311.50"></text></g><g><title>-[NSTitlebarContainerView observeValueForKeyPath:ofObject:change:context:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1285" width="0.0335%" height="15" fill="rgb(210,75,36)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1295.50"></text></g><g><title>-[NSTitlebarContainerView _updateDividerLayerForController:animated:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1269" width="0.0335%" height="15" fill="rgb(229,88,21)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1279.50"></text></g><g><title>-[NSTitlebarContainerView _configureLayer:forDividerStyle:widgetHeight:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1253" width="0.0335%" height="15" fill="rgb(252,204,47)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1263.50"></text></g><g><title>-[NSAppearance _createOrUpdateLayer:options:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1237" width="0.0335%" height="15" fill="rgb(208,77,27)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1247.50"></text></g><g><title>-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1221" width="0.0335%" height="15" fill="rgb(221,76,26)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1231.50"></text></g><g><title>CUIRenderer::CreateOrUpdateLayer(__CFDictionary const*, CALayer**) (1 samples, 0.03%)</title><rect x="6.2374%" y="1205" width="0.0335%" height="15" fill="rgb(225,139,18)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1215.50"></text></g><g><title>CUICoreThemeRenderer::CreateOrUpdateLayer(CUIDescriptor const*, CALayer**) (1 samples, 0.03%)</title><rect x="6.2374%" y="1189" width="0.0335%" height="15" fill="rgb(230,137,11)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1199.50"></text></g><g><title>CAObject_valueForKey (1 samples, 0.03%)</title><rect x="6.2374%" y="1173" width="0.0335%" height="15" fill="rgb(212,28,1)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1183.50"></text></g><g><title>-[NSObject(NSKeyValueCoding) valueForKey:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1157" width="0.0335%" height="15" fill="rgb(248,164,17)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1167.50"></text></g><g><title>+[NSObject(NSKeyValueCodingPrivate) _createValueGetterWithContainerClassID:key:] (1 samples, 0.03%)</title><rect x="6.2374%" y="1141" width="0.0335%" height="15" fill="rgb(222,171,42)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1151.50"></text></g><g><title>NSKeyValueMethodForPattern (1 samples, 0.03%)</title><rect x="6.2374%" y="1125" width="0.0335%" height="15" fill="rgb(243,84,45)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1135.50"></text></g><g><title>NSResolvedSelectorForName (1 samples, 0.03%)</title><rect x="6.2374%" y="1109" width="0.0335%" height="15" fill="rgb(252,49,23)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1119.50"></text></g><g><title>class_getInstanceMethod (1 samples, 0.03%)</title><rect x="6.2374%" y="1093" width="0.0335%" height="15" fill="rgb(215,19,7)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1103.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="6.2374%" y="1077" width="0.0335%" height="15" fill="rgb(238,81,41)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1087.50"></text></g><g><title>getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.03%)</title><rect x="6.2374%" y="1061" width="0.0335%" height="15" fill="rgb(210,199,37)" fg:x="186" fg:w="1"/><text x="6.4874%" y="1071.50"></text></g><g><title>-[NSThemeFrame initWithFrame:styleMask:owner:] (7 samples, 0.23%)</title><rect x="6.0698%" y="1589" width="0.2347%" height="15" fill="rgb(244,192,49)" fg:x="181" fg:w="7"/><text x="6.3198%" y="1599.50"></text></g><g><title>-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (2 samples, 0.07%)</title><rect x="6.2374%" y="1573" width="0.0671%" height="15" fill="rgb(226,211,11)" fg:x="186" fg:w="2"/><text x="6.4874%" y="1583.50"></text></g><g><title>+[NSAnimationContext runAnimationGroup:] (2 samples, 0.07%)</title><rect x="6.2374%" y="1557" width="0.0671%" height="15" fill="rgb(236,162,54)" fg:x="186" fg:w="2"/><text x="6.4874%" y="1567.50"></text></g><g><title>__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (2 samples, 0.07%)</title><rect x="6.2374%" y="1541" width="0.0671%" height="15" fill="rgb(220,229,9)" fg:x="186" fg:w="2"/><text x="6.4874%" y="1551.50"></text></g><g><title>-[NSTitlebarContainerView initWithFrame:] (1 samples, 0.03%)</title><rect x="6.2710%" y="1525" width="0.0335%" height="15" fill="rgb(250,87,22)" fg:x="187" fg:w="1"/><text x="6.5210%" y="1535.50"></text></g><g><title>-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 0.03%)</title><rect x="6.2710%" y="1509" width="0.0335%" height="15" fill="rgb(239,43,17)" fg:x="187" fg:w="1"/><text x="6.5210%" y="1519.50"></text></g><g><title>-[NSObject(NSKeyValueObserverRegistration) _addObserver:forProperty:options:context:] (1 samples, 0.03%)</title><rect x="6.2710%" y="1493" width="0.0335%" height="15" fill="rgb(231,177,25)" fg:x="187" fg:w="1"/><text x="6.5210%" y="1503.50"></text></g><g><title>_NSKeyValueObservationInfoCreateByAdding (1 samples, 0.03%)</title><rect x="6.2710%" y="1477" width="0.0335%" height="15" fill="rgb(219,179,1)" fg:x="187" fg:w="1"/><text x="6.5210%" y="1487.50"></text></g><g><title>-[NSConcreteHashTable addObject:] (1 samples, 0.03%)</title><rect x="6.2710%" y="1461" width="0.0335%" height="15" fill="rgb(238,219,53)" fg:x="187" fg:w="1"/><text x="6.5210%" y="1471.50"></text></g><g><title>-[NSConcreteHashTable hashGrow] (1 samples, 0.03%)</title><rect x="6.2710%" y="1445" width="0.0335%" height="15" fill="rgb(232,167,36)" fg:x="187" fg:w="1"/><text x="6.5210%" y="1455.50"></text></g><g><title>+[CALayer layer] (1 samples, 0.03%)</title><rect x="6.3045%" y="1509" width="0.0335%" height="15" fill="rgb(244,19,51)" fg:x="188" fg:w="1"/><text x="6.5545%" y="1519.50"></text></g><g><title>-[CALayer init] (1 samples, 0.03%)</title><rect x="6.3045%" y="1493" width="0.0335%" height="15" fill="rgb(224,6,22)" fg:x="188" fg:w="1"/><text x="6.5545%" y="1503.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="6.3045%" y="1477" width="0.0335%" height="15" fill="rgb(224,145,5)" fg:x="188" fg:w="1"/><text x="6.5545%" y="1487.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="6.3045%" y="1461" width="0.0335%" height="15" fill="rgb(234,130,49)" fg:x="188" fg:w="1"/><text x="6.5545%" y="1471.50"></text></g><g><title>-[MTLIOAccelServiceGlobalContext init] (1 samples, 0.03%)</title><rect x="6.3380%" y="1461" width="0.0335%" height="15" fill="rgb(254,6,2)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1471.50"></text></g><g><title>getMetalPluginClassForService (1 samples, 0.03%)</title><rect x="6.3380%" y="1445" width="0.0335%" height="15" fill="rgb(208,96,46)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1455.50"></text></g><g><title>-[NSBundle classNamed:] (1 samples, 0.03%)</title><rect x="6.3380%" y="1429" width="0.0335%" height="15" fill="rgb(239,3,39)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1439.50"></text></g><g><title>-[NSBundle loadAndReturnError:] (1 samples, 0.03%)</title><rect x="6.3380%" y="1413" width="0.0335%" height="15" fill="rgb(233,210,1)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1423.50"></text></g><g><title>_CFBundleLoadExecutableAndReturnError (1 samples, 0.03%)</title><rect x="6.3380%" y="1397" width="0.0335%" height="15" fill="rgb(244,137,37)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1407.50"></text></g><g><title>_CFBundleDlfcnLoadFramework (1 samples, 0.03%)</title><rect x="6.3380%" y="1381" width="0.0335%" height="15" fill="rgb(240,136,2)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1391.50"></text></g><g><title>dyld4::APIs::dlopen(char const*, int) (1 samples, 0.03%)</title><rect x="6.3380%" y="1365" width="0.0335%" height="15" fill="rgb(239,18,37)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1375.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*) (1 samples, 0.03%)</title><rect x="6.3380%" y="1349" width="0.0335%" height="15" fill="rgb(218,185,22)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1359.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const (1 samples, 0.03%)</title><rect x="6.3380%" y="1333" width="0.0335%" height="15" fill="rgb(225,218,4)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1343.50"></text></g><g><title>void dyld4::RuntimeLocks::withLoadersWriteLockAndProtectedStack&lt;dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()&gt;(dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;())::&apos;lambda&apos;()::operator()() const (1 samples, 0.03%)</title><rect x="6.3380%" y="1317" width="0.0335%" height="15" fill="rgb(230,182,32)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1327.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()::operator()() const (1 samples, 0.03%)</title><rect x="6.3380%" y="1301" width="0.0335%" height="15" fill="rgb(242,56,43)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1311.50"></text></g><g><title>dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool, lsl::Vector&lt;std::__1::pair&lt;dyld4::Loader const*, char const*&gt;&gt;*) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1285" width="0.0335%" height="15" fill="rgb(233,99,24)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1295.50"></text></g><g><title>dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1269" width="0.0335%" height="15" fill="rgb(234,209,42)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1279.50"></text></g><g><title>dyld3::MachOAnalyzer::withVMLayout(Diagnostics&amp;, void (mach_o::Layout const&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1253" width="0.0335%" height="15" fill="rgb(227,7,12)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1263.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1237" width="0.0335%" height="15" fill="rgb(245,203,43)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1247.50"></text></g><g><title>mach_o::Fixups::forEachBindTarget_ChainedFixups(Diagnostics&amp;, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1221" width="0.0335%" height="15" fill="rgb(238,205,33)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1231.50"></text></g><g><title>dyld3::MachOFile::forEachChainedFixupTarget(Diagnostics&amp;, dyld_chained_fixups_header const*, linkedit_data_command const*, void (int, char const*, unsigned long long, bool, bool&amp;) block_pointer) (1 samples, 0.03%)</title><rect x="6.3380%" y="1205" width="0.0335%" height="15" fill="rgb(231,56,7)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1215.50"></text></g><g><title>invocation function for block in mach_o::Fixups::forEachBindTarget_ChainedFixups(Diagnostics&amp;, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1189" width="0.0335%" height="15" fill="rgb(244,186,29)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1199.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1173" width="0.0335%" height="15" fill="rgb(234,111,31)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1183.50"></text></g><g><title>dyld4::Loader::resolveSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, int, char const*, bool, bool, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1157" width="0.0335%" height="15" fill="rgb(241,149,10)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1167.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1141" width="0.0335%" height="15" fill="rgb(249,206,44)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1151.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="6.3380%" y="1125" width="0.0335%" height="15" fill="rgb(251,153,30)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1135.50"></text></g><g><title>dyld3::MachOFile::trieWalk(Diagnostics&amp;, unsigned char const*, unsigned char const*, char const*) (1 samples, 0.03%)</title><rect x="6.3380%" y="1109" width="0.0335%" height="15" fill="rgb(239,152,38)" fg:x="189" fg:w="1"/><text x="6.5880%" y="1119.50"></text></g><g><title>-[NSWindow _commonAwake] (3 samples, 0.10%)</title><rect x="6.3045%" y="1589" width="0.1006%" height="15" fill="rgb(249,139,47)" fg:x="188" fg:w="3"/><text x="6.5545%" y="1599.50"></text></g><g><title>_NXCreateWindow (3 samples, 0.10%)</title><rect x="6.3045%" y="1573" width="0.1006%" height="15" fill="rgb(244,64,35)" fg:x="188" fg:w="3"/><text x="6.5545%" y="1583.50"></text></g><g><title>+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:flags:] (3 samples, 0.10%)</title><rect x="6.3045%" y="1557" width="0.1006%" height="15" fill="rgb(216,46,15)" fg:x="188" fg:w="3"/><text x="6.5545%" y="1567.50"></text></g><g><title>-[NSCGSWindow initWithConnectionID:flags:] (3 samples, 0.10%)</title><rect x="6.3045%" y="1541" width="0.1006%" height="15" fill="rgb(250,74,19)" fg:x="188" fg:w="3"/><text x="6.5545%" y="1551.50"></text></g><g><title>-[NSCGSWindow _createRootLayerAndContextIfNeededUsingAsyncBehavior:] (3 samples, 0.10%)</title><rect x="6.3045%" y="1525" width="0.1006%" height="15" fill="rgb(249,42,33)" fg:x="188" fg:w="3"/><text x="6.5545%" y="1535.50"></text></g><g><title>-[NSCGSWindow _createContext] (2 samples, 0.07%)</title><rect x="6.3380%" y="1509" width="0.0671%" height="15" fill="rgb(242,149,17)" fg:x="189" fg:w="2"/><text x="6.5880%" y="1519.50"></text></g><g><title>MTLCopyAllDevices (2 samples, 0.07%)</title><rect x="6.3380%" y="1493" width="0.0671%" height="15" fill="rgb(244,29,21)" fg:x="189" fg:w="2"/><text x="6.5880%" y="1503.50"></text></g><g><title>MTLRegisterDevices (2 samples, 0.07%)</title><rect x="6.3380%" y="1477" width="0.0671%" height="15" fill="rgb(220,130,37)" fg:x="189" fg:w="2"/><text x="6.5880%" y="1487.50"></text></g><g><title>-[MTLIOAccelServiceGlobalContext processPendingCreateIOAccelServiceRequests] (1 samples, 0.03%)</title><rect x="6.3716%" y="1461" width="0.0335%" height="15" fill="rgb(211,67,2)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1471.50"></text></g><g><title>_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="6.3716%" y="1445" width="0.0335%" height="15" fill="rgb(235,68,52)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1455.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="6.3716%" y="1429" width="0.0335%" height="15" fill="rgb(246,142,3)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1439.50"></text></g><g><title>-[MTLIOAccelServiceGlobalContext registerService:deviceClass:] (1 samples, 0.03%)</title><rect x="6.3716%" y="1413" width="0.0335%" height="15" fill="rgb(241,25,7)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1423.50"></text></g><g><title>-[MTLIOAccelService initWithAcceleratorPort:deviceClass:] (1 samples, 0.03%)</title><rect x="6.3716%" y="1397" width="0.0335%" height="15" fill="rgb(242,119,39)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1407.50"></text></g><g><title>-[AGXG16GDevice initWithAcceleratorPort:] (1 samples, 0.03%)</title><rect x="6.3716%" y="1381" width="0.0335%" height="15" fill="rgb(241,98,45)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1391.50"></text></g><g><title>-[AGXG16GFamilyDevice setupCompiler:] (1 samples, 0.03%)</title><rect x="6.3716%" y="1365" width="0.0335%" height="15" fill="rgb(254,28,30)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1375.50"></text></g><g><title>-[_MTLPipelineCache initWithFilePath:readOnly:deviceInfo:] (1 samples, 0.03%)</title><rect x="6.3716%" y="1349" width="0.0335%" height="15" fill="rgb(241,142,54)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1359.50"></text></g><g><title>MTLPipelineDataCache::open() (1 samples, 0.03%)</title><rect x="6.3716%" y="1333" width="0.0335%" height="15" fill="rgb(222,85,15)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1343.50"></text></g><g><title>MTLPipelineDataCache::parseDataFileHeader() (1 samples, 0.03%)</title><rect x="6.3716%" y="1317" width="0.0335%" height="15" fill="rgb(210,85,47)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1327.50"></text></g><g><title>std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, DataBlock&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, DataBlock&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, DataBlock&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, DataBlock&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, DataBlock&gt;&gt;&gt;::__emplace_unique_key_args&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;&gt;, std::__1::tuple&lt;&gt;&gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) (1 samples, 0.03%)</title><rect x="6.3716%" y="1301" width="0.0335%" height="15" fill="rgb(224,206,25)" fg:x="190" fg:w="1"/><text x="6.6216%" y="1311.50"></text></g><g><title>-[NSWindow initWithContentRect:styleMask:backing:defer:] (12 samples, 0.40%)</title><rect x="6.0362%" y="1637" width="0.4024%" height="15" fill="rgb(243,201,19)" fg:x="180" fg:w="12"/><text x="6.2862%" y="1647.50"></text></g><g><title>-[NSWindow _initContent:styleMask:backing:defer:contentView:] (12 samples, 0.40%)</title><rect x="6.0362%" y="1621" width="0.4024%" height="15" fill="rgb(236,59,4)" fg:x="180" fg:w="12"/><text x="6.2862%" y="1631.50"></text></g><g><title>-[NSWindow _commonInitFrame:styleMask:backing:defer:] (11 samples, 0.37%)</title><rect x="6.0698%" y="1605" width="0.3689%" height="15" fill="rgb(254,179,45)" fg:x="181" fg:w="11"/><text x="6.3198%" y="1615.50"></text></g><g><title>-[NSWindow _cornerMaskChanged] (1 samples, 0.03%)</title><rect x="6.4051%" y="1589" width="0.0335%" height="15" fill="rgb(226,14,10)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1599.50"></text></g><g><title>-[NSWindow _createCornerMaskFromCornerMaskImage] (1 samples, 0.03%)</title><rect x="6.4051%" y="1573" width="0.0335%" height="15" fill="rgb(244,27,41)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1583.50"></text></g><g><title>-[NSWindow _cornerMask] (1 samples, 0.03%)</title><rect x="6.4051%" y="1557" width="0.0335%" height="15" fill="rgb(235,35,32)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1567.50"></text></g><g><title>+[NSThemeFrame _cornerMaskImageForWindowType:window:] (1 samples, 0.03%)</title><rect x="6.4051%" y="1541" width="0.0335%" height="15" fill="rgb(218,68,31)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1551.50"></text></g><g><title>-[NSImage initWithCGImage:size:] (1 samples, 0.03%)</title><rect x="6.4051%" y="1525" width="0.0335%" height="15" fill="rgb(207,120,37)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1535.50"></text></g><g><title>-[NSImage addRepresentation:] (1 samples, 0.03%)</title><rect x="6.4051%" y="1509" width="0.0335%" height="15" fill="rgb(227,98,0)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1519.50"></text></g><g><title>-[NSImage _addRepresentations:] (1 samples, 0.03%)</title><rect x="6.4051%" y="1493" width="0.0335%" height="15" fill="rgb(207,7,3)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1503.50"></text></g><g><title>-[NSImage _usingRepresentationsPerformBlock:] (1 samples, 0.03%)</title><rect x="6.4051%" y="1477" width="0.0335%" height="15" fill="rgb(206,98,19)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1487.50"></text></g><g><title>__31-[NSImage _addRepresentations:]_block_invoke (1 samples, 0.03%)</title><rect x="6.4051%" y="1461" width="0.0335%" height="15" fill="rgb(217,5,26)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1471.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="6.4051%" y="1445" width="0.0335%" height="15" fill="rgb(235,190,38)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1455.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="6.4051%" y="1429" width="0.0335%" height="15" fill="rgb(247,86,24)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1439.50"></text></g><g><title>getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.03%)</title><rect x="6.4051%" y="1413" width="0.0335%" height="15" fill="rgb(205,101,16)" fg:x="191" fg:w="1"/><text x="6.6551%" y="1423.50"></text></g><g><title>GetInputSourceEnabledPrefsIncludingThirdParty (1 samples, 0.03%)</title><rect x="6.4386%" y="1461" width="0.0335%" height="15" fill="rgb(246,168,33)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1471.50"></text></g><g><title>CopyInputSourceEnabledPrefs (1 samples, 0.03%)</title><rect x="6.4386%" y="1445" width="0.0335%" height="15" fill="rgb(231,114,1)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1455.50"></text></g><g><title>ValidateEnabledInputSourceIDs (1 samples, 0.03%)</title><rect x="6.4386%" y="1429" width="0.0335%" height="15" fill="rgb(207,184,53)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1439.50"></text></g><g><title>islcCanLoadInputMethodFromBundleID (1 samples, 0.03%)</title><rect x="6.4386%" y="1413" width="0.0335%" height="15" fill="rgb(224,95,51)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1423.50"></text></g><g><title>_CFBundleCreate (1 samples, 0.03%)</title><rect x="6.4386%" y="1397" width="0.0335%" height="15" fill="rgb(212,188,45)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1407.50"></text></g><g><title>CFBundleGetInfoDictionary (1 samples, 0.03%)</title><rect x="6.4386%" y="1381" width="0.0335%" height="15" fill="rgb(223,154,38)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1391.50"></text></g><g><title>_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.03%)</title><rect x="6.4386%" y="1365" width="0.0335%" height="15" fill="rgb(251,22,52)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1375.50"></text></g><g><title>_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.03%)</title><rect x="6.4386%" y="1349" width="0.0335%" height="15" fill="rgb(229,209,22)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1359.50"></text></g><g><title>CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="6.4386%" y="1333" width="0.0335%" height="15" fill="rgb(234,138,34)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1343.50"></text></g><g><title>_CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="6.4386%" y="1317" width="0.0335%" height="15" fill="rgb(212,95,11)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1327.50"></text></g><g><title>_CFPropertyListCreateFromUTF8Data (1 samples, 0.03%)</title><rect x="6.4386%" y="1301" width="0.0335%" height="15" fill="rgb(240,179,47)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1311.50"></text></g><g><title>parsePListTag (1 samples, 0.03%)</title><rect x="6.4386%" y="1285" width="0.0335%" height="15" fill="rgb(240,163,11)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1295.50"></text></g><g><title>parseDictTag (1 samples, 0.03%)</title><rect x="6.4386%" y="1269" width="0.0335%" height="15" fill="rgb(236,37,12)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1279.50"></text></g><g><title>parseDictTag (1 samples, 0.03%)</title><rect x="6.4386%" y="1253" width="0.0335%" height="15" fill="rgb(232,164,16)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1263.50"></text></g><g><title>parseDictTag (1 samples, 0.03%)</title><rect x="6.4386%" y="1237" width="0.0335%" height="15" fill="rgb(244,205,15)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1247.50"></text></g><g><title>_CFRetain (1 samples, 0.03%)</title><rect x="6.4386%" y="1221" width="0.0335%" height="15" fill="rgb(223,117,47)" fg:x="192" fg:w="1"/><text x="6.6886%" y="1231.50"></text></g><g><title>-[NSTextInputContext selectedKeyboardInputSource] (2 samples, 0.07%)</title><rect x="6.4386%" y="1589" width="0.0671%" height="15" fill="rgb(244,107,35)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1599.50"></text></g><g><title>TISCopyCurrentKeyboardInputSource (2 samples, 0.07%)</title><rect x="6.4386%" y="1573" width="0.0671%" height="15" fill="rgb(205,140,8)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1583.50"></text></g><g><title>InitTSMFirstEventTime (2 samples, 0.07%)</title><rect x="6.4386%" y="1557" width="0.0671%" height="15" fill="rgb(228,84,46)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1567.50"></text></g><g><title>UpdateSourceIndicatorMode (2 samples, 0.07%)</title><rect x="6.4386%" y="1541" width="0.0671%" height="15" fill="rgb(254,188,9)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1551.50"></text></g><g><title>_CreateKeyboardInputSourcesArray (2 samples, 0.07%)</title><rect x="6.4386%" y="1525" width="0.0671%" height="15" fill="rgb(206,112,54)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1535.50"></text></g><g><title>_CreateKeyboardInputSourcesArray_Mutable (2 samples, 0.07%)</title><rect x="6.4386%" y="1509" width="0.0671%" height="15" fill="rgb(216,84,49)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1519.50"></text></g><g><title>islGetInputSourceListWithAdditions (2 samples, 0.07%)</title><rect x="6.4386%" y="1493" width="0.0671%" height="15" fill="rgb(214,194,35)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1503.50"></text></g><g><title>isPrefsCreateCacheFromEnabledAndDefaultInputSources (2 samples, 0.07%)</title><rect x="6.4386%" y="1477" width="0.0671%" height="15" fill="rgb(249,28,3)" fg:x="192" fg:w="2"/><text x="6.6886%" y="1487.50"></text></g><g><title>isPrefsGetDefaultAsciiKeyboardLayout (1 samples, 0.03%)</title><rect x="6.4722%" y="1461" width="0.0335%" height="15" fill="rgb(222,56,52)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1471.50"></text></g><g><title>_CFPreferencesCopyValueWithContainer (1 samples, 0.03%)</title><rect x="6.4722%" y="1445" width="0.0335%" height="15" fill="rgb(245,217,50)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1455.50"></text></g><g><title>-[_CFXPreferences copyValueForKey:identifier:user:host:container:] (1 samples, 0.03%)</title><rect x="6.4722%" y="1429" width="0.0335%" height="15" fill="rgb(213,201,24)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1439.50"></text></g><g><title>-[_CFXPreferences withSourceForIdentifier:user:byHost:container:cloud:perform:] (1 samples, 0.03%)</title><rect x="6.4722%" y="1413" width="0.0335%" height="15" fill="rgb(248,116,28)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1423.50"></text></g><g><title>__66-[_CFXPreferences copyValueForKey:identifier:user:host:container:]_block_invoke (1 samples, 0.03%)</title><rect x="6.4722%" y="1397" width="0.0335%" height="15" fill="rgb(219,72,43)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1407.50"></text></g><g><title>-[CFPrefsPlistSource copyValueForKey:] (1 samples, 0.03%)</title><rect x="6.4722%" y="1381" width="0.0335%" height="15" fill="rgb(209,138,14)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1391.50"></text></g><g><title>_copyValueForKey (1 samples, 0.03%)</title><rect x="6.4722%" y="1365" width="0.0335%" height="15" fill="rgb(222,18,33)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1375.50"></text></g><g><title>-[CFPrefsPlistSource alreadylocked_requestNewData] (1 samples, 0.03%)</title><rect x="6.4722%" y="1349" width="0.0335%" height="15" fill="rgb(213,199,7)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1359.50"></text></g><g><title>-[_CFXPreferences withConnectionForRole:andUserIdentifier:performBlock:] (1 samples, 0.03%)</title><rect x="6.4722%" y="1333" width="0.0335%" height="15" fill="rgb(250,110,10)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1343.50"></text></g><g><title>__50-[CFPrefsPlistSource alreadylocked_requestNewData]_block_invoke (1 samples, 0.03%)</title><rect x="6.4722%" y="1317" width="0.0335%" height="15" fill="rgb(248,123,6)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1327.50"></text></g><g><title>-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:] (1 samples, 0.03%)</title><rect x="6.4722%" y="1301" width="0.0335%" height="15" fill="rgb(206,91,31)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1311.50"></text></g><g><title>-[CFPrefsPlistSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.03%)</title><rect x="6.4722%" y="1285" width="0.0335%" height="15" fill="rgb(211,154,13)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1295.50"></text></g><g><title>CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="6.4722%" y="1269" width="0.0335%" height="15" fill="rgb(225,148,7)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1279.50"></text></g><g><title>_CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="6.4722%" y="1253" width="0.0335%" height="15" fill="rgb(220,160,43)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1263.50"></text></g><g><title>__CFTryParseBinaryPlist (1 samples, 0.03%)</title><rect x="6.4722%" y="1237" width="0.0335%" height="15" fill="rgb(213,52,39)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1247.50"></text></g><g><title>_CFRelease (1 samples, 0.03%)</title><rect x="6.4722%" y="1221" width="0.0335%" height="15" fill="rgb(243,137,7)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1231.50"></text></g><g><title>__CFBasicHashDrain (1 samples, 0.03%)</title><rect x="6.4722%" y="1205" width="0.0335%" height="15" fill="rgb(230,79,13)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1215.50"></text></g><g><title>CFRelease (1 samples, 0.03%)</title><rect x="6.4722%" y="1189" width="0.0335%" height="15" fill="rgb(247,105,23)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1199.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="6.4722%" y="1173" width="0.0335%" height="15" fill="rgb(223,179,41)" fg:x="193" fg:w="1"/><text x="6.7222%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::new (3 samples, 0.10%)</title><rect x="6.4386%" y="1637" width="0.1006%" height="15" fill="rgb(218,9,34)" fg:x="192" fg:w="3"/><text x="6.6886%" y="1647.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::init_with_id (3 samples, 0.10%)</title><rect x="6.4386%" y="1621" width="0.1006%" height="15" fill="rgb(222,106,8)" fg:x="192" fg:w="3"/><text x="6.6886%" y="1631.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::current_input_source (3 samples, 0.10%)</title><rect x="6.4386%" y="1605" width="0.1006%" height="15" fill="rgb(211,220,0)" fg:x="192" fg:w="3"/><text x="6.6886%" y="1615.50"></text></g><g><title>-[NSView _inputContext] (1 samples, 0.03%)</title><rect x="6.5057%" y="1589" width="0.0335%" height="15" fill="rgb(229,52,16)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1599.50"></text></g><g><title>+[NSTextInputContext inputContextWithClient:] (1 samples, 0.03%)</title><rect x="6.5057%" y="1573" width="0.0335%" height="15" fill="rgb(212,155,18)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1583.50"></text></g><g><title>-[NSTextInputContext initWithClient:] (1 samples, 0.03%)</title><rect x="6.5057%" y="1557" width="0.0335%" height="15" fill="rgb(242,21,14)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1567.50"></text></g><g><title>+[NSServicesMenuHandler addSendAndReturnTypesIfNotPresent] (1 samples, 0.03%)</title><rect x="6.5057%" y="1541" width="0.0335%" height="15" fill="rgb(222,19,48)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1551.50"></text></g><g><title>+[NSServicesMenuHandler registerServicesMenuSendTypes:returnTypes:] (1 samples, 0.03%)</title><rect x="6.5057%" y="1525" width="0.0335%" height="15" fill="rgb(232,45,27)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1535.50"></text></g><g><title>_NSServicesCanonicalUTIFromStringWithCache (1 samples, 0.03%)</title><rect x="6.5057%" y="1509" width="0.0335%" height="15" fill="rgb(249,103,42)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1519.50"></text></g><g><title>UTTypeCreatePreferredIdentifierForTag (1 samples, 0.03%)</title><rect x="6.5057%" y="1493" width="0.0335%" height="15" fill="rgb(246,81,33)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1503.50"></text></g><g><title>+[UTTypeRecord typeRecordWithTag:ofClass:conformingToIdentifier:] (1 samples, 0.03%)</title><rect x="6.5057%" y="1477" width="0.0335%" height="15" fill="rgb(252,33,42)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1487.50"></text></g><g><title>LaunchServices::Database::Context::_get(_LSDServiceDomain*, unsigned long) (1 samples, 0.03%)</title><rect x="6.5057%" y="1461" width="0.0335%" height="15" fill="rgb(209,212,41)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1471.50"></text></g><g><title>_LSContextInitCommon(LSContext*, _LSDServiceDomain*, unsigned long, NSError* __autoreleasing*) (1 samples, 0.03%)</title><rect x="6.5057%" y="1445" width="0.0335%" height="15" fill="rgb(207,154,6)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1455.50"></text></g><g><title>_LSCopyServerStore (1 samples, 0.03%)</title><rect x="6.5057%" y="1429" width="0.0335%" height="15" fill="rgb(223,64,47)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1439.50"></text></g><g><title>_LSDServiceGetXPCConnection (1 samples, 0.03%)</title><rect x="6.5057%" y="1413" width="0.0335%" height="15" fill="rgb(211,161,38)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1423.50"></text></g><g><title>LaunchServices::_LSLazyLoadObjectForKeyWithLock(NSMutableDictionary*, objc_object*, LaunchServices::unfair_lock_mutex&amp;, objc_object* () block_pointer) (1 samples, 0.03%)</title><rect x="6.5057%" y="1397" width="0.0335%" height="15" fill="rgb(219,138,40)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1407.50"></text></g><g><title>___LSDServiceGetXPCConnection_block_invoke_2 (1 samples, 0.03%)</title><rect x="6.5057%" y="1381" width="0.0335%" height="15" fill="rgb(241,228,46)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1391.50"></text></g><g><title>+[_LSDReadService XPCInterface] (1 samples, 0.03%)</title><rect x="6.5057%" y="1365" width="0.0335%" height="15" fill="rgb(223,209,38)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1375.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="6.5057%" y="1349" width="0.0335%" height="15" fill="rgb(236,164,45)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1359.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="6.5057%" y="1333" width="0.0335%" height="15" fill="rgb(231,15,5)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1343.50"></text></g><g><title>__31+[_LSDReadService XPCInterface]_block_invoke (1 samples, 0.03%)</title><rect x="6.5057%" y="1317" width="0.0335%" height="15" fill="rgb(252,35,15)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1327.50"></text></g><g><title>-[NSXPCInterface setClasses:forSelector:argumentIndex:ofReply:] (1 samples, 0.03%)</title><rect x="6.5057%" y="1301" width="0.0335%" height="15" fill="rgb(248,181,18)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1311.50"></text></g><g><title>-[NSXPCInterface _locked_methodInfoForSelector:createIfNecessary:] (1 samples, 0.03%)</title><rect x="6.5057%" y="1285" width="0.0335%" height="15" fill="rgb(233,39,42)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1295.50"></text></g><g><title>setProtocolMetadataWithSignature (1 samples, 0.03%)</title><rect x="6.5057%" y="1269" width="0.0335%" height="15" fill="rgb(238,110,33)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1279.50"></text></g><g><title>look_up_class (1 samples, 0.03%)</title><rect x="6.5057%" y="1253" width="0.0335%" height="15" fill="rgb(233,195,10)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1263.50"></text></g><g><title>getClassExceptSomeSwift(char const*) (1 samples, 0.03%)</title><rect x="6.5057%" y="1237" width="0.0335%" height="15" fill="rgb(254,105,3)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1247.50"></text></g><g><title>getPreoptimizedClass (1 samples, 0.03%)</title><rect x="6.5057%" y="1221" width="0.0335%" height="15" fill="rgb(221,225,9)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1231.50"></text></g><g><title>_dyld_for_each_objc_class (1 samples, 0.03%)</title><rect x="6.5057%" y="1205" width="0.0335%" height="15" fill="rgb(224,227,45)" fg:x="194" fg:w="1"/><text x="6.7557%" y="1215.50"></text></g><g><title>pcls::gfx::Gfx::new (26 samples, 0.87%)</title><rect x="5.7009%" y="1669" width="0.8719%" height="15" fill="rgb(229,198,43)" fg:x="170" fg:w="26"/><text x="5.9509%" y="1679.50"></text></g><g><title>winit::platform_impl::platform::window::WinitWindow::new (16 samples, 0.54%)</title><rect x="6.0362%" y="1653" width="0.5366%" height="15" fill="rgb(206,209,35)" fg:x="180" fg:w="16"/><text x="6.2862%" y="1663.50"></text></g><g><title>winit::platform_impl::platform::window_delegate::WinitWindowDelegate::new (1 samples, 0.03%)</title><rect x="6.5392%" y="1637" width="0.0335%" height="15" fill="rgb(245,195,53)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1647.50"></text></g><g><title>winit::platform_impl::platform::window_delegate::WinitWindowDelegate::init_with_winit (1 samples, 0.03%)</title><rect x="6.5392%" y="1621" width="0.0335%" height="15" fill="rgb(240,92,26)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1631.50"></text></g><g><title>_CFXNotificationRegisterObserver (1 samples, 0.03%)</title><rect x="6.5392%" y="1605" width="0.0335%" height="15" fill="rgb(207,40,23)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1615.50"></text></g><g><title>xpc_connection_send_message (1 samples, 0.03%)</title><rect x="6.5392%" y="1589" width="0.0335%" height="15" fill="rgb(223,111,35)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1599.50"></text></g><g><title>_xpc_connection_enqueue (1 samples, 0.03%)</title><rect x="6.5392%" y="1573" width="0.0335%" height="15" fill="rgb(229,147,28)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1583.50"></text></g><g><title>dispatch_mach_send_with_result (1 samples, 0.03%)</title><rect x="6.5392%" y="1557" width="0.0335%" height="15" fill="rgb(211,29,28)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1567.50"></text></g><g><title>_dispatch_mach_send_msg (1 samples, 0.03%)</title><rect x="6.5392%" y="1541" width="0.0335%" height="15" fill="rgb(228,72,33)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1551.50"></text></g><g><title>_dispatch_mach_send_drain (1 samples, 0.03%)</title><rect x="6.5392%" y="1525" width="0.0335%" height="15" fill="rgb(205,214,31)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1535.50"></text></g><g><title>_dispatch_mach_msg_send (1 samples, 0.03%)</title><rect x="6.5392%" y="1509" width="0.0335%" height="15" fill="rgb(224,111,15)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1519.50"></text></g><g><title>mach_msg2_internal (1 samples, 0.03%)</title><rect x="6.5392%" y="1493" width="0.0335%" height="15" fill="rgb(253,21,26)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1503.50"></text></g><g><title>mach_msg2_trap (1 samples, 0.03%)</title><rect x="6.5392%" y="1477" width="0.0335%" height="15" fill="rgb(245,139,43)" fg:x="195" fg:w="1"/><text x="6.7892%" y="1487.50"></text></g><g><title>-[NSApplication _enableImmediateEventHandlingIfNeeded] (1 samples, 0.03%)</title><rect x="6.6063%" y="1637" width="0.0335%" height="15" fill="rgb(252,170,7)" fg:x="197" fg:w="1"/><text x="6.8563%" y="1647.50"></text></g><g><title>+[NSUndoManager(NSPrivate) _endTopLevelGroupings] (1 samples, 0.03%)</title><rect x="6.6398%" y="1621" width="0.0335%" height="15" fill="rgb(231,118,14)" fg:x="198" fg:w="1"/><text x="6.8898%" y="1631.50"></text></g><g><title>_xpc_transaction_begin (1 samples, 0.03%)</title><rect x="6.7069%" y="1573" width="0.0335%" height="15" fill="rgb(238,83,0)" fg:x="200" fg:w="1"/><text x="6.9569%" y="1583.50"></text></g><g><title>_xpc_ktrace_pid1 (1 samples, 0.03%)</title><rect x="6.7069%" y="1557" width="0.0335%" height="15" fill="rgb(221,39,39)" fg:x="200" fg:w="1"/><text x="6.9569%" y="1567.50"></text></g><g><title>-[NSApplication _disableSuddenTermination] (3 samples, 0.10%)</title><rect x="6.6734%" y="1621" width="0.1006%" height="15" fill="rgb(222,119,46)" fg:x="199" fg:w="3"/><text x="6.9234%" y="1631.50"></text></g><g><title>_HIDisableSuddenTerminationForSendEvent (2 samples, 0.07%)</title><rect x="6.7069%" y="1605" width="0.0671%" height="15" fill="rgb(222,165,49)" fg:x="200" fg:w="2"/><text x="6.9569%" y="1615.50"></text></g><g><title>@objc _NSSwiftProcessInfo.disableSuddenTermination() (2 samples, 0.07%)</title><rect x="6.7069%" y="1589" width="0.0671%" height="15" fill="rgb(219,113,52)" fg:x="200" fg:w="2"/><text x="6.9569%" y="1599.50"></text></g><g><title>swift_retain (1 samples, 0.03%)</title><rect x="6.7404%" y="1573" width="0.0335%" height="15" fill="rgb(214,7,15)" fg:x="201" fg:w="1"/><text x="6.9904%" y="1583.50"></text></g><g><title>+[NSAnimationContext activate] (1 samples, 0.03%)</title><rect x="6.7740%" y="1589" width="0.0335%" height="15" fill="rgb(235,32,4)" fg:x="202" fg:w="1"/><text x="7.0240%" y="1599.50"></text></g><g><title>+[CATransaction(CATransactionPrivate) currentState] (1 samples, 0.03%)</title><rect x="6.7740%" y="1573" width="0.0335%" height="15" fill="rgb(238,90,54)" fg:x="202" fg:w="1"/><text x="7.0240%" y="1583.50"></text></g><g><title>dyld4::nameMatch(char const*, char const*) (1 samples, 0.03%)</title><rect x="6.8075%" y="1413" width="0.0335%" height="15" fill="rgb(213,208,19)" fg:x="203" fg:w="1"/><text x="7.0575%" y="1423.50"></text></g><g><title>strrchr (1 samples, 0.03%)</title><rect x="6.8075%" y="1397" width="0.0335%" height="15" fill="rgb(233,156,4)" fg:x="203" fg:w="1"/><text x="7.0575%" y="1407.50"></text></g><g><title>+[_NSTrackingAreaManager routeEnterExitEvent:] (2 samples, 0.07%)</title><rect x="6.8075%" y="1589" width="0.0671%" height="15" fill="rgb(207,194,5)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1599.50"></text></g><g><title>+[_NSTrackingAreaAKManager routeEnterExitEvent:] (2 samples, 0.07%)</title><rect x="6.8075%" y="1573" width="0.0671%" height="15" fill="rgb(206,111,30)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1583.50"></text></g><g><title>-[NSWindow(NSEventRouting) sendEvent:] (2 samples, 0.07%)</title><rect x="6.8075%" y="1557" width="0.0671%" height="15" fill="rgb(243,70,54)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1567.50"></text></g><g><title>-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (2 samples, 0.07%)</title><rect x="6.8075%" y="1541" width="0.0671%" height="15" fill="rgb(242,28,8)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1551.50"></text></g><g><title>-[_NSTrackingAreaAKManager routeEnterExitEvent:] (2 samples, 0.07%)</title><rect x="6.8075%" y="1525" width="0.0671%" height="15" fill="rgb(219,106,18)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1535.50"></text></g><g><title>-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (2 samples, 0.07%)</title><rect x="6.8075%" y="1509" width="0.0671%" height="15" fill="rgb(244,222,10)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1519.50"></text></g><g><title>_NSGetBoolAppConfig (2 samples, 0.07%)</title><rect x="6.8075%" y="1493" width="0.0671%" height="15" fill="rgb(236,179,52)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1503.50"></text></g><g><title>NSTrackingAreaAKPostEventsAtBackDefaultValueFunction (2 samples, 0.07%)</title><rect x="6.8075%" y="1477" width="0.0671%" height="15" fill="rgb(213,23,39)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1487.50"></text></g><g><title>dyld4::APIs::NSVersionOfRunTimeLibrary(char const*) (2 samples, 0.07%)</title><rect x="6.8075%" y="1461" width="0.0671%" height="15" fill="rgb(238,48,10)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1471.50"></text></g><g><title>dyld4::RuntimeLocks::withLoadersReadLock(void () block_pointer) (2 samples, 0.07%)</title><rect x="6.8075%" y="1445" width="0.0671%" height="15" fill="rgb(251,196,23)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1455.50"></text></g><g><title>invocation function for block in dyld4::APIs::NSVersionOfRunTimeLibrary(char const*) (2 samples, 0.07%)</title><rect x="6.8075%" y="1429" width="0.0671%" height="15" fill="rgb(250,152,24)" fg:x="203" fg:w="2"/><text x="7.0575%" y="1439.50"></text></g><g><title>mach_o::Header::getDylibInstallName(char const**, mach_o::Version32*, mach_o::Version32*) const (1 samples, 0.03%)</title><rect x="6.8410%" y="1413" width="0.0335%" height="15" fill="rgb(209,150,17)" fg:x="204" fg:w="1"/><text x="7.0910%" y="1423.50"></text></g><g><title>mach_o::Header::forEachLoadCommand(void (load_command const*, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="6.8410%" y="1397" width="0.0335%" height="15" fill="rgb(234,202,34)" fg:x="204" fg:w="1"/><text x="7.0910%" y="1407.50"></text></g><g><title>invocation function for block in mach_o::Header::getDylibInstallName(char const**, mach_o::Version32*, mach_o::Version32*) const (1 samples, 0.03%)</title><rect x="6.8410%" y="1381" width="0.0335%" height="15" fill="rgb(253,148,53)" fg:x="204" fg:w="1"/><text x="7.0910%" y="1391.50"></text></g><g><title>+[NSMenuBarPresentationInstance _setMenuBarObscured:] (1 samples, 0.03%)</title><rect x="6.8746%" y="1573" width="0.0335%" height="15" fill="rgb(218,129,16)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1583.50"></text></g><g><title>+[NSMenuBarPresentationInstance _updateMenuBarObscured:] (1 samples, 0.03%)</title><rect x="6.8746%" y="1557" width="0.0335%" height="15" fill="rgb(216,85,19)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1567.50"></text></g><g><title>-[NSMenuBarPresentationInstance _showMenuBarWithAnimation:postingEvent:orderWindow:forAutoShow:noteVisibility:] (1 samples, 0.03%)</title><rect x="6.8746%" y="1541" width="0.0335%" height="15" fill="rgb(235,228,7)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1551.50"></text></g><g><title>-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (1 samples, 0.03%)</title><rect x="6.8746%" y="1525" width="0.0335%" height="15" fill="rgb(245,175,0)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1535.50"></text></g><g><title>-[NSMenuBarImpl layoutAllMenuBarsImmediately:] (1 samples, 0.03%)</title><rect x="6.8746%" y="1509" width="0.0335%" height="15" fill="rgb(208,168,36)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1519.50"></text></g><g><title>-[NSMenuBarImpl forEachRepresentationViewDo:] (1 samples, 0.03%)</title><rect x="6.8746%" y="1493" width="0.0335%" height="15" fill="rgb(246,171,24)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1503.50"></text></g><g><title>__46-[NSMenuBarImpl layoutAllMenuBarsImmediately:]_block_invoke (1 samples, 0.03%)</title><rect x="6.8746%" y="1477" width="0.0335%" height="15" fill="rgb(215,142,24)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1487.50"></text></g><g><title>-[NSMenuBarRepresentation layoutMenuBarIfNeeded] (1 samples, 0.03%)</title><rect x="6.8746%" y="1461" width="0.0335%" height="15" fill="rgb(250,187,7)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1471.50"></text></g><g><title>NSPerformVisuallyAtomicChange (1 samples, 0.03%)</title><rect x="6.8746%" y="1445" width="0.0335%" height="15" fill="rgb(228,66,33)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1455.50"></text></g><g><title>__48-[NSMenuBarRepresentation layoutMenuBarIfNeeded]_block_invoke (1 samples, 0.03%)</title><rect x="6.8746%" y="1429" width="0.0335%" height="15" fill="rgb(234,215,21)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1439.50"></text></g><g><title>-[NSMenuBarRepresentation _menuItemViewWidths] (1 samples, 0.03%)</title><rect x="6.8746%" y="1413" width="0.0335%" height="15" fill="rgb(222,191,20)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1423.50"></text></g><g><title>-[NSMenuBarItemView idealWidth] (1 samples, 0.03%)</title><rect x="6.8746%" y="1397" width="0.0335%" height="15" fill="rgb(245,79,54)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1407.50"></text></g><g><title>-[NSMenuBarItemView _ensureValidLineCache] (1 samples, 0.03%)</title><rect x="6.8746%" y="1381" width="0.0335%" height="15" fill="rgb(240,10,37)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1391.50"></text></g><g><title>CTLineCreateWithAttributedString (1 samples, 0.03%)</title><rect x="6.8746%" y="1365" width="0.0335%" height="15" fill="rgb(214,192,32)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1375.50"></text></g><g><title>TTypesetterAttrString::TTypesetterAttrString(__CFAttributedString const*, __CFDictionary const*, bool) (1 samples, 0.03%)</title><rect x="6.8746%" y="1349" width="0.0335%" height="15" fill="rgb(209,36,54)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1359.50"></text></g><g><title>TTypesetterAttrString::Initialize(__CFAttributedString const*, bool) (1 samples, 0.03%)</title><rect x="6.8746%" y="1333" width="0.0335%" height="15" fill="rgb(220,10,11)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1343.50"></text></g><g><title>TGlyphEncoder::EncodeChars(CFRange, TAttributes const&amp;, TGlyphEncoder::Fallbacks) (1 samples, 0.03%)</title><rect x="6.8746%" y="1317" width="0.0335%" height="15" fill="rgb(221,106,17)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1327.50"></text></g><g><title>TGlyphEncoder::RunUnicodeEncoderRecursively(unsigned int, TCFRef&lt;CTRun*&gt;&amp;&amp;, __CTFont const*, CFRange, TInlineVector&lt;long, 30ul&gt;&amp;, TGlyphEncoder::Fallbacks, std::__1::unique_ptr&lt;TFontCascade const, std::__1::default_delete&lt;TFontCascade const&gt;&gt;&amp;, __CFString const*, TGlyphEncoder::ClusterMatching, bool) (1 samples, 0.03%)</title><rect x="6.8746%" y="1301" width="0.0335%" height="15" fill="rgb(251,142,44)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1311.50"></text></g><g><title>TUnicodeEncoder::Encode(__CTFont const*, __CFString const*, TCharStreamIterator&amp;, CFRange, unsigned short*, double*, unsigned int*, double*, bool) (1 samples, 0.03%)</title><rect x="6.8746%" y="1285" width="0.0335%" height="15" fill="rgb(238,13,15)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1295.50"></text></g><g><title>TFont::InitShapingGlyphs() const (1 samples, 0.03%)</title><rect x="6.8746%" y="1269" width="0.0335%" height="15" fill="rgb(208,107,27)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1279.50"></text></g><g><title>TBaseFont::DetermineFontFlags(unsigned int) const (1 samples, 0.03%)</title><rect x="6.8746%" y="1253" width="0.0335%" height="15" fill="rgb(205,136,37)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1263.50"></text></g><g><title>TBaseFont::CopyXTProperties(__CFSet const*, bool) const (1 samples, 0.03%)</title><rect x="6.8746%" y="1237" width="0.0335%" height="15" fill="rgb(250,205,27)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1247.50"></text></g><g><title>XTCopyPropertiesForFont (1 samples, 0.03%)</title><rect x="6.8746%" y="1221" width="0.0335%" height="15" fill="rgb(210,80,43)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1231.50"></text></g><g><title>TGlobalFontRegistryImp::CopyPropertiesForFont(__CFURL const*, __CFSet const*, TFontQueryOptions const&amp;) const (1 samples, 0.03%)</title><rect x="6.8746%" y="1205" width="0.0335%" height="15" fill="rgb(247,160,36)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1215.50"></text></g><g><title>-[NSSet allObjects] (1 samples, 0.03%)</title><rect x="6.8746%" y="1189" width="0.0335%" height="15" fill="rgb(234,13,49)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1199.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="6.8746%" y="1173" width="0.0335%" height="15" fill="rgb(234,122,0)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1183.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="6.8746%" y="1157" width="0.0335%" height="15" fill="rgb(207,146,38)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1167.50"></text></g><g><title>getMethodFromRelativeList(relative_list_list_t&lt;method_list_t&gt;*, objc_selector*) (1 samples, 0.03%)</title><rect x="6.8746%" y="1141" width="0.0335%" height="15" fill="rgb(207,177,25)" fg:x="205" fg:w="1"/><text x="7.1246%" y="1151.50"></text></g><g><title>-[NSApplication _handleActivatedEvent:] (2 samples, 0.07%)</title><rect x="6.8746%" y="1589" width="0.0671%" height="15" fill="rgb(211,178,42)" fg:x="205" fg:w="2"/><text x="7.1246%" y="1599.50"></text></g><g><title>_NXShowKeyAndMain (1 samples, 0.03%)</title><rect x="6.9081%" y="1573" width="0.0335%" height="15" fill="rgb(230,69,54)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1583.50"></text></g><g><title>+[NSWindow _enableKeyStateChangeNotifications] (1 samples, 0.03%)</title><rect x="6.9081%" y="1557" width="0.0335%" height="15" fill="rgb(214,135,41)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1567.50"></text></g><g><title>-[NSThemeFrame _windowChangedKeyState] (1 samples, 0.03%)</title><rect x="6.9081%" y="1541" width="0.0335%" height="15" fill="rgb(237,67,25)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1551.50"></text></g><g><title>-[NSView _windowChangedKeyState] (1 samples, 0.03%)</title><rect x="6.9081%" y="1525" width="0.0335%" height="15" fill="rgb(222,189,50)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1535.50"></text></g><g><title>-[NSTitlebarContainerView _windowChangedKeyState] (1 samples, 0.03%)</title><rect x="6.9081%" y="1509" width="0.0335%" height="15" fill="rgb(245,148,34)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1519.50"></text></g><g><title>-[NSView _windowChangedKeyState] (1 samples, 0.03%)</title><rect x="6.9081%" y="1493" width="0.0335%" height="15" fill="rgb(222,29,6)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1503.50"></text></g><g><title>-[NSView _windowChangedKeyState] (1 samples, 0.03%)</title><rect x="6.9081%" y="1477" width="0.0335%" height="15" fill="rgb(221,189,43)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1487.50"></text></g><g><title>-[NSControl _windowChangedKeyState] (1 samples, 0.03%)</title><rect x="6.9081%" y="1461" width="0.0335%" height="15" fill="rgb(207,36,27)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1471.50"></text></g><g><title>+[NSAppearance _performWithCurrentAppearance:usingBlock:] (1 samples, 0.03%)</title><rect x="6.9081%" y="1445" width="0.0335%" height="15" fill="rgb(217,90,24)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1455.50"></text></g><g><title>__35-[NSControl _windowChangedKeyState]_block_invoke (1 samples, 0.03%)</title><rect x="6.9081%" y="1429" width="0.0335%" height="15" fill="rgb(224,66,35)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1439.50"></text></g><g><title>-[NSTextFieldCell _needRedrawOnWindowChangedKeyState] (1 samples, 0.03%)</title><rect x="6.9081%" y="1413" width="0.0335%" height="15" fill="rgb(221,13,50)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1423.50"></text></g><g><title>-[NSTextFieldCell _shouldUseStyledTextInView:withBackgroundStyle:] (1 samples, 0.03%)</title><rect x="6.9081%" y="1397" width="0.0335%" height="15" fill="rgb(236,68,49)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1407.50"></text></g><g><title>-[NSTextFieldCell _allowsStyledTextForColor:withBackgroundStyle:] (1 samples, 0.03%)</title><rect x="6.9081%" y="1381" width="0.0335%" height="15" fill="rgb(229,146,28)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1391.50"></text></g><g><title>-[NSCell _allowsStyledTextForColor:] (1 samples, 0.03%)</title><rect x="6.9081%" y="1365" width="0.0335%" height="15" fill="rgb(225,31,38)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1375.50"></text></g><g><title>-[NSArray containsObject:] (1 samples, 0.03%)</title><rect x="6.9081%" y="1349" width="0.0335%" height="15" fill="rgb(250,208,3)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1359.50"></text></g><g><title>-[NSCatalogColor isEqual:] (1 samples, 0.03%)</title><rect x="6.9081%" y="1333" width="0.0335%" height="15" fill="rgb(246,54,23)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1343.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="6.9081%" y="1317" width="0.0335%" height="15" fill="rgb(243,76,11)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1327.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="6.9081%" y="1301" width="0.0335%" height="15" fill="rgb(245,21,50)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1311.50"></text></g><g><title>getMethodFromRelativeList(relative_list_list_t&lt;method_list_t&gt;*, objc_selector*) (1 samples, 0.03%)</title><rect x="6.9081%" y="1285" width="0.0335%" height="15" fill="rgb(228,9,43)" fg:x="206" fg:w="1"/><text x="7.1581%" y="1295.50"></text></g><g><title>-[NSApplication(NSEventRouting) sendEvent:] (1 samples, 0.03%)</title><rect x="6.9416%" y="1589" width="0.0335%" height="15" fill="rgb(208,100,47)" fg:x="207" fg:w="1"/><text x="7.1916%" y="1599.50"></text></g><g><title>-[NSApplication isActive] (1 samples, 0.03%)</title><rect x="6.9752%" y="1573" width="0.0335%" height="15" fill="rgb(232,26,8)" fg:x="208" fg:w="1"/><text x="7.2252%" y="1583.50"></text></g><g><title>-[NSWindow sheetParent] (2 samples, 0.07%)</title><rect x="7.0087%" y="1557" width="0.0671%" height="15" fill="rgb(216,166,38)" fg:x="209" fg:w="2"/><text x="7.2587%" y="1567.50"></text></g><g><title>-[NSWindow _isRunningADocModalAttachedSheet] (3 samples, 0.10%)</title><rect x="7.0087%" y="1573" width="0.1006%" height="15" fill="rgb(251,202,51)" fg:x="209" fg:w="3"/><text x="7.2587%" y="1583.50"></text></g><g><title>objc_msgSend$_runningDocModal (1 samples, 0.03%)</title><rect x="7.0758%" y="1557" width="0.0335%" height="15" fill="rgb(254,216,34)" fg:x="211" fg:w="1"/><text x="7.3258%" y="1567.50"></text></g><g><title>-[NSFrameView styleMask] (1 samples, 0.03%)</title><rect x="7.2770%" y="1493" width="0.0335%" height="15" fill="rgb(251,32,27)" fg:x="217" fg:w="1"/><text x="7.5270%" y="1503.50"></text></g><g><title>-[NSThemeFrame _hasCustomTitlebarHeight] (1 samples, 0.03%)</title><rect x="7.3105%" y="1493" width="0.0335%" height="15" fill="rgb(208,127,28)" fg:x="218" fg:w="1"/><text x="7.5605%" y="1503.50"></text></g><g><title>NSKVOClass (1 samples, 0.03%)</title><rect x="7.3441%" y="1493" width="0.0335%" height="15" fill="rgb(224,137,22)" fg:x="219" fg:w="1"/><text x="7.5941%" y="1503.50"></text></g><g><title>object_getClass (1 samples, 0.03%)</title><rect x="7.3441%" y="1477" width="0.0335%" height="15" fill="rgb(254,70,32)" fg:x="219" fg:w="1"/><text x="7.5941%" y="1487.50"></text></g><g><title>-[NSWindow _isDraggable] (7 samples, 0.23%)</title><rect x="7.1764%" y="1541" width="0.2347%" height="15" fill="rgb(229,75,37)" fg:x="214" fg:w="7"/><text x="7.4264%" y="1551.50"></text></g><g><title>-[NSTitledFrame dragRectForFrameRect:] (7 samples, 0.23%)</title><rect x="7.1764%" y="1525" width="0.2347%" height="15" fill="rgb(252,64,23)" fg:x="214" fg:w="7"/><text x="7.4264%" y="1535.50"></text></g><g><title>-[NSThemeFrame _titlebarHeight] (6 samples, 0.20%)</title><rect x="7.2099%" y="1509" width="0.2012%" height="15" fill="rgb(232,162,48)" fg:x="215" fg:w="6"/><text x="7.4599%" y="1519.50"></text></g><g><title>objc_opt_class (1 samples, 0.03%)</title><rect x="7.3776%" y="1493" width="0.0335%" height="15" fill="rgb(246,160,12)" fg:x="220" fg:w="1"/><text x="7.6276%" y="1503.50"></text></g><g><title>-[NSWindow _allowsMoving] (10 samples, 0.34%)</title><rect x="7.1093%" y="1557" width="0.3353%" height="15" fill="rgb(247,166,0)" fg:x="212" fg:w="10"/><text x="7.3593%" y="1567.50"></text></g><g><title>-[NSWindow isMovable] (1 samples, 0.03%)</title><rect x="7.4111%" y="1541" width="0.0335%" height="15" fill="rgb(249,219,21)" fg:x="221" fg:w="1"/><text x="7.6611%" y="1551.50"></text></g><g><title>-[NSWindow _tryWindowDragWithEvent:] (11 samples, 0.37%)</title><rect x="7.1093%" y="1573" width="0.3689%" height="15" fill="rgb(205,209,3)" fg:x="212" fg:w="11"/><text x="7.3593%" y="1583.50"></text></g><g><title>-[NSWindowAuxiliary parentWindow] (1 samples, 0.03%)</title><rect x="7.4447%" y="1557" width="0.0335%" height="15" fill="rgb(243,44,1)" fg:x="222" fg:w="1"/><text x="7.6947%" y="1567.50"></text></g><g><title>-[NSEvent locationInWindow] (1 samples, 0.03%)</title><rect x="7.5453%" y="1509" width="0.0335%" height="15" fill="rgb(206,159,16)" fg:x="225" fg:w="1"/><text x="7.7953%" y="1519.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::scale_factor (1 samples, 0.03%)</title><rect x="7.5788%" y="1509" width="0.0335%" height="15" fill="rgb(244,77,30)" fg:x="226" fg:w="1"/><text x="7.8288%" y="1519.50"></text></g><g><title>-[NSWindow backingScaleFactor] (1 samples, 0.03%)</title><rect x="7.5788%" y="1493" width="0.0335%" height="15" fill="rgb(218,69,12)" fg:x="226" fg:w="1"/><text x="7.8288%" y="1503.50"></text></g><g><title>objc2::runtime::Class::metaclass (1 samples, 0.03%)</title><rect x="7.6123%" y="1493" width="0.0335%" height="15" fill="rgb(212,87,7)" fg:x="227" fg:w="1"/><text x="7.8623%" y="1503.50"></text></g><g><title>-[NSWindow _handleMouseDraggedEvent:] (4 samples, 0.13%)</title><rect x="7.5453%" y="1557" width="0.1341%" height="15" fill="rgb(245,114,25)" fg:x="225" fg:w="4"/><text x="7.7953%" y="1567.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::mouse_moved (4 samples, 0.13%)</title><rect x="7.5453%" y="1541" width="0.1341%" height="15" fill="rgb(210,61,42)" fg:x="225" fg:w="4"/><text x="7.7953%" y="1551.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::mouse_motion (4 samples, 0.13%)</title><rect x="7.5453%" y="1525" width="0.1341%" height="15" fill="rgb(211,52,33)" fg:x="225" fg:w="4"/><text x="7.7953%" y="1535.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::update_potentially_stale_modifiers (2 samples, 0.07%)</title><rect x="7.6123%" y="1509" width="0.0671%" height="15" fill="rgb(234,58,33)" fg:x="227" fg:w="2"/><text x="7.8623%" y="1519.50"></text></g><g><title>objc2::runtime::ivar_offset (1 samples, 0.03%)</title><rect x="7.6459%" y="1493" width="0.0335%" height="15" fill="rgb(220,115,36)" fg:x="228" fg:w="1"/><text x="7.8959%" y="1503.50"></text></g><g><title>objc2::runtime::Class::instance_variable (1 samples, 0.03%)</title><rect x="7.6459%" y="1477" width="0.0335%" height="15" fill="rgb(243,153,54)" fg:x="228" fg:w="1"/><text x="7.8959%" y="1487.50"></text></g><g><title>class_getInstanceVariable (1 samples, 0.03%)</title><rect x="7.6459%" y="1461" width="0.0335%" height="15" fill="rgb(251,47,18)" fg:x="228" fg:w="1"/><text x="7.8959%" y="1471.50"></text></g><g><title>_routeMouseDraggedEvent (1 samples, 0.03%)</title><rect x="7.6794%" y="1557" width="0.0335%" height="15" fill="rgb(242,102,42)" fg:x="229" fg:w="1"/><text x="7.9294%" y="1567.50"></text></g><g><title>-[NSView isHiddenOrHasHiddenAncestor] (1 samples, 0.03%)</title><rect x="7.6794%" y="1541" width="0.0335%" height="15" fill="rgb(234,31,38)" fg:x="229" fg:w="1"/><text x="7.9294%" y="1551.50"></text></g><g><title>-[NSView convertPoint:fromView:] (1 samples, 0.03%)</title><rect x="7.7129%" y="1525" width="0.0335%" height="15" fill="rgb(221,117,51)" fg:x="230" fg:w="1"/><text x="7.9629%" y="1535.50"></text></g><g><title>-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (9 samples, 0.30%)</title><rect x="7.4782%" y="1573" width="0.3018%" height="15" fill="rgb(212,20,18)" fg:x="223" fg:w="9"/><text x="7.7282%" y="1583.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::pressure_change_with_event (2 samples, 0.07%)</title><rect x="7.7129%" y="1557" width="0.0671%" height="15" fill="rgb(245,133,36)" fg:x="230" fg:w="2"/><text x="7.9629%" y="1567.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::mouse_motion (2 samples, 0.07%)</title><rect x="7.7129%" y="1541" width="0.0671%" height="15" fill="rgb(212,6,19)" fg:x="230" fg:w="2"/><text x="7.9629%" y="1551.50"></text></g><g><title>winit::platform_impl::platform::view::WinitView::update_potentially_stale_modifiers (1 samples, 0.03%)</title><rect x="7.7465%" y="1525" width="0.0335%" height="15" fill="rgb(218,1,36)" fg:x="231" fg:w="1"/><text x="7.9965%" y="1535.50"></text></g><g><title>objc2::runtime::ivar_offset (1 samples, 0.03%)</title><rect x="7.7465%" y="1509" width="0.0335%" height="15" fill="rgb(246,84,54)" fg:x="231" fg:w="1"/><text x="7.9965%" y="1519.50"></text></g><g><title>objc2::runtime::Class::instance_variable (1 samples, 0.03%)</title><rect x="7.7465%" y="1493" width="0.0335%" height="15" fill="rgb(242,110,6)" fg:x="231" fg:w="1"/><text x="7.9965%" y="1503.50"></text></g><g><title>_class_getVariable (1 samples, 0.03%)</title><rect x="7.7465%" y="1477" width="0.0335%" height="15" fill="rgb(214,47,5)" fg:x="231" fg:w="1"/><text x="7.9965%" y="1487.50"></text></g><g><title>getIvar(objc_class*, char const*) (1 samples, 0.03%)</title><rect x="7.7465%" y="1461" width="0.0335%" height="15" fill="rgb(218,159,25)" fg:x="231" fg:w="1"/><text x="7.9965%" y="1471.50"></text></g><g><title>-[NSWindow(NSGestureRecognizer_Routing) _sendEventToGestureRecognizers:requireAcceptsFirstMouse:] (2 samples, 0.07%)</title><rect x="7.7800%" y="1573" width="0.0671%" height="15" fill="rgb(215,211,28)" fg:x="232" fg:w="2"/><text x="8.0300%" y="1583.50"></text></g><g><title>+[NSSet setWithArray:] (1 samples, 0.03%)</title><rect x="7.8135%" y="1557" width="0.0335%" height="15" fill="rgb(238,59,32)" fg:x="233" fg:w="1"/><text x="8.0635%" y="1567.50"></text></g><g><title>+[NSSet allocWithZone:] (1 samples, 0.03%)</title><rect x="7.8135%" y="1541" width="0.0335%" height="15" fill="rgb(226,82,3)" fg:x="233" fg:w="1"/><text x="8.0635%" y="1551.50"></text></g><g><title>objc_loadWeak (1 samples, 0.03%)</title><rect x="7.8471%" y="1573" width="0.0335%" height="15" fill="rgb(240,164,32)" fg:x="234" fg:w="1"/><text x="8.0971%" y="1583.50"></text></g><g><title>-[NSWindow(NSEventRouting) sendEvent:] (30 samples, 1.01%)</title><rect x="6.9752%" y="1589" width="1.0060%" height="15" fill="rgb(232,46,7)" fg:x="208" fg:w="30"/><text x="7.2252%" y="1599.50"></text></g><g><title>objc_msgSend (3 samples, 0.10%)</title><rect x="7.8806%" y="1573" width="0.1006%" height="15" fill="rgb(229,129,53)" fg:x="235" fg:w="3"/><text x="8.1306%" y="1583.50"></text></g><g><title>_NSSendEventToObservers (1 samples, 0.03%)</title><rect x="7.9812%" y="1589" width="0.0335%" height="15" fill="rgb(234,188,29)" fg:x="238" fg:w="1"/><text x="8.2312%" y="1599.50"></text></g><g><title>-[NSLock lock] (1 samples, 0.03%)</title><rect x="7.9812%" y="1573" width="0.0335%" height="15" fill="rgb(246,141,4)" fg:x="238" fg:w="1"/><text x="8.2312%" y="1583.50"></text></g><g><title>__kdebug_trace64 (2 samples, 0.07%)</title><rect x="8.0148%" y="1589" width="0.0671%" height="15" fill="rgb(229,23,39)" fg:x="239" fg:w="2"/><text x="8.2648%" y="1599.50"></text></g><g><title>objc_retain (1 samples, 0.03%)</title><rect x="8.0818%" y="1589" width="0.0335%" height="15" fill="rgb(206,12,3)" fg:x="241" fg:w="1"/><text x="8.3318%" y="1599.50"></text></g><g><title>-[NSApplication(NSEventRouting) sendEvent:] (41 samples, 1.37%)</title><rect x="6.7740%" y="1605" width="1.3749%" height="15" fill="rgb(252,226,20)" fg:x="202" fg:w="41"/><text x="7.0240%" y="1615.50"></text></g><g><title>routeMouseMovedEvent (1 samples, 0.03%)</title><rect x="8.1154%" y="1589" width="0.0335%" height="15" fill="rgb(216,123,35)" fg:x="242" fg:w="1"/><text x="8.3654%" y="1599.50"></text></g><g><title>-[NSWindow(NSEventRouting) sendEvent:] (1 samples, 0.03%)</title><rect x="8.1154%" y="1573" width="0.0335%" height="15" fill="rgb(212,68,40)" fg:x="242" fg:w="1"/><text x="8.3654%" y="1583.50"></text></g><g><title>_routeMouseMovedEvent (1 samples, 0.03%)</title><rect x="8.1154%" y="1557" width="0.0335%" height="15" fill="rgb(254,125,32)" fg:x="242" fg:w="1"/><text x="8.3654%" y="1567.50"></text></g><g><title>-[NSApplication _handleEvent:] (46 samples, 1.54%)</title><rect x="6.6398%" y="1637" width="1.5426%" height="15" fill="rgb(253,97,22)" fg:x="198" fg:w="46"/><text x="6.8898%" y="1647.50"></text></g><g><title>winit::platform_impl::platform::app::WinitApplication::send_event (42 samples, 1.41%)</title><rect x="6.7740%" y="1621" width="1.4085%" height="15" fill="rgb(241,101,14)" fg:x="202" fg:w="42"/><text x="7.0240%" y="1631.50"></text></g><g><title>winit::platform_impl::platform::app_state::AppState::queue_event (1 samples, 0.03%)</title><rect x="8.1489%" y="1605" width="0.0335%" height="15" fill="rgb(238,103,29)" fg:x="243" fg:w="1"/><text x="8.3989%" y="1615.50"></text></g><g><title>DYLD-STUB$$objc_msgSend (1 samples, 0.03%)</title><rect x="8.1489%" y="1589" width="0.0335%" height="15" fill="rgb(233,195,47)" fg:x="243" fg:w="1"/><text x="8.3989%" y="1599.50"></text></g><g><title>+[NSEvent(NSConcurrentEvents) _isConcurrentEventProcessingSupported:] (1 samples, 0.03%)</title><rect x="8.1824%" y="1621" width="0.0335%" height="15" fill="rgb(246,218,30)" fg:x="244" fg:w="1"/><text x="8.4324%" y="1631.50"></text></g><g><title>-[NSApplication(NSEventRouting) _setCurrentEvent:] (1 samples, 0.03%)</title><rect x="8.2160%" y="1621" width="0.0335%" height="15" fill="rgb(219,145,47)" fg:x="245" fg:w="1"/><text x="8.4660%" y="1631.50"></text></g><g><title>+[_NSTrackingAreaAKManager discardTrackingAndCursorEventsIfNeeded] (1 samples, 0.03%)</title><rect x="8.2495%" y="1605" width="0.0335%" height="15" fill="rgb(243,12,26)" fg:x="246" fg:w="1"/><text x="8.4995%" y="1615.50"></text></g><g><title>-[__NSArrayI objectAtIndex:] (1 samples, 0.03%)</title><rect x="8.2830%" y="1605" width="0.0335%" height="15" fill="rgb(214,87,16)" fg:x="247" fg:w="1"/><text x="8.5330%" y="1615.50"></text></g><g><title>-[NSArray makeObjectsPerformSelector:] (3 samples, 0.10%)</title><rect x="8.2495%" y="1621" width="0.1006%" height="15" fill="rgb(208,99,42)" fg:x="246" fg:w="3"/><text x="8.4995%" y="1631.50"></text></g><g><title>objc_msgSend$performSelector: (1 samples, 0.03%)</title><rect x="8.3166%" y="1605" width="0.0335%" height="15" fill="rgb(253,99,2)" fg:x="248" fg:w="1"/><text x="8.5666%" y="1615.50"></text></g><g><title>-[NSApplication _wantsDeviceDependentEventModifierFlags] (1 samples, 0.03%)</title><rect x="8.3501%" y="1605" width="0.0335%" height="15" fill="rgb(220,168,23)" fg:x="249" fg:w="1"/><text x="8.6001%" y="1615.50"></text></g><g><title>-[NSApplication(NSWindowCache) _findWindowUsingCache:] (1 samples, 0.03%)</title><rect x="8.3836%" y="1605" width="0.0335%" height="15" fill="rgb(242,38,24)" fg:x="250" fg:w="1"/><text x="8.6336%" y="1615.50"></text></g><g><title>-[NSCGSWindow(NSForNSEvent) lastFrameChangeTimestamp] (1 samples, 0.03%)</title><rect x="8.4172%" y="1605" width="0.0335%" height="15" fill="rgb(225,182,9)" fg:x="251" fg:w="1"/><text x="8.6672%" y="1615.50"></text></g><g><title>-[NSEvent _initWithCGEvent:eventRef:] (4 samples, 0.13%)</title><rect x="8.3501%" y="1621" width="0.1341%" height="15" fill="rgb(243,178,37)" fg:x="249" fg:w="4"/><text x="8.6001%" y="1631.50"></text></g><g><title>-[NSEvent _initWithCGEvent:eventRef:] (1 samples, 0.03%)</title><rect x="8.4507%" y="1605" width="0.0335%" height="15" fill="rgb(232,139,19)" fg:x="252" fg:w="1"/><text x="8.7007%" y="1615.50"></text></g><g><title>-[NSEvent dealloc] (1 samples, 0.03%)</title><rect x="8.4842%" y="1621" width="0.0335%" height="15" fill="rgb(225,201,24)" fg:x="253" fg:w="1"/><text x="8.7342%" y="1631.50"></text></g><g><title>ReleaseEvent (1 samples, 0.03%)</title><rect x="8.4842%" y="1605" width="0.0335%" height="15" fill="rgb(221,47,46)" fg:x="253" fg:w="1"/><text x="8.7342%" y="1615.50"></text></g><g><title>_CFRelease (1 samples, 0.03%)</title><rect x="8.4842%" y="1589" width="0.0335%" height="15" fill="rgb(249,23,13)" fg:x="253" fg:w="1"/><text x="8.7342%" y="1599.50"></text></g><g><title>event_finalize(void const*) (1 samples, 0.03%)</title><rect x="8.4842%" y="1573" width="0.0335%" height="15" fill="rgb(219,9,5)" fg:x="253" fg:w="1"/><text x="8.7342%" y="1583.50"></text></g><g><title>CGSEventReclaimObjects (1 samples, 0.03%)</title><rect x="8.4842%" y="1557" width="0.0335%" height="15" fill="rgb(254,171,16)" fg:x="253" fg:w="1"/><text x="8.7342%" y="1567.50"></text></g><g><title>-[HIDEvent dealloc] (1 samples, 0.03%)</title><rect x="8.4842%" y="1541" width="0.0335%" height="15" fill="rgb(230,171,20)" fg:x="253" fg:w="1"/><text x="8.7342%" y="1551.50"></text></g><g><title>-[NSObject dealloc] (1 samples, 0.03%)</title><rect x="8.4842%" y="1525" width="0.0335%" height="15" fill="rgb(210,71,41)" fg:x="253" fg:w="1"/><text x="8.7342%" y="1535.50"></text></g><g><title>-[NSEvent phase] (1 samples, 0.03%)</title><rect x="8.5178%" y="1621" width="0.0335%" height="15" fill="rgb(206,173,20)" fg:x="254" fg:w="1"/><text x="8.7678%" y="1631.50"></text></g><g><title>-[NSEvent window] (2 samples, 0.07%)</title><rect x="8.5513%" y="1621" width="0.0671%" height="15" fill="rgb(233,88,34)" fg:x="255" fg:w="2"/><text x="8.8013%" y="1631.50"></text></g><g><title>objc_storeWeakOrNil (1 samples, 0.03%)</title><rect x="8.5848%" y="1605" width="0.0335%" height="15" fill="rgb(223,209,46)" fg:x="256" fg:w="1"/><text x="8.8348%" y="1615.50"></text></g><g><title>weak_register_no_lock (1 samples, 0.03%)</title><rect x="8.5848%" y="1589" width="0.0335%" height="15" fill="rgb(250,43,18)" fg:x="256" fg:w="1"/><text x="8.8348%" y="1599.50"></text></g><g><title>append_referrer(weak_entry_t*, objc_object**) (1 samples, 0.03%)</title><rect x="8.5848%" y="1573" width="0.0335%" height="15" fill="rgb(208,13,10)" fg:x="256" fg:w="1"/><text x="8.8348%" y="1583.50"></text></g><g><title>_DPSEventHandledByCarbon (1 samples, 0.03%)</title><rect x="8.6184%" y="1621" width="0.0335%" height="15" fill="rgb(212,200,36)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1631.50"></text></g><g><title>SendEventToEventTarget (1 samples, 0.03%)</title><rect x="8.6184%" y="1605" width="0.0335%" height="15" fill="rgb(225,90,30)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1615.50"></text></g><g><title>SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (1 samples, 0.03%)</title><rect x="8.6184%" y="1589" width="0.0335%" height="15" fill="rgb(236,182,39)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1599.50"></text></g><g><title>DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (1 samples, 0.03%)</title><rect x="8.6184%" y="1573" width="0.0335%" height="15" fill="rgb(212,144,35)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1583.50"></text></g><g><title>ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (1 samples, 0.03%)</title><rect x="8.6184%" y="1557" width="0.0335%" height="15" fill="rgb(228,63,44)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1567.50"></text></g><g><title>SendEventToEventTarget (1 samples, 0.03%)</title><rect x="8.6184%" y="1541" width="0.0335%" height="15" fill="rgb(228,109,6)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1551.50"></text></g><g><title>SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (1 samples, 0.03%)</title><rect x="8.6184%" y="1525" width="0.0335%" height="15" fill="rgb(238,117,24)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1535.50"></text></g><g><title>DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (1 samples, 0.03%)</title><rect x="8.6184%" y="1509" width="0.0335%" height="15" fill="rgb(242,26,26)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1519.50"></text></g><g><title>TEventTypeIndex::ContainsType(unsigned int, unsigned int) (1 samples, 0.03%)</title><rect x="8.6184%" y="1493" width="0.0335%" height="15" fill="rgb(221,92,48)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1503.50"></text></g><g><title>EntrySearch(void const*, void const*, long, unsigned long, void*, int (*)(void const*, void const*, void const*), unsigned long*) (1 samples, 0.03%)</title><rect x="8.6184%" y="1477" width="0.0335%" height="15" fill="rgb(209,209,32)" fg:x="257" fg:w="1"/><text x="8.8684%" y="1487.50"></text></g><g><title>-[NSDate timeIntervalSinceNow] (1 samples, 0.03%)</title><rect x="8.6519%" y="1605" width="0.0335%" height="15" fill="rgb(221,70,22)" fg:x="258" fg:w="1"/><text x="8.9019%" y="1615.50"></text></g><g><title>-[NSConstantDate timeIntervalSinceReferenceDate] (1 samples, 0.03%)</title><rect x="8.6519%" y="1589" width="0.0335%" height="15" fill="rgb(248,145,5)" fg:x="258" fg:w="1"/><text x="8.9019%" y="1599.50"></text></g><g><title>__swift_instantiateCanonicalPrespecializedGenericMetadata (1 samples, 0.03%)</title><rect x="8.6854%" y="229" width="0.0335%" height="15" fill="rgb(226,116,26)" fg:x="259" fg:w="1"/><text x="8.9354%" y="239.50"></text></g><g><title>_swift_getGenericMetadata(swift::MetadataRequest, void const* const*, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*) (1 samples, 0.03%)</title><rect x="8.6854%" y="213" width="0.0335%" height="15" fill="rgb(244,5,17)" fg:x="259" fg:w="1"/><text x="8.9354%" y="223.50"></text></g><g><title>0x26bf36828 (2 samples, 0.07%)</title><rect x="8.6854%" y="1221" width="0.0671%" height="15" fill="rgb(252,159,33)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1231.50"></text></g><g><title>0x26bf36844 (2 samples, 0.07%)</title><rect x="8.6854%" y="1205" width="0.0671%" height="15" fill="rgb(206,71,0)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1215.50"></text></g><g><title>0x26bf363c0 (2 samples, 0.07%)</title><rect x="8.6854%" y="1189" width="0.0671%" height="15" fill="rgb(233,118,54)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1199.50"></text></g><g><title>0x26bf35940 (2 samples, 0.07%)</title><rect x="8.6854%" y="1173" width="0.0671%" height="15" fill="rgb(234,83,48)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1183.50"></text></g><g><title>0x244a1e57c (2 samples, 0.07%)</title><rect x="8.6854%" y="1157" width="0.0671%" height="15" fill="rgb(228,3,54)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1167.50"></text></g><g><title>0x244a1e098 (2 samples, 0.07%)</title><rect x="8.6854%" y="1141" width="0.0671%" height="15" fill="rgb(226,155,13)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1151.50"></text></g><g><title>0x244a1e394 (2 samples, 0.07%)</title><rect x="8.6854%" y="1125" width="0.0671%" height="15" fill="rgb(241,28,37)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1135.50"></text></g><g><title>0x2449bb6ac (2 samples, 0.07%)</title><rect x="8.6854%" y="1109" width="0.0671%" height="15" fill="rgb(233,93,10)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1119.50"></text></g><g><title>0x2449bb53c (2 samples, 0.07%)</title><rect x="8.6854%" y="1093" width="0.0671%" height="15" fill="rgb(225,113,19)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1103.50"></text></g><g><title>0x244a287c4 (2 samples, 0.07%)</title><rect x="8.6854%" y="1077" width="0.0671%" height="15" fill="rgb(241,2,18)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1087.50"></text></g><g><title>0x244a2b2b4 (2 samples, 0.07%)</title><rect x="8.6854%" y="1061" width="0.0671%" height="15" fill="rgb(228,207,21)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1071.50"></text></g><g><title>0x244a2764c (2 samples, 0.07%)</title><rect x="8.6854%" y="1045" width="0.0671%" height="15" fill="rgb(213,211,35)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1055.50"></text></g><g><title>dispatch thunk of PropertyListDecoder.decode&lt;A&gt;(_:from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="1029" width="0.0671%" height="15" fill="rgb(209,83,10)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1039.50"></text></g><g><title>PropertyListDecoder.decode&lt;A&gt;(_:from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="1013" width="0.0671%" height="15" fill="rgb(209,164,1)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1023.50"></text></g><g><title>PropertyListDecoder.decode&lt;A&gt;(_:from:format:) (2 samples, 0.07%)</title><rect x="8.6854%" y="997" width="0.0671%" height="15" fill="rgb(213,184,43)" fg:x="259" fg:w="2"/><text x="8.9354%" y="1007.50"></text></g><g><title>Data._Representation.withUnsafeBytes&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="981" width="0.0671%" height="15" fill="rgb(231,61,34)" fg:x="259" fg:w="2"/><text x="8.9354%" y="991.50"></text></g><g><title>__DataStorage.withUnsafeBytes&lt;A&gt;(in:apply:) (2 samples, 0.07%)</title><rect x="8.6854%" y="965" width="0.0671%" height="15" fill="rgb(235,75,3)" fg:x="259" fg:w="2"/><text x="8.9354%" y="975.50"></text></g><g><title>partial apply for closure #1 in Data.withBufferView&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="949" width="0.0671%" height="15" fill="rgb(220,106,47)" fg:x="259" fg:w="2"/><text x="8.9354%" y="959.50"></text></g><g><title>closure #1 in Data.withBufferView&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="933" width="0.0671%" height="15" fill="rgb(210,196,33)" fg:x="259" fg:w="2"/><text x="8.9354%" y="943.50"></text></g><g><title>partial apply for closure #1 in static PropertyListDecoder.detectFormatAndConvertEncoding&lt;A&gt;(for:binaryPlist:xml:openstep:) (2 samples, 0.07%)</title><rect x="8.6854%" y="917" width="0.0671%" height="15" fill="rgb(229,154,42)" fg:x="259" fg:w="2"/><text x="8.9354%" y="927.50"></text></g><g><title>closure #1 in static PropertyListDecoder.detectFormatAndConvertEncoding&lt;A&gt;(for:binaryPlist:xml:openstep:) (2 samples, 0.07%)</title><rect x="8.6854%" y="901" width="0.0671%" height="15" fill="rgb(228,114,26)" fg:x="259" fg:w="2"/><text x="8.9354%" y="911.50"></text></g><g><title>partial apply for closure #1 in PropertyListDecoder._decode&lt;A&gt;(_:from:format:) (2 samples, 0.07%)</title><rect x="8.6854%" y="885" width="0.0671%" height="15" fill="rgb(208,144,1)" fg:x="259" fg:w="2"/><text x="8.9354%" y="895.50"></text></g><g><title>partial apply for closure #1 in PropertyListDecoder._decode&lt;A&gt;(_:from:format:) (2 samples, 0.07%)</title><rect x="8.6854%" y="869" width="0.0671%" height="15" fill="rgb(239,112,37)" fg:x="259" fg:w="2"/><text x="8.9354%" y="879.50"></text></g><g><title>closure #1 in PropertyListDecoder._decode&lt;A&gt;(_:from:format:) (2 samples, 0.07%)</title><rect x="8.6854%" y="853" width="0.0671%" height="15" fill="rgb(210,96,50)" fg:x="259" fg:w="2"/><text x="8.9354%" y="863.50"></text></g><g><title>partial apply for closure #1 in PropertyListDecoder.decode&lt;A&gt;(_:from:format:) (2 samples, 0.07%)</title><rect x="8.6854%" y="837" width="0.0671%" height="15" fill="rgb(222,178,2)" fg:x="259" fg:w="2"/><text x="8.9354%" y="847.50"></text></g><g><title>protocol witness for _PlistDecoderEntryPointProtocol.decode&lt;A&gt;(_:) in conformance _PlistDecoder&lt;A&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="821" width="0.0671%" height="15" fill="rgb(226,74,18)" fg:x="259" fg:w="2"/><text x="8.9354%" y="831.50"></text></g><g><title>_PlistDecoder.decode&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="805" width="0.0671%" height="15" fill="rgb(225,67,54)" fg:x="259" fg:w="2"/><text x="8.9354%" y="815.50"></text></g><g><title>specialized _PlistDecoder.unwrapGeneric&lt;A, B&gt;(_:as:for:_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="789" width="0.0671%" height="15" fill="rgb(251,92,32)" fg:x="259" fg:w="2"/><text x="8.9354%" y="799.50"></text></g><g><title>dispatch thunk of Decodable.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="773" width="0.0671%" height="15" fill="rgb(228,149,22)" fg:x="259" fg:w="2"/><text x="8.9354%" y="783.50"></text></g><g><title>protocol witness for Decodable.init(from:) in conformance &lt;A&gt; A? (2 samples, 0.07%)</title><rect x="8.6854%" y="757" width="0.0671%" height="15" fill="rgb(243,54,13)" fg:x="259" fg:w="2"/><text x="8.9354%" y="767.50"></text></g><g><title>Optional&lt;A&gt;.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="741" width="0.0671%" height="15" fill="rgb(243,180,28)" fg:x="259" fg:w="2"/><text x="8.9354%" y="751.50"></text></g><g><title>protocol witness for SingleValueDecodingContainer.decode&lt;A&gt;(_:) in conformance _PlistDecoder&lt;A&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="725" width="0.0671%" height="15" fill="rgb(208,167,24)" fg:x="259" fg:w="2"/><text x="8.9354%" y="735.50"></text></g><g><title>protocol witness for _PlistDecoderEntryPointProtocol.decode&lt;A&gt;(_:) in conformance _PlistDecoder&lt;A&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="709" width="0.0671%" height="15" fill="rgb(245,73,45)" fg:x="259" fg:w="2"/><text x="8.9354%" y="719.50"></text></g><g><title>_PlistDecoder.decode&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="693" width="0.0671%" height="15" fill="rgb(237,203,48)" fg:x="259" fg:w="2"/><text x="8.9354%" y="703.50"></text></g><g><title>specialized _PlistDecoder.unwrapGeneric&lt;A, B&gt;(_:as:for:_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="677" width="0.0671%" height="15" fill="rgb(211,197,16)" fg:x="259" fg:w="2"/><text x="8.9354%" y="687.50"></text></g><g><title>dispatch thunk of Decodable.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="661" width="0.0671%" height="15" fill="rgb(243,99,51)" fg:x="259" fg:w="2"/><text x="8.9354%" y="671.50"></text></g><g><title>protocol witness for Decodable.init(from:) in conformance &lt;A&gt; A? (2 samples, 0.07%)</title><rect x="8.6854%" y="645" width="0.0671%" height="15" fill="rgb(215,123,29)" fg:x="259" fg:w="2"/><text x="8.9354%" y="655.50"></text></g><g><title>Optional&lt;A&gt;.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="629" width="0.0671%" height="15" fill="rgb(239,186,37)" fg:x="259" fg:w="2"/><text x="8.9354%" y="639.50"></text></g><g><title>protocol witness for SingleValueDecodingContainer.decode&lt;A&gt;(_:) in conformance _PlistDecoder&lt;A&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="613" width="0.0671%" height="15" fill="rgb(252,136,39)" fg:x="259" fg:w="2"/><text x="8.9354%" y="623.50"></text></g><g><title>protocol witness for _PlistDecoderEntryPointProtocol.decode&lt;A&gt;(_:) in conformance _PlistDecoder&lt;A&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="597" width="0.0671%" height="15" fill="rgb(223,213,32)" fg:x="259" fg:w="2"/><text x="8.9354%" y="607.50"></text></g><g><title>_PlistDecoder.decode&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="581" width="0.0671%" height="15" fill="rgb(233,115,5)" fg:x="259" fg:w="2"/><text x="8.9354%" y="591.50"></text></g><g><title>specialized _PlistDecoder.unwrapGeneric&lt;A, B&gt;(_:as:for:_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="565" width="0.0671%" height="15" fill="rgb(207,226,44)" fg:x="259" fg:w="2"/><text x="8.9354%" y="575.50"></text></g><g><title>dispatch thunk of Decodable.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="549" width="0.0671%" height="15" fill="rgb(208,126,0)" fg:x="259" fg:w="2"/><text x="8.9354%" y="559.50"></text></g><g><title>protocol witness for Decodable.init(from:) in conformance &lt;&gt; [A : B] (2 samples, 0.07%)</title><rect x="8.6854%" y="533" width="0.0671%" height="15" fill="rgb(244,66,21)" fg:x="259" fg:w="2"/><text x="8.9354%" y="543.50"></text></g><g><title>Dictionary&lt;&gt;.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="517" width="0.0671%" height="15" fill="rgb(222,97,12)" fg:x="259" fg:w="2"/><text x="8.9354%" y="527.50"></text></g><g><title>_KeyedDecodingContainerBox.decode&lt;A, B&gt;(_:forKey:) (2 samples, 0.07%)</title><rect x="8.6854%" y="501" width="0.0671%" height="15" fill="rgb(219,213,19)" fg:x="259" fg:w="2"/><text x="8.9354%" y="511.50"></text></g><g><title>protocol witness for KeyedDecodingContainerProtocol.decode&lt;A&gt;(_:forKey:) in conformance _PlistKeyedDecodingContainer&lt;A, B&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="485" width="0.0671%" height="15" fill="rgb(252,169,30)" fg:x="259" fg:w="2"/><text x="8.9354%" y="495.50"></text></g><g><title>protocol witness for KeyedDecodingContainerProtocol.decode&lt;A&gt;(_:forKey:) in conformance _PlistKeyedDecodingContainer&lt;A, B&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="469" width="0.0671%" height="15" fill="rgb(206,32,51)" fg:x="259" fg:w="2"/><text x="8.9354%" y="479.50"></text></g><g><title>_PlistKeyedDecodingContainer.decode&lt;A&gt;(_:forKey:) (2 samples, 0.07%)</title><rect x="8.6854%" y="453" width="0.0671%" height="15" fill="rgb(250,172,42)" fg:x="259" fg:w="2"/><text x="8.9354%" y="463.50"></text></g><g><title>_PlistDecoder.unwrapGeneric&lt;A, B&gt;(_:as:for:_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="437" width="0.0671%" height="15" fill="rgb(209,34,43)" fg:x="259" fg:w="2"/><text x="8.9354%" y="447.50"></text></g><g><title>dispatch thunk of Decodable.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="421" width="0.0671%" height="15" fill="rgb(223,11,35)" fg:x="259" fg:w="2"/><text x="8.9354%" y="431.50"></text></g><g><title>protocol witness for Decodable.init(from:) in conformance &lt;A&gt; [A] (2 samples, 0.07%)</title><rect x="8.6854%" y="405" width="0.0671%" height="15" fill="rgb(251,219,26)" fg:x="259" fg:w="2"/><text x="8.9354%" y="415.50"></text></g><g><title>Array&lt;A&gt;.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="389" width="0.0671%" height="15" fill="rgb(231,119,3)" fg:x="259" fg:w="2"/><text x="8.9354%" y="399.50"></text></g><g><title>protocol witness for UnkeyedDecodingContainer.decode&lt;A&gt;(_:) in conformance _PlistUnkeyedDecodingContainer&lt;A&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="373" width="0.0671%" height="15" fill="rgb(216,97,11)" fg:x="259" fg:w="2"/><text x="8.9354%" y="383.50"></text></g><g><title>_PlistUnkeyedDecodingContainer.decode&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="357" width="0.0671%" height="15" fill="rgb(223,59,9)" fg:x="259" fg:w="2"/><text x="8.9354%" y="367.50"></text></g><g><title>specialized _PlistDecoder.unwrapGeneric&lt;A, B&gt;(_:as:for:_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="341" width="0.0671%" height="15" fill="rgb(233,93,31)" fg:x="259" fg:w="2"/><text x="8.9354%" y="351.50"></text></g><g><title>dispatch thunk of Decodable.init(from:) (2 samples, 0.07%)</title><rect x="8.6854%" y="325" width="0.0671%" height="15" fill="rgb(239,81,33)" fg:x="259" fg:w="2"/><text x="8.9354%" y="335.50"></text></g><g><title>0x2449c0e24 (2 samples, 0.07%)</title><rect x="8.6854%" y="309" width="0.0671%" height="15" fill="rgb(213,120,34)" fg:x="259" fg:w="2"/><text x="8.9354%" y="319.50"></text></g><g><title>0x2449c0a00 (2 samples, 0.07%)</title><rect x="8.6854%" y="293" width="0.0671%" height="15" fill="rgb(243,49,53)" fg:x="259" fg:w="2"/><text x="8.9354%" y="303.50"></text></g><g><title>dispatch thunk of UnkeyedDecodingContainer.decode&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="277" width="0.0671%" height="15" fill="rgb(247,216,33)" fg:x="259" fg:w="2"/><text x="8.9354%" y="287.50"></text></g><g><title>protocol witness for UnkeyedDecodingContainer.decode&lt;A&gt;(_:) in conformance _PlistUnkeyedDecodingContainer&lt;A&gt; (2 samples, 0.07%)</title><rect x="8.6854%" y="261" width="0.0671%" height="15" fill="rgb(226,26,14)" fg:x="259" fg:w="2"/><text x="8.9354%" y="271.50"></text></g><g><title>_PlistUnkeyedDecodingContainer.decode&lt;A&gt;(_:) (2 samples, 0.07%)</title><rect x="8.6854%" y="245" width="0.0671%" height="15" fill="rgb(215,49,53)" fg:x="259" fg:w="2"/><text x="8.9354%" y="255.50"></text></g><g><title>specialized _PlistDecoder.unwrapGeneric&lt;A, B&gt;(_:as:for:_:) (1 samples, 0.03%)</title><rect x="8.7190%" y="229" width="0.0335%" height="15" fill="rgb(245,162,40)" fg:x="260" fg:w="1"/><text x="8.9690%" y="239.50"></text></g><g><title>dispatch thunk of Decodable.init(from:) (1 samples, 0.03%)</title><rect x="8.7190%" y="213" width="0.0335%" height="15" fill="rgb(229,68,17)" fg:x="260" fg:w="1"/><text x="8.9690%" y="223.50"></text></g><g><title>0x2449c127c (1 samples, 0.03%)</title><rect x="8.7190%" y="197" width="0.0335%" height="15" fill="rgb(213,182,10)" fg:x="260" fg:w="1"/><text x="8.9690%" y="207.50"></text></g><g><title>0x2449c1028 (1 samples, 0.03%)</title><rect x="8.7190%" y="181" width="0.0335%" height="15" fill="rgb(245,125,30)" fg:x="260" fg:w="1"/><text x="8.9690%" y="191.50"></text></g><g><title>dispatch thunk of SingleValueDecodingContainer.decode(_:) (1 samples, 0.03%)</title><rect x="8.7190%" y="165" width="0.0335%" height="15" fill="rgb(232,202,2)" fg:x="260" fg:w="1"/><text x="8.9690%" y="175.50"></text></g><g><title>protocol witness for SingleValueDecodingContainer.decode(_:) in conformance _PlistDecoder&lt;A&gt; (1 samples, 0.03%)</title><rect x="8.7190%" y="149" width="0.0335%" height="15" fill="rgb(237,140,51)" fg:x="260" fg:w="1"/><text x="8.9690%" y="159.50"></text></g><g><title>_PlistDecoder.decode(_:) (1 samples, 0.03%)</title><rect x="8.7190%" y="133" width="0.0335%" height="15" fill="rgb(236,157,25)" fg:x="260" fg:w="1"/><text x="8.9690%" y="143.50"></text></g><g><title>specialized _PlistDecoder.unwrapString&lt;A&gt;(from:for:_:) (1 samples, 0.03%)</title><rect x="8.7190%" y="117" width="0.0335%" height="15" fill="rgb(219,209,0)" fg:x="260" fg:w="1"/><text x="8.9690%" y="127.50"></text></g><g><title>protocol witness for static PlistDecodingFormat.unwrapString&lt;A&gt;(from:in:for:_:) in conformance _BPlistDecodingFormat (1 samples, 0.03%)</title><rect x="8.7190%" y="101" width="0.0335%" height="15" fill="rgb(240,116,54)" fg:x="260" fg:w="1"/><text x="8.9690%" y="111.50"></text></g><g><title>static _BPlistDecodingFormat.unwrapString&lt;A&gt;(from:in:for:_:) (1 samples, 0.03%)</title><rect x="8.7190%" y="85" width="0.0335%" height="15" fill="rgb(216,10,36)" fg:x="260" fg:w="1"/><text x="8.9690%" y="95.50"></text></g><g><title>_CodingPathNode.path.getter (1 samples, 0.03%)</title><rect x="8.7190%" y="69" width="0.0335%" height="15" fill="rgb(222,72,44)" fg:x="260" fg:w="1"/><text x="8.9690%" y="79.50"></text></g><g><title>specialized Array.append&lt;A&gt;(contentsOf:) (1 samples, 0.03%)</title><rect x="8.7190%" y="53" width="0.0335%" height="15" fill="rgb(232,159,9)" fg:x="260" fg:w="1"/><text x="8.9690%" y="63.50"></text></g><g><title>specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) (1 samples, 0.03%)</title><rect x="8.7190%" y="37" width="0.0335%" height="15" fill="rgb(210,39,32)" fg:x="260" fg:w="1"/><text x="8.9690%" y="47.50"></text></g><g><title>NXMapGet (1 samples, 0.03%)</title><rect x="8.7525%" y="1077" width="0.0335%" height="15" fill="rgb(216,194,45)" fg:x="261" fg:w="1"/><text x="9.0025%" y="1087.50"></text></g><g><title>_mapStrHash(_NXMapTable*, void const*) (1 samples, 0.03%)</title><rect x="8.7525%" y="1061" width="0.0335%" height="15" fill="rgb(218,18,35)" fg:x="261" fg:w="1"/><text x="9.0025%" y="1071.50"></text></g><g><title>getProtocol(char const*) (2 samples, 0.07%)</title><rect x="8.7525%" y="1093" width="0.0671%" height="15" fill="rgb(207,83,51)" fg:x="261" fg:w="2"/><text x="9.0025%" y="1103.50"></text></g><g><title>getPreoptimizedProtocol (1 samples, 0.03%)</title><rect x="8.7860%" y="1077" width="0.0335%" height="15" fill="rgb(225,63,43)" fg:x="262" fg:w="1"/><text x="9.0360%" y="1087.50"></text></g><g><title>dyld4::APIs::_dyld_for_each_objc_protocol(char const*, dyld4::ReadOnlyCallback&lt;void (void*, bool, bool*) block_pointer&gt;) (1 samples, 0.03%)</title><rect x="8.7860%" y="1061" width="0.0335%" height="15" fill="rgb(207,57,36)" fg:x="262" fg:w="1"/><text x="9.0360%" y="1071.50"></text></g><g><title>objc::ObjectHashTable::forEachObject(char const*, void (unsigned long long, unsigned short, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="8.7860%" y="1045" width="0.0335%" height="15" fill="rgb(216,99,33)" fg:x="262" fg:w="1"/><text x="9.0360%" y="1055.50"></text></g><g><title>dyld4::RuntimeState::notifyLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;) (4 samples, 0.13%)</title><rect x="8.7525%" y="1157" width="0.1341%" height="15" fill="rgb(225,42,16)" fg:x="261" fg:w="4"/><text x="9.0025%" y="1167.50"></text></g><g><title>dyld4::RuntimeState::notifyLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;)::$_0::operator()() const (4 samples, 0.13%)</title><rect x="8.7525%" y="1141" width="0.1341%" height="15" fill="rgb(220,201,45)" fg:x="261" fg:w="4"/><text x="9.0025%" y="1151.50"></text></g><g><title>map_images (4 samples, 0.13%)</title><rect x="8.7525%" y="1125" width="0.1341%" height="15" fill="rgb(225,33,4)" fg:x="261" fg:w="4"/><text x="9.0025%" y="1135.50"></text></g><g><title>map_images_nolock (4 samples, 0.13%)</title><rect x="8.7525%" y="1109" width="0.1341%" height="15" fill="rgb(224,33,50)" fg:x="261" fg:w="4"/><text x="9.0025%" y="1119.50"></text></g><g><title>load_categories_nolock(header_info*) (2 samples, 0.07%)</title><rect x="8.8196%" y="1093" width="0.0671%" height="15" fill="rgb(246,198,51)" fg:x="263" fg:w="2"/><text x="9.0696%" y="1103.50"></text></g><g><title>load_categories_nolock(header_info*)::$_0::operator()(category_t* const*, bool) const (2 samples, 0.07%)</title><rect x="8.8196%" y="1077" width="0.0671%" height="15" fill="rgb(205,22,4)" fg:x="263" fg:w="2"/><text x="9.0696%" y="1087.50"></text></g><g><title>attachCategories(objc_class*, locstamped_category_t const*, unsigned int, objc_class*, int) (1 samples, 0.03%)</title><rect x="8.8531%" y="1061" width="0.0335%" height="15" fill="rgb(206,3,8)" fg:x="264" fg:w="1"/><text x="9.1031%" y="1071.50"></text></g><g><title>attachCategories(objc_class*, locstamped_category_t const*, unsigned int, objc_class*, int)::$_0::operator()(attachCategories(objc_class*, locstamped_category_t const*, unsigned int, objc_class*, int)::Lists*, bool) const (1 samples, 0.03%)</title><rect x="8.8531%" y="1045" width="0.0335%" height="15" fill="rgb(251,23,15)" fg:x="264" fg:w="1"/><text x="9.1031%" y="1055.50"></text></g><g><title>list_array_tt&lt;method_t, method_list_t, method_list_t_authed_ptr&gt;::validate() const (1 samples, 0.03%)</title><rect x="8.8531%" y="1029" width="0.0335%" height="15" fill="rgb(252,88,28)" fg:x="264" fg:w="1"/><text x="9.1031%" y="1039.50"></text></g><g><title>-[NSApplication setMainMenu:] (7 samples, 0.23%)</title><rect x="8.6854%" y="1317" width="0.2347%" height="15" fill="rgb(212,127,14)" fg:x="259" fg:w="7"/><text x="8.9354%" y="1327.50"></text></g><g><title>-[NSMenu _setMenuName:] (7 samples, 0.23%)</title><rect x="8.6854%" y="1301" width="0.2347%" height="15" fill="rgb(247,145,37)" fg:x="259" fg:w="7"/><text x="8.9354%" y="1311.50"></text></g><g><title>-[NSApplication setMainMenu:] (7 samples, 0.23%)</title><rect x="8.6854%" y="1285" width="0.2347%" height="15" fill="rgb(209,117,53)" fg:x="259" fg:w="7"/><text x="8.9354%" y="1295.50"></text></g><g><title>-[NSApplication(NSMenuUpdating) _customizeMainMenu] (7 samples, 0.23%)</title><rect x="8.6854%" y="1269" width="0.2347%" height="15" fill="rgb(212,90,42)" fg:x="259" fg:w="7"/><text x="8.9354%" y="1279.50"></text></g><g><title>-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (7 samples, 0.23%)</title><rect x="8.6854%" y="1253" width="0.2347%" height="15" fill="rgb(218,164,37)" fg:x="259" fg:w="7"/><text x="8.9354%" y="1263.50"></text></g><g><title>+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (7 samples, 0.23%)</title><rect x="8.6854%" y="1237" width="0.2347%" height="15" fill="rgb(246,65,34)" fg:x="259" fg:w="7"/><text x="8.9354%" y="1247.50"></text></g><g><title>WritingToolsUILibraryCore (5 samples, 0.17%)</title><rect x="8.7525%" y="1221" width="0.1677%" height="15" fill="rgb(231,100,33)" fg:x="261" fg:w="5"/><text x="9.0025%" y="1231.50"></text></g><g><title>_sl_dlopen (5 samples, 0.17%)</title><rect x="8.7525%" y="1205" width="0.1677%" height="15" fill="rgb(228,126,14)" fg:x="261" fg:w="5"/><text x="9.0025%" y="1215.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*) (5 samples, 0.17%)</title><rect x="8.7525%" y="1189" width="0.1677%" height="15" fill="rgb(215,173,21)" fg:x="261" fg:w="5"/><text x="9.0025%" y="1199.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const (5 samples, 0.17%)</title><rect x="8.7525%" y="1173" width="0.1677%" height="15" fill="rgb(210,6,40)" fg:x="261" fg:w="5"/><text x="9.0025%" y="1183.50"></text></g><g><title>void dyld4::RuntimeLocks::withLoadersWriteLockAndProtectedStack&lt;dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()&gt;(dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;())::&apos;lambda&apos;()::operator()() const (1 samples, 0.03%)</title><rect x="8.8867%" y="1157" width="0.0335%" height="15" fill="rgb(212,48,18)" fg:x="265" fg:w="1"/><text x="9.1367%" y="1167.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()::operator()() const (1 samples, 0.03%)</title><rect x="8.8867%" y="1141" width="0.0335%" height="15" fill="rgb(230,214,11)" fg:x="265" fg:w="1"/><text x="9.1367%" y="1151.50"></text></g><g><title>dyld4::RuntimeState::partitionDelayLoads(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt;, std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt;, lsl::Vector&lt;dyld4::Loader const*&gt;*) (1 samples, 0.03%)</title><rect x="8.8867%" y="1125" width="0.0335%" height="15" fill="rgb(254,105,39)" fg:x="265" fg:w="1"/><text x="9.1367%" y="1135.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="8.8867%" y="1109" width="0.0335%" height="15" fill="rgb(245,158,5)" fg:x="265" fg:w="1"/><text x="9.1367%" y="1119.50"></text></g><g><title>+[NSImage(NSSymbolImages) _imageWithSymbolName:inCatalog:variableValue:accessibilityDescription:createdWithCompatibilityImageName:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1189" width="0.0335%" height="15" fill="rgb(249,208,11)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1199.50"></text></g><g><title>-[NSImage bestRepresentationForHints:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1173" width="0.0335%" height="15" fill="rgb(210,39,28)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1183.50"></text></g><g><title>__38-[NSImage bestRepresentationForHints:]_block_invoke (1 samples, 0.03%)</title><rect x="8.9202%" y="1157" width="0.0335%" height="15" fill="rgb(211,56,53)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1167.50"></text></g><g><title>-[NSImageSymbolRepProvider bestRepresentationForImage:hints:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1141" width="0.0335%" height="15" fill="rgb(226,201,30)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1151.50"></text></g><g><title>-[_NSSimpleLRUCache objectForKey:creationBlock:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1125" width="0.0335%" height="15" fill="rgb(239,101,34)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1135.50"></text></g><g><title>-[NSImageSymbolRepProvider _bestRepresentationForImage:hints:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1109" width="0.0335%" height="15" fill="rgb(226,209,5)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1119.50"></text></g><g><title>-[CUICatalog namedVectorGlyphWithName:scaleFactor:deviceIdiom:layoutDirection:glyphContinuousSize:glyphContinuousWeight:glyphPointSize:appearanceName:locale:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1093" width="0.0335%" height="15" fill="rgb(250,105,47)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1103.50"></text></g><g><title>-[CUICatalog _resolvedRenditionKeyFromThemeRef:withBaseKey:scaleFactor:deviceIdiom:deviceSubtype:displayGamut:layoutDirection:sizeClassHorizontal:sizeClassVertical:memoryClass:graphicsClass:graphicsFallBackOrder:deviceSubtypeFallBackOrder:locale:adjustRenditionKeyWithBlock:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1077" width="0.0335%" height="15" fill="rgb(230,72,3)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1087.50"></text></g><g><title>-[CUICatalog _private_resolvedRenditionKeyFromThemeRef:withBaseKey:scaleFactor:deviceIdiom:deviceSubtype:displayGamut:layoutDirection:sizeClassHorizontal:sizeClassVertical:memoryClass:graphicsClass:graphicsFallBackOrder:deviceSubtypeFallBackOrder:localizationIdentifier:adjustRenditionKeyWithBlock:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1061" width="0.0335%" height="15" fill="rgb(232,218,39)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1071.50"></text></g><g><title>-[CUIStructuredThemeStore canGetRenditionWithKey:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1045" width="0.0335%" height="15" fill="rgb(248,166,6)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1055.50"></text></g><g><title>-[CUIStructuredThemeStore assetExistsForKey:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1029" width="0.0335%" height="15" fill="rgb(247,89,20)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1039.50"></text></g><g><title>-[CUICommonAssetStorage assetExistsForKeyData:length:] (1 samples, 0.03%)</title><rect x="8.9202%" y="1013" width="0.0335%" height="15" fill="rgb(248,130,54)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1023.50"></text></g><g><title>BOMTreeValueExists (1 samples, 0.03%)</title><rect x="8.9202%" y="997" width="0.0335%" height="15" fill="rgb(234,196,4)" fg:x="266" fg:w="1"/><text x="9.1702%" y="1007.50"></text></g><g><title>_findIndexForKey (1 samples, 0.03%)</title><rect x="8.9202%" y="981" width="0.0335%" height="15" fill="rgb(250,143,31)" fg:x="266" fg:w="1"/><text x="9.1702%" y="991.50"></text></g><g><title>-[NSApplication _postDidFinishNotification] (9 samples, 0.30%)</title><rect x="8.6854%" y="1461" width="0.3018%" height="15" fill="rgb(211,110,34)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1471.50"></text></g><g><title>-[NSNotificationCenter postNotificationName:object:userInfo:] (9 samples, 0.30%)</title><rect x="8.6854%" y="1445" width="0.3018%" height="15" fill="rgb(215,124,48)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1455.50"></text></g><g><title>_CFXNotificationPost (9 samples, 0.30%)</title><rect x="8.6854%" y="1429" width="0.3018%" height="15" fill="rgb(216,46,13)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1439.50"></text></g><g><title>_CFXRegistrationPost (9 samples, 0.30%)</title><rect x="8.6854%" y="1413" width="0.3018%" height="15" fill="rgb(205,184,25)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1423.50"></text></g><g><title>___CFXRegistrationPost_block_invoke (9 samples, 0.30%)</title><rect x="8.6854%" y="1397" width="0.3018%" height="15" fill="rgb(228,1,10)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1407.50"></text></g><g><title>__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (9 samples, 0.30%)</title><rect x="8.6854%" y="1381" width="0.3018%" height="15" fill="rgb(213,116,27)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1391.50"></text></g><g><title>winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (9 samples, 0.30%)</title><rect x="8.6854%" y="1365" width="0.3018%" height="15" fill="rgb(241,95,50)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1375.50"></text></g><g><title>winit::platform_impl::platform::app_state::AppState::launched (9 samples, 0.30%)</title><rect x="8.6854%" y="1349" width="0.3018%" height="15" fill="rgb(238,48,32)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1359.50"></text></g><g><title>winit::platform_impl::platform::menu::initialize (9 samples, 0.30%)</title><rect x="8.6854%" y="1333" width="0.3018%" height="15" fill="rgb(235,113,49)" fg:x="259" fg:w="9"/><text x="8.9354%" y="1343.50"></text></g><g><title>winit::platform_impl::platform::appkit::menu_item::NSMenuItem::separatorItem (2 samples, 0.07%)</title><rect x="8.9202%" y="1317" width="0.0671%" height="15" fill="rgb(205,127,43)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1327.50"></text></g><g><title>+[NSMenuItem separatorItem] (2 samples, 0.07%)</title><rect x="8.9202%" y="1301" width="0.0671%" height="15" fill="rgb(250,162,2)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1311.50"></text></g><g><title>-[NSMenuItem _configureAsSeparatorItem] (2 samples, 0.07%)</title><rect x="8.9202%" y="1285" width="0.0671%" height="15" fill="rgb(220,13,41)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1295.50"></text></g><g><title>-[NSMenuItem setTitle:] (2 samples, 0.07%)</title><rect x="8.9202%" y="1269" width="0.0671%" height="15" fill="rgb(249,221,25)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1279.50"></text></g><g><title>_NSFaultInObject (2 samples, 0.07%)</title><rect x="8.9202%" y="1253" width="0.0671%" height="15" fill="rgb(215,208,19)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1263.50"></text></g><g><title>-[NSExtraMIData init] (2 samples, 0.07%)</title><rect x="8.9202%" y="1237" width="0.0671%" height="15" fill="rgb(236,175,2)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1247.50"></text></g><g><title>+[NSImage imageNamed:] (2 samples, 0.07%)</title><rect x="8.9202%" y="1221" width="0.0671%" height="15" fill="rgb(241,52,2)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1231.50"></text></g><g><title>+[NSImage _systemImageNamed:] (2 samples, 0.07%)</title><rect x="8.9202%" y="1205" width="0.0671%" height="15" fill="rgb(248,140,14)" fg:x="266" fg:w="2"/><text x="9.1702%" y="1215.50"></text></g><g><title>+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (1 samples, 0.03%)</title><rect x="8.9537%" y="1189" width="0.0335%" height="15" fill="rgb(253,22,42)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1199.50"></text></g><g><title>catalogWithSystemSymbolName (1 samples, 0.03%)</title><rect x="8.9537%" y="1173" width="0.0335%" height="15" fill="rgb(234,61,47)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1183.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="8.9537%" y="1157" width="0.0335%" height="15" fill="rgb(208,226,15)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1167.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="8.9537%" y="1141" width="0.0335%" height="15" fill="rgb(217,221,4)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1151.50"></text></g><g><title>__NSImageGetCoreGlyphsCatalog_block_invoke (1 samples, 0.03%)</title><rect x="8.9537%" y="1125" width="0.0335%" height="15" fill="rgb(212,174,34)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1135.50"></text></g><g><title>+[CUICatalog defaultUICatalogForBundle:] (1 samples, 0.03%)</title><rect x="8.9537%" y="1109" width="0.0335%" height="15" fill="rgb(253,83,4)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1119.50"></text></g><g><title>_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="8.9537%" y="1093" width="0.0335%" height="15" fill="rgb(250,195,49)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1103.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="8.9537%" y="1077" width="0.0335%" height="15" fill="rgb(241,192,25)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1087.50"></text></g><g><title>__40+[CUICatalog defaultUICatalogForBundle:]_block_invoke.5 (1 samples, 0.03%)</title><rect x="8.9537%" y="1061" width="0.0335%" height="15" fill="rgb(208,124,10)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1071.50"></text></g><g><title>-[CUICatalog initWithName:fromBundle:error:] (1 samples, 0.03%)</title><rect x="8.9537%" y="1045" width="0.0335%" height="15" fill="rgb(222,33,0)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1055.50"></text></g><g><title>-[NSBundle bundleIdentifier] (1 samples, 0.03%)</title><rect x="8.9537%" y="1029" width="0.0335%" height="15" fill="rgb(234,209,28)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1039.50"></text></g><g><title>-[NSBundle infoDictionary] (1 samples, 0.03%)</title><rect x="8.9537%" y="1013" width="0.0335%" height="15" fill="rgb(224,11,23)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1023.50"></text></g><g><title>-[NSBundle _cfBundle] (1 samples, 0.03%)</title><rect x="8.9537%" y="997" width="0.0335%" height="15" fill="rgb(232,99,1)" fg:x="267" fg:w="1"/><text x="9.2037%" y="1007.50"></text></g><g><title>_CFBundleCreate (1 samples, 0.03%)</title><rect x="8.9537%" y="981" width="0.0335%" height="15" fill="rgb(237,95,45)" fg:x="267" fg:w="1"/><text x="9.2037%" y="991.50"></text></g><g><title>CFBundleGetInfoDictionary (1 samples, 0.03%)</title><rect x="8.9537%" y="965" width="0.0335%" height="15" fill="rgb(208,109,11)" fg:x="267" fg:w="1"/><text x="9.2037%" y="975.50"></text></g><g><title>_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.03%)</title><rect x="8.9537%" y="949" width="0.0335%" height="15" fill="rgb(216,190,48)" fg:x="267" fg:w="1"/><text x="9.2037%" y="959.50"></text></g><g><title>_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.03%)</title><rect x="8.9537%" y="933" width="0.0335%" height="15" fill="rgb(251,171,36)" fg:x="267" fg:w="1"/><text x="9.2037%" y="943.50"></text></g><g><title>_CFIterateDirectory (1 samples, 0.03%)</title><rect x="8.9537%" y="917" width="0.0335%" height="15" fill="rgb(230,62,22)" fg:x="267" fg:w="1"/><text x="9.2037%" y="927.50"></text></g><g><title>__opendir2 (1 samples, 0.03%)</title><rect x="8.9537%" y="901" width="0.0335%" height="15" fill="rgb(225,114,35)" fg:x="267" fg:w="1"/><text x="9.2037%" y="911.50"></text></g><g><title>open$NOCANCEL (1 samples, 0.03%)</title><rect x="8.9537%" y="885" width="0.0335%" height="15" fill="rgb(215,118,42)" fg:x="267" fg:w="1"/><text x="9.2037%" y="895.50"></text></g><g><title>__open_nocancel (1 samples, 0.03%)</title><rect x="8.9537%" y="869" width="0.0335%" height="15" fill="rgb(243,119,21)" fg:x="267" fg:w="1"/><text x="9.2037%" y="879.50"></text></g><g><title>AEProcessAppleEvent (10 samples, 0.34%)</title><rect x="8.6854%" y="1605" width="0.3353%" height="15" fill="rgb(252,177,53)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1615.50"></text></g><g><title>aeProcessAppleEvent (10 samples, 0.34%)</title><rect x="8.6854%" y="1589" width="0.3353%" height="15" fill="rgb(237,209,29)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1599.50"></text></g><g><title>0x19198fa50 (10 samples, 0.34%)</title><rect x="8.6854%" y="1573" width="0.3353%" height="15" fill="rgb(212,65,23)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1583.50"></text></g><g><title>0x19198fafc (10 samples, 0.34%)</title><rect x="8.6854%" y="1557" width="0.3353%" height="15" fill="rgb(230,222,46)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1567.50"></text></g><g><title>_NSAppleEventManagerGenericHandler (10 samples, 0.34%)</title><rect x="8.6854%" y="1541" width="0.3353%" height="15" fill="rgb(215,135,32)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1551.50"></text></g><g><title>-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (10 samples, 0.34%)</title><rect x="8.6854%" y="1525" width="0.3353%" height="15" fill="rgb(246,101,22)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1535.50"></text></g><g><title>-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (10 samples, 0.34%)</title><rect x="8.6854%" y="1509" width="0.3353%" height="15" fill="rgb(206,107,13)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1519.50"></text></g><g><title>-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (10 samples, 0.34%)</title><rect x="8.6854%" y="1493" width="0.3353%" height="15" fill="rgb(250,100,44)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1503.50"></text></g><g><title>-[NSApplication _sendFinishLaunchingNotification] (10 samples, 0.34%)</title><rect x="8.6854%" y="1477" width="0.3353%" height="15" fill="rgb(231,147,38)" fg:x="259" fg:w="10"/><text x="8.9354%" y="1487.50"></text></g><g><title>_LSCopyApplicationInformation (1 samples, 0.03%)</title><rect x="8.9873%" y="1461" width="0.0335%" height="15" fill="rgb(229,8,40)" fg:x="268" fg:w="1"/><text x="9.2373%" y="1471.50"></text></g><g><title>free_tiny (1 samples, 0.03%)</title><rect x="8.9873%" y="1445" width="0.0335%" height="15" fill="rgb(221,135,30)" fg:x="268" fg:w="1"/><text x="9.2373%" y="1455.50"></text></g><g><title>CFArrayGetCount (1 samples, 0.03%)</title><rect x="9.0208%" y="1605" width="0.0335%" height="15" fill="rgb(249,193,18)" fg:x="269" fg:w="1"/><text x="9.2708%" y="1615.50"></text></g><g><title>CopyEventCGEvent (1 samples, 0.03%)</title><rect x="9.0543%" y="1605" width="0.0335%" height="15" fill="rgb(209,133,39)" fg:x="270" fg:w="1"/><text x="9.3043%" y="1615.50"></text></g><g><title>AcquireEventFromQueue (1 samples, 0.03%)</title><rect x="9.0879%" y="1573" width="0.0335%" height="15" fill="rgb(232,100,14)" fg:x="271" fg:w="1"/><text x="9.3379%" y="1583.50"></text></g><g><title>_NotifyEventLoopObservers (1 samples, 0.03%)</title><rect x="9.0879%" y="1557" width="0.0335%" height="15" fill="rgb(224,185,1)" fg:x="271" fg:w="1"/><text x="9.3379%" y="1567.50"></text></g><g><title>KeyEventDeQueuedObserver (1 samples, 0.03%)</title><rect x="9.0879%" y="1541" width="0.0335%" height="15" fill="rgb(223,139,8)" fg:x="271" fg:w="1"/><text x="9.3379%" y="1551.50"></text></g><g><title>OUTLINED_FUNCTION_9 (1 samples, 0.03%)</title><rect x="9.0879%" y="1525" width="0.0335%" height="15" fill="rgb(232,213,38)" fg:x="271" fg:w="1"/><text x="9.3379%" y="1535.50"></text></g><g><title>CFRunLoopRunInMode (1 samples, 0.03%)</title><rect x="9.1214%" y="1573" width="0.0335%" height="15" fill="rgb(207,94,22)" fg:x="272" fg:w="1"/><text x="9.3714%" y="1583.50"></text></g><g><title>GetCurrentEventQueue (2 samples, 0.07%)</title><rect x="9.1549%" y="1573" width="0.0671%" height="15" fill="rgb(219,183,54)" fg:x="273" fg:w="2"/><text x="9.4049%" y="1583.50"></text></g><g><title>GetMainEventQueue (1 samples, 0.03%)</title><rect x="9.2220%" y="1573" width="0.0335%" height="15" fill="rgb(216,185,54)" fg:x="275" fg:w="1"/><text x="9.4720%" y="1583.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="9.2220%" y="1557" width="0.0335%" height="15" fill="rgb(254,217,39)" fg:x="275" fg:w="1"/><text x="9.4720%" y="1567.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="9.2891%" y="1509" width="0.0335%" height="15" fill="rgb(240,178,23)" fg:x="277" fg:w="1"/><text x="9.5391%" y="1519.50"></text></g><g><title>__CFRunLoopCopyMode (3 samples, 0.10%)</title><rect x="9.2891%" y="1541" width="0.1006%" height="15" fill="rgb(218,11,47)" fg:x="277" fg:w="3"/><text x="9.5391%" y="1551.50"></text></g><g><title>CFSetGetValue (3 samples, 0.10%)</title><rect x="9.2891%" y="1525" width="0.1006%" height="15" fill="rgb(218,51,51)" fg:x="277" fg:w="3"/><text x="9.5391%" y="1535.50"></text></g><g><title>___CFBasicHashFindBucket_Linear (2 samples, 0.07%)</title><rect x="9.3226%" y="1509" width="0.0671%" height="15" fill="rgb(238,126,27)" fg:x="278" fg:w="2"/><text x="9.5726%" y="1519.50"></text></g><g><title>CFEqual (2 samples, 0.07%)</title><rect x="9.3226%" y="1493" width="0.0671%" height="15" fill="rgb(249,202,22)" fg:x="278" fg:w="2"/><text x="9.5726%" y="1503.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="9.3561%" y="1477" width="0.0335%" height="15" fill="rgb(254,195,49)" fg:x="279" fg:w="1"/><text x="9.6061%" y="1487.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (2 samples, 0.07%)</title><rect x="9.4567%" y="1461" width="0.0671%" height="15" fill="rgb(208,123,14)" fg:x="282" fg:w="2"/><text x="9.7067%" y="1471.50"></text></g><g><title>CA::Context::commit_transaction(CA::Transaction*, double, double*) (5 samples, 0.17%)</title><rect x="9.5238%" y="1461" width="0.1677%" height="15" fill="rgb(224,200,8)" fg:x="284" fg:w="5"/><text x="9.7738%" y="1471.50"></text></g><g><title>CA::Context::unref(bool) (1 samples, 0.03%)</title><rect x="9.6915%" y="1461" width="0.0335%" height="15" fill="rgb(217,61,36)" fg:x="289" fg:w="1"/><text x="9.9415%" y="1471.50"></text></g><g><title>CA::Layer::commit_if_needed(CA::Transaction*, void (CA::Layer*, unsigned int, unsigned int) block_pointer) (1 samples, 0.03%)</title><rect x="9.7250%" y="1461" width="0.0335%" height="15" fill="rgb(206,35,45)" fg:x="290" fg:w="1"/><text x="9.9750%" y="1471.50"></text></g><g><title>CA::Layer::retain_parent(CA::Transaction*) const (1 samples, 0.03%)</title><rect x="9.8256%" y="1429" width="0.0335%" height="15" fill="rgb(217,65,33)" fg:x="293" fg:w="1"/><text x="10.0756%" y="1439.50"></text></g><g><title>CA::Layer::layout_if_needed(CA::Transaction*) (4 samples, 0.13%)</title><rect x="9.7586%" y="1461" width="0.1341%" height="15" fill="rgb(222,158,48)" fg:x="291" fg:w="4"/><text x="10.0086%" y="1471.50"></text></g><g><title>CA::Layer::thread_flags_(CA::Transaction*) (3 samples, 0.10%)</title><rect x="9.7921%" y="1445" width="0.1006%" height="15" fill="rgb(254,2,54)" fg:x="292" fg:w="3"/><text x="10.0421%" y="1455.50"></text></g><g><title>CALayerRetain (1 samples, 0.03%)</title><rect x="9.8592%" y="1429" width="0.0335%" height="15" fill="rgb(250,143,38)" fg:x="294" fg:w="1"/><text x="10.1092%" y="1439.50"></text></g><g><title>CA::Render::Coder::~Coder() (1 samples, 0.03%)</title><rect x="9.8927%" y="1461" width="0.0335%" height="15" fill="rgb(248,25,0)" fg:x="295" fg:w="1"/><text x="10.1427%" y="1471.50"></text></g><g><title>CA::Render::Encoder::Encoder(x_heap_struct*, unsigned int, unsigned int, double) (2 samples, 0.07%)</title><rect x="9.9262%" y="1461" width="0.0671%" height="15" fill="rgb(206,152,27)" fg:x="296" fg:w="2"/><text x="10.1762%" y="1471.50"></text></g><g><title>DYLD-STUB$$voucher_mach_msg_clear (1 samples, 0.03%)</title><rect x="10.0939%" y="1429" width="0.0335%" height="15" fill="rgb(240,77,30)" fg:x="301" fg:w="1"/><text x="10.3439%" y="1439.50"></text></g><g><title>mach_msg (20 samples, 0.67%)</title><rect x="10.1274%" y="1429" width="0.6707%" height="15" fill="rgb(231,5,3)" fg:x="302" fg:w="20"/><text x="10.3774%" y="1439.50"></text></g><g><title>mach_msg_overwrite (20 samples, 0.67%)</title><rect x="10.1274%" y="1413" width="0.6707%" height="15" fill="rgb(207,226,32)" fg:x="302" fg:w="20"/><text x="10.3774%" y="1423.50"></text></g><g><title>mach_msg2_internal (20 samples, 0.67%)</title><rect x="10.1274%" y="1397" width="0.6707%" height="15" fill="rgb(222,207,47)" fg:x="302" fg:w="20"/><text x="10.3774%" y="1407.50"></text></g><g><title>mach_msg2_trap (20 samples, 0.67%)</title><rect x="10.1274%" y="1381" width="0.6707%" height="15" fill="rgb(229,115,45)" fg:x="302" fg:w="20"/><text x="10.3774%" y="1391.50"></text></g><g><title>CA::Render::Encoder::send_message(unsigned int, unsigned int, unsigned int*, unsigned long) (25 samples, 0.84%)</title><rect x="9.9933%" y="1461" width="0.8384%" height="15" fill="rgb(224,191,6)" fg:x="298" fg:w="25"/><text x="10.2433%" y="1471.50"></text></g><g><title>CA::Render::Message::send_message() (23 samples, 0.77%)</title><rect x="10.0604%" y="1445" width="0.7713%" height="15" fill="rgb(230,227,24)" fg:x="300" fg:w="23"/><text x="10.3104%" y="1455.50"></text></g><g><title>voucher_mach_msg_clear (1 samples, 0.03%)</title><rect x="10.7981%" y="1429" width="0.0335%" height="15" fill="rgb(228,80,19)" fg:x="322" fg:w="1"/><text x="11.0481%" y="1439.50"></text></g><g><title>CA::Render::Encoder::set_object_cache(CA::Render::Encoder::ObjectCache*, bool) (2 samples, 0.07%)</title><rect x="10.8317%" y="1461" width="0.0671%" height="15" fill="rgb(247,229,0)" fg:x="323" fg:w="2"/><text x="11.0817%" y="1471.50"></text></g><g><title>__kdebug_trace64 (7 samples, 0.23%)</title><rect x="10.8987%" y="1461" width="0.2347%" height="15" fill="rgb(237,194,15)" fg:x="325" fg:w="7"/><text x="11.1487%" y="1471.50"></text></g><g><title>CA::Context::commit_transaction(CA::Transaction*, double, double*) (52 samples, 1.74%)</title><rect x="9.4567%" y="1477" width="1.7438%" height="15" fill="rgb(219,203,20)" fg:x="282" fg:w="52"/><text x="9.7067%" y="1487.50"></text></g><g><title>_dispatch_event_loop_poke (2 samples, 0.07%)</title><rect x="11.1335%" y="1461" width="0.0671%" height="15" fill="rgb(234,128,8)" fg:x="332" fg:w="2"/><text x="11.3835%" y="1471.50"></text></g><g><title>_dispatch_kq_poll (2 samples, 0.07%)</title><rect x="11.1335%" y="1445" width="0.0671%" height="15" fill="rgb(248,202,8)" fg:x="332" fg:w="2"/><text x="11.3835%" y="1455.50"></text></g><g><title>kevent_id (2 samples, 0.07%)</title><rect x="11.1335%" y="1429" width="0.0671%" height="15" fill="rgb(206,104,37)" fg:x="332" fg:w="2"/><text x="11.3835%" y="1439.50"></text></g><g><title>CA::Layer::layout_if_needed(CA::Transaction*) (1 samples, 0.03%)</title><rect x="11.2005%" y="1477" width="0.0335%" height="15" fill="rgb(223,8,27)" fg:x="334" fg:w="1"/><text x="11.4505%" y="1487.50"></text></g><g><title>CA::Transaction::commit() (3 samples, 0.10%)</title><rect x="11.2341%" y="1477" width="0.1006%" height="15" fill="rgb(216,217,28)" fg:x="335" fg:w="3"/><text x="11.4841%" y="1487.50"></text></g><g><title>CA::Transaction::set_frame_begin_time(unsigned int, double) (1 samples, 0.03%)</title><rect x="11.3347%" y="1477" width="0.0335%" height="15" fill="rgb(249,199,1)" fg:x="338" fg:w="1"/><text x="11.5847%" y="1487.50"></text></g><g><title>CALayerRelease (1 samples, 0.03%)</title><rect x="11.3682%" y="1477" width="0.0335%" height="15" fill="rgb(240,85,17)" fg:x="339" fg:w="1"/><text x="11.6182%" y="1487.50"></text></g><g><title>__kdebug_trace64 (1 samples, 0.03%)</title><rect x="11.4017%" y="1477" width="0.0335%" height="15" fill="rgb(206,108,45)" fg:x="340" fg:w="1"/><text x="11.6517%" y="1487.50"></text></g><g><title>_os_signpost_emit_unreliably_with_name_impl (3 samples, 0.10%)</title><rect x="11.4353%" y="1477" width="0.1006%" height="15" fill="rgb(245,210,41)" fg:x="341" fg:w="3"/><text x="11.6853%" y="1487.50"></text></g><g><title>__os_signpost_emit_impl (3 samples, 0.10%)</title><rect x="11.4353%" y="1461" width="0.1006%" height="15" fill="rgb(206,13,37)" fg:x="341" fg:w="3"/><text x="11.6853%" y="1471.50"></text></g><g><title>_os_log_impl_flatten_and_send (3 samples, 0.10%)</title><rect x="11.4353%" y="1445" width="0.1006%" height="15" fill="rgb(250,61,18)" fg:x="341" fg:w="3"/><text x="11.6853%" y="1455.50"></text></g><g><title>voucher_activity_trace_v_2 (1 samples, 0.03%)</title><rect x="11.5023%" y="1429" width="0.0335%" height="15" fill="rgb(235,172,48)" fg:x="343" fg:w="1"/><text x="11.7523%" y="1439.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="11.5023%" y="1413" width="0.0335%" height="15" fill="rgb(249,201,17)" fg:x="343" fg:w="1"/><text x="11.7523%" y="1423.50"></text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (64 samples, 2.15%)</title><rect x="9.4232%" y="1525" width="2.1462%" height="15" fill="rgb(219,208,6)" fg:x="281" fg:w="64"/><text x="9.6732%" y="1535.50">_..</text></g><g><title>CA::Transaction::flush_as_runloop_observer(bool) (64 samples, 2.15%)</title><rect x="9.4232%" y="1509" width="2.1462%" height="15" fill="rgb(248,31,23)" fg:x="281" fg:w="64"/><text x="9.6732%" y="1519.50">C..</text></g><g><title>CA::Transaction::commit() (63 samples, 2.11%)</title><rect x="9.4567%" y="1493" width="2.1127%" height="15" fill="rgb(245,15,42)" fg:x="282" fg:w="63"/><text x="9.7067%" y="1503.50">C..</text></g><g><title>kdebug_trace (1 samples, 0.03%)</title><rect x="11.5359%" y="1477" width="0.0335%" height="15" fill="rgb(222,217,39)" fg:x="344" fg:w="1"/><text x="11.7859%" y="1487.50"></text></g><g><title>kdebug_is_enabled (1 samples, 0.03%)</title><rect x="11.5359%" y="1461" width="0.0335%" height="15" fill="rgb(210,219,27)" fg:x="344" fg:w="1"/><text x="11.7859%" y="1471.50"></text></g><g><title>kdebug_typefilter (1 samples, 0.03%)</title><rect x="11.5359%" y="1445" width="0.0335%" height="15" fill="rgb(252,166,36)" fg:x="344" fg:w="1"/><text x="11.7859%" y="1455.50"></text></g><g><title>__CFRunLoopDoObservers (67 samples, 2.25%)</title><rect x="9.3897%" y="1541" width="2.2468%" height="15" fill="rgb(245,132,34)" fg:x="280" fg:w="67"/><text x="9.6397%" y="1551.50">_..</text></g><g><title>kdebug_trace (2 samples, 0.07%)</title><rect x="11.5694%" y="1525" width="0.0671%" height="15" fill="rgb(236,54,3)" fg:x="345" fg:w="2"/><text x="11.8194%" y="1535.50"></text></g><g><title>kdebug_is_enabled (2 samples, 0.07%)</title><rect x="11.5694%" y="1509" width="0.0671%" height="15" fill="rgb(241,173,43)" fg:x="345" fg:w="2"/><text x="11.8194%" y="1519.50"></text></g><g><title>kdebug_typefilter (1 samples, 0.03%)</title><rect x="11.6030%" y="1493" width="0.0335%" height="15" fill="rgb(215,190,9)" fg:x="346" fg:w="1"/><text x="11.8530%" y="1503.50"></text></g><g><title>CFAbsoluteTimeGetCurrent (1 samples, 0.03%)</title><rect x="11.7036%" y="1525" width="0.0335%" height="15" fill="rgb(242,101,16)" fg:x="349" fg:w="1"/><text x="11.9536%" y="1535.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="11.7036%" y="1509" width="0.0335%" height="15" fill="rgb(223,190,21)" fg:x="349" fg:w="1"/><text x="11.9536%" y="1519.50"></text></g><g><title>gettimeofday (1 samples, 0.03%)</title><rect x="11.7036%" y="1493" width="0.0335%" height="15" fill="rgb(215,228,25)" fg:x="349" fg:w="1"/><text x="11.9536%" y="1503.50"></text></g><g><title>__commpage_gettimeofday_internal (1 samples, 0.03%)</title><rect x="11.7036%" y="1477" width="0.0335%" height="15" fill="rgb(225,36,22)" fg:x="349" fg:w="1"/><text x="11.9536%" y="1487.50"></text></g><g><title>_dispatch_runloop_queue_poke (1 samples, 0.03%)</title><rect x="11.7371%" y="1461" width="0.0335%" height="15" fill="rgb(251,106,46)" fg:x="350" fg:w="1"/><text x="11.9871%" y="1471.50"></text></g><g><title>_dispatch_send_wakeup_runloop_thread (1 samples, 0.03%)</title><rect x="11.7371%" y="1445" width="0.0335%" height="15" fill="rgb(208,90,1)" fg:x="350" fg:w="1"/><text x="11.9871%" y="1455.50"></text></g><g><title>mach_msg_destroy (1 samples, 0.03%)</title><rect x="11.7371%" y="1429" width="0.0335%" height="15" fill="rgb(243,10,4)" fg:x="350" fg:w="1"/><text x="11.9871%" y="1439.50"></text></g><g><title>mach_port_deallocate (1 samples, 0.03%)</title><rect x="11.7371%" y="1413" width="0.0335%" height="15" fill="rgb(212,137,27)" fg:x="350" fg:w="1"/><text x="11.9871%" y="1423.50"></text></g><g><title>__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (2 samples, 0.07%)</title><rect x="11.7371%" y="1525" width="0.0671%" height="15" fill="rgb(231,220,49)" fg:x="350" fg:w="2"/><text x="11.9871%" y="1535.50"></text></g><g><title>_dispatch_main_queue_callback_4CF (2 samples, 0.07%)</title><rect x="11.7371%" y="1509" width="0.0671%" height="15" fill="rgb(237,96,20)" fg:x="350" fg:w="2"/><text x="11.9871%" y="1519.50"></text></g><g><title>_dispatch_main_queue_drain (2 samples, 0.07%)</title><rect x="11.7371%" y="1493" width="0.0671%" height="15" fill="rgb(239,229,30)" fg:x="350" fg:w="2"/><text x="11.9871%" y="1503.50"></text></g><g><title>_dispatch_main_queue_drain.cold.5 (2 samples, 0.07%)</title><rect x="11.7371%" y="1477" width="0.0671%" height="15" fill="rgb(219,65,33)" fg:x="350" fg:w="2"/><text x="11.9871%" y="1487.50"></text></g><g><title>_dispatch_source_invoke (1 samples, 0.03%)</title><rect x="11.7706%" y="1461" width="0.0335%" height="15" fill="rgb(243,134,7)" fg:x="351" fg:w="1"/><text x="12.0206%" y="1471.50"></text></g><g><title>_dispatch_dispose (1 samples, 0.03%)</title><rect x="11.7706%" y="1445" width="0.0335%" height="15" fill="rgb(216,177,54)" fg:x="351" fg:w="1"/><text x="12.0206%" y="1455.50"></text></g><g><title>_dispatch_source_dispose (1 samples, 0.03%)</title><rect x="11.7706%" y="1429" width="0.0335%" height="15" fill="rgb(211,160,20)" fg:x="351" fg:w="1"/><text x="12.0206%" y="1439.50"></text></g><g><title>_CFAutoreleasePoolPush (1 samples, 0.03%)</title><rect x="11.8042%" y="1509" width="0.0335%" height="15" fill="rgb(239,85,39)" fg:x="352" fg:w="1"/><text x="12.0542%" y="1519.50"></text></g><g><title>AutoreleasePoolPage::push() (1 samples, 0.03%)</title><rect x="11.8042%" y="1493" width="0.0335%" height="15" fill="rgb(232,125,22)" fg:x="352" fg:w="1"/><text x="12.0542%" y="1503.50"></text></g><g><title>CFRunLoopWakeUp (1 samples, 0.03%)</title><rect x="11.8377%" y="1493" width="0.0335%" height="15" fill="rgb(244,57,34)" fg:x="353" fg:w="1"/><text x="12.0877%" y="1503.50"></text></g><g><title>_pthread_mutex_lock_init_slow (1 samples, 0.03%)</title><rect x="11.8377%" y="1477" width="0.0335%" height="15" fill="rgb(214,203,32)" fg:x="353" fg:w="1"/><text x="12.0877%" y="1487.50"></text></g><g><title>-[NSRemoteView _lastCallImpliedByAdvancingToPhase:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1413" width="0.0335%" height="15" fill="rgb(207,58,43)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1423.50"></text></g><g><title>-[NSRemoteViewControllerAuxiliary viewDidAdvanceToRunPhase:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1397" width="0.0335%" height="15" fill="rgb(215,193,15)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1407.50"></text></g><g><title>__36-[TUINSCursorUIController activate:]_block_invoke.128 (1 samples, 0.03%)</title><rect x="11.8712%" y="1381" width="0.0335%" height="15" fill="rgb(232,15,44)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1391.50"></text></g><g><title>-[TUINSCursorUIController updateCursorLocation] (1 samples, 0.03%)</title><rect x="11.8712%" y="1365" width="0.0335%" height="15" fill="rgb(212,3,48)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1375.50"></text></g><g><title>-[TUINSWindow close] (1 samples, 0.03%)</title><rect x="11.8712%" y="1349" width="0.0335%" height="15" fill="rgb(218,128,7)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1359.50"></text></g><g><title>+[NSLayoutConstraint _addOrRemoveConstraints:activate:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1333" width="0.0335%" height="15" fill="rgb(226,216,39)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1343.50"></text></g><g><title>-[NSISEngine withBehaviors:performModifications:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1317" width="0.0335%" height="15" fill="rgb(243,47,51)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1327.50"></text></g><g><title>__55+[NSLayoutConstraint _addOrRemoveConstraints:activate:]_block_invoke (1 samples, 0.03%)</title><rect x="11.8712%" y="1301" width="0.0335%" height="15" fill="rgb(241,183,40)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1311.50"></text></g><g><title>-[NSView(NSConstraintBasedLayoutInternal) nsli_removeConstraint:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1285" width="0.0335%" height="15" fill="rgb(231,217,32)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1295.50"></text></g><g><title>-[NSView(NSConstraintBasedLayoutInternal) _layoutEngine_willRemoveLayoutConstraint:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1269" width="0.0335%" height="15" fill="rgb(229,61,38)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1279.50"></text></g><g><title>-[NSLayoutConstraint _removeFromEngine:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1253" width="0.0335%" height="15" fill="rgb(225,210,5)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1263.50"></text></g><g><title>-[NSISEngine removeConstraintWithMarker:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1237" width="0.0335%" height="15" fill="rgb(231,79,45)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1247.50"></text></g><g><title>-[NSISEngine outgoingRowHeadForRemovingConstraintWithMarker:outgoingRowHead:] (1 samples, 0.03%)</title><rect x="11.8712%" y="1221" width="0.0335%" height="15" fill="rgb(224,100,7)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1231.50"></text></g><g><title>__77-[NSISEngine outgoingRowHeadForRemovingConstraintWithMarker:outgoingRowHead:]_block_invoke (1 samples, 0.03%)</title><rect x="11.8712%" y="1205" width="0.0335%" height="15" fill="rgb(241,198,18)" fg:x="354" fg:w="1"/><text x="12.1212%" y="1215.50"></text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (3 samples, 0.10%)</title><rect x="11.8377%" y="1509" width="0.1006%" height="15" fill="rgb(252,97,53)" fg:x="353" fg:w="3"/><text x="12.0877%" y="1519.50"></text></g><g><title>deferredBlockOpportunity_block_invoke_2 (2 samples, 0.07%)</title><rect x="11.8712%" y="1493" width="0.0671%" height="15" fill="rgb(220,88,7)" fg:x="354" fg:w="2"/><text x="12.1212%" y="1503.50"></text></g><g><title>__wrapBlockWithVoucher_block_invoke (2 samples, 0.07%)</title><rect x="11.8712%" y="1477" width="0.0671%" height="15" fill="rgb(213,176,14)" fg:x="354" fg:w="2"/><text x="12.1212%" y="1487.50"></text></g><g><title>__deferNSXPCInvocationOntoMainThread_block_invoke (2 samples, 0.07%)</title><rect x="11.8712%" y="1461" width="0.0671%" height="15" fill="rgb(246,73,7)" fg:x="354" fg:w="2"/><text x="12.1212%" y="1471.50"></text></g><g><title>-[NSInvocation invoke] (2 samples, 0.07%)</title><rect x="11.8712%" y="1445" width="0.0671%" height="15" fill="rgb(245,64,36)" fg:x="354" fg:w="2"/><text x="12.1212%" y="1455.50"></text></g><g><title>__invoking___ (2 samples, 0.07%)</title><rect x="11.8712%" y="1429" width="0.0671%" height="15" fill="rgb(245,80,10)" fg:x="354" fg:w="2"/><text x="12.1212%" y="1439.50"></text></g><g><title>__38-[NSRemoteView _advanceToConfigPhase:]_block_invoke_2.1908 (1 samples, 0.03%)</title><rect x="11.9048%" y="1413" width="0.0335%" height="15" fill="rgb(232,107,50)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1423.50"></text></g><g><title>__42-[NSRemoteView advanceToRunPhaseIfNeeded:]_block_invoke (1 samples, 0.03%)</title><rect x="11.9048%" y="1397" width="0.0335%" height="15" fill="rgb(253,3,0)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1407.50"></text></g><g><title>-[NSRemoteView _advanceToRunPhase:] (1 samples, 0.03%)</title><rect x="11.9048%" y="1381" width="0.0335%" height="15" fill="rgb(212,99,53)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1391.50"></text></g><g><title>_CF_forwarding_prep_0 (1 samples, 0.03%)</title><rect x="11.9048%" y="1365" width="0.0335%" height="15" fill="rgb(249,111,54)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1375.50"></text></g><g><title>___forwarding___ (1 samples, 0.03%)</title><rect x="11.9048%" y="1349" width="0.0335%" height="15" fill="rgb(249,55,30)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1359.50"></text></g><g><title>-[NSVB_ViewServiceImplicitAnimationEncodingProxy forwardInvocation:] (1 samples, 0.03%)</title><rect x="11.9048%" y="1333" width="0.0335%" height="15" fill="rgb(237,47,42)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1343.50"></text></g><g><title>+[ViewBridgeUtilities whileHoldingLock:perform:] (1 samples, 0.03%)</title><rect x="11.9048%" y="1317" width="0.0335%" height="15" fill="rgb(211,20,18)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1327.50"></text></g><g><title>__68-[NSVB_ViewServiceImplicitAnimationEncodingProxy forwardInvocation:]_block_invoke (1 samples, 0.03%)</title><rect x="11.9048%" y="1301" width="0.0335%" height="15" fill="rgb(231,203,46)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1311.50"></text></g><g><title>_NSXPCDistantObjectSimpleMessageSend1 (1 samples, 0.03%)</title><rect x="11.9048%" y="1285" width="0.0335%" height="15" fill="rgb(237,142,3)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1295.50"></text></g><g><title>-[NSXPCConnection _sendSelector:withProxy:arg1:] (1 samples, 0.03%)</title><rect x="11.9048%" y="1269" width="0.0335%" height="15" fill="rgb(241,107,1)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1279.50"></text></g><g><title>-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.03%)</title><rect x="11.9048%" y="1253" width="0.0335%" height="15" fill="rgb(229,83,13)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1263.50"></text></g><g><title>-[NSAutoreleasePool init] (1 samples, 0.03%)</title><rect x="11.9048%" y="1237" width="0.0335%" height="15" fill="rgb(241,91,40)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1247.50"></text></g><g><title>_CFAutoreleasePoolPush (1 samples, 0.03%)</title><rect x="11.9048%" y="1221" width="0.0335%" height="15" fill="rgb(225,3,45)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1231.50"></text></g><g><title>AutoreleasePoolPage::push() (1 samples, 0.03%)</title><rect x="11.9048%" y="1205" width="0.0335%" height="15" fill="rgb(244,223,14)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1215.50"></text></g><g><title>objc_autorelease (1 samples, 0.03%)</title><rect x="11.9048%" y="1189" width="0.0335%" height="15" fill="rgb(224,124,37)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1199.50"></text></g><g><title>objc_object::rootAutorelease2() (1 samples, 0.03%)</title><rect x="11.9048%" y="1173" width="0.0335%" height="15" fill="rgb(251,171,30)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1183.50"></text></g><g><title>AutoreleasePoolPage::add(objc_object*) (1 samples, 0.03%)</title><rect x="11.9048%" y="1157" width="0.0335%" height="15" fill="rgb(236,46,54)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1167.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="11.9048%" y="1141" width="0.0335%" height="15" fill="rgb(245,213,5)" fg:x="355" fg:w="1"/><text x="12.1548%" y="1151.50"></text></g><g><title>__CFRunLoopDoBlocks (5 samples, 0.17%)</title><rect x="11.8042%" y="1525" width="0.1677%" height="15" fill="rgb(230,144,27)" fg:x="352" fg:w="5"/><text x="12.0542%" y="1535.50"></text></g><g><title>__CFStringEqual (1 samples, 0.03%)</title><rect x="11.9383%" y="1509" width="0.0335%" height="15" fill="rgb(220,86,6)" fg:x="356" fg:w="1"/><text x="12.1883%" y="1519.50"></text></g><g><title>CFRetain (1 samples, 0.03%)</title><rect x="12.0389%" y="1509" width="0.0335%" height="15" fill="rgb(240,20,13)" fg:x="359" fg:w="1"/><text x="12.2889%" y="1519.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="12.0389%" y="1493" width="0.0335%" height="15" fill="rgb(217,89,34)" fg:x="359" fg:w="1"/><text x="12.2889%" y="1503.50"></text></g><g><title>__56+[HIRunLoopUtilities addRunLoopModesForDeferredActions:]_block_invoke_2 (2 samples, 0.07%)</title><rect x="12.0724%" y="1493" width="0.0671%" height="15" fill="rgb(229,13,5)" fg:x="360" fg:w="2"/><text x="12.3224%" y="1503.50"></text></g><g><title>+[NSCocoaMenuImpl _isAnyMenuTracking] (1 samples, 0.03%)</title><rect x="12.1395%" y="1429" width="0.0335%" height="15" fill="rgb(244,67,35)" fg:x="362" fg:w="1"/><text x="12.3895%" y="1439.50"></text></g><g><title>+[TUINSCursorUIController sharedInstance] (1 samples, 0.03%)</title><rect x="12.1730%" y="1413" width="0.0335%" height="15" fill="rgb(221,40,2)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1423.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="12.1730%" y="1397" width="0.0335%" height="15" fill="rgb(237,157,21)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1407.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="12.1730%" y="1381" width="0.0335%" height="15" fill="rgb(222,94,11)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1391.50"></text></g><g><title>__41+[TUINSCursorUIController sharedInstance]_block_invoke (1 samples, 0.03%)</title><rect x="12.1730%" y="1365" width="0.0335%" height="15" fill="rgb(249,113,6)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1375.50"></text></g><g><title>-[TUINSCursorUIController init] (1 samples, 0.03%)</title><rect x="12.1730%" y="1349" width="0.0335%" height="15" fill="rgb(238,137,36)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1359.50"></text></g><g><title>-[TUINSWindow init] (1 samples, 0.03%)</title><rect x="12.1730%" y="1333" width="0.0335%" height="15" fill="rgb(210,102,26)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1343.50"></text></g><g><title>-[NSWindow setContentViewController:] (1 samples, 0.03%)</title><rect x="12.1730%" y="1317" width="0.0335%" height="15" fill="rgb(218,30,30)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1327.50"></text></g><g><title>NSPerformVisuallyAtomicChange (1 samples, 0.03%)</title><rect x="12.1730%" y="1301" width="0.0335%" height="15" fill="rgb(214,67,26)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1311.50"></text></g><g><title>-[NSWindow _contentViewControllerChanged] (1 samples, 0.03%)</title><rect x="12.1730%" y="1285" width="0.0335%" height="15" fill="rgb(251,9,53)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1295.50"></text></g><g><title>-[NSWindow _setFrameCommon:display:fromServer:] (1 samples, 0.03%)</title><rect x="12.1730%" y="1269" width="0.0335%" height="15" fill="rgb(228,204,25)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1279.50"></text></g><g><title>-[NSWindow _updateSettingsSendingScreenChangeNotificationToScreen:] (1 samples, 0.03%)</title><rect x="12.1730%" y="1253" width="0.0335%" height="15" fill="rgb(207,153,8)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1263.50"></text></g><g><title>NSPerformVisuallyAtomicChange (1 samples, 0.03%)</title><rect x="12.1730%" y="1237" width="0.0335%" height="15" fill="rgb(242,9,16)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1247.50"></text></g><g><title>__67-[NSWindow _updateSettingsSendingScreenChangeNotificationToScreen:]_block_invoke (1 samples, 0.03%)</title><rect x="12.1730%" y="1221" width="0.0335%" height="15" fill="rgb(217,211,10)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1231.50"></text></g><g><title>-[NSWindow _cornerMaskChanged] (1 samples, 0.03%)</title><rect x="12.1730%" y="1205" width="0.0335%" height="15" fill="rgb(219,228,52)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1215.50"></text></g><g><title>-[NSCGSWindow setCornerMask:] (1 samples, 0.03%)</title><rect x="12.1730%" y="1189" width="0.0335%" height="15" fill="rgb(231,92,29)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1199.50"></text></g><g><title>-[NSCGSWindow _updateLayer] (1 samples, 0.03%)</title><rect x="12.1730%" y="1173" width="0.0335%" height="15" fill="rgb(232,8,23)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1183.50"></text></g><g><title>-[NSCGSWindowCornerMask caImageForScale:size:center:] (1 samples, 0.03%)</title><rect x="12.1730%" y="1157" width="0.0335%" height="15" fill="rgb(216,211,34)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1167.50"></text></g><g><title>-[NSCGSWindowCornerRadiusMask imageForScale:size:center:] (1 samples, 0.03%)</title><rect x="12.1730%" y="1141" width="0.0335%" height="15" fill="rgb(236,151,0)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1151.50"></text></g><g><title>_CFRelease (1 samples, 0.03%)</title><rect x="12.1730%" y="1125" width="0.0335%" height="15" fill="rgb(209,168,3)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1135.50"></text></g><g><title>context_reclaim (1 samples, 0.03%)</title><rect x="12.1730%" y="1109" width="0.0335%" height="15" fill="rgb(208,129,28)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1119.50"></text></g><g><title>_CFRelease (1 samples, 0.03%)</title><rect x="12.1730%" y="1093" width="0.0335%" height="15" fill="rgb(229,78,22)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1103.50"></text></g><g><title>CGContextDelegateFinalize (1 samples, 0.03%)</title><rect x="12.1730%" y="1077" width="0.0335%" height="15" fill="rgb(228,187,13)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1087.50"></text></g><g><title>ripc_Finalize (1 samples, 0.03%)</title><rect x="12.1730%" y="1061" width="0.0335%" height="15" fill="rgb(240,119,24)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1071.50"></text></g><g><title>x_list_remove (1 samples, 0.03%)</title><rect x="12.1730%" y="1045" width="0.0335%" height="15" fill="rgb(209,194,42)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1055.50"></text></g><g><title>_nanov2_free (1 samples, 0.03%)</title><rect x="12.1730%" y="1029" width="0.0335%" height="15" fill="rgb(247,200,46)" fg:x="363" fg:w="1"/><text x="12.4230%" y="1039.50"></text></g><g><title>-[NSTextInputContext activate] (2 samples, 0.07%)</title><rect x="12.1730%" y="1429" width="0.0671%" height="15" fill="rgb(218,76,16)" fg:x="363" fg:w="2"/><text x="12.4230%" y="1439.50"></text></g><g><title>MyActivateTSMDocument (1 samples, 0.03%)</title><rect x="12.2066%" y="1413" width="0.0335%" height="15" fill="rgb(225,21,48)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1423.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="12.2066%" y="1397" width="0.0335%" height="15" fill="rgb(239,223,50)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1407.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="12.2066%" y="1381" width="0.0335%" height="15" fill="rgb(244,45,21)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1391.50"></text></g><g><title>__InitTSMUISetup_block_invoke (1 samples, 0.03%)</title><rect x="12.2066%" y="1365" width="0.0335%" height="15" fill="rgb(232,33,43)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1375.50"></text></g><g><title>SLSIsSymbolicHotKeyEnabled (1 samples, 0.03%)</title><rect x="12.2066%" y="1349" width="0.0335%" height="15" fill="rgb(209,8,3)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1359.50"></text></g><g><title>mach_msg (1 samples, 0.03%)</title><rect x="12.2066%" y="1333" width="0.0335%" height="15" fill="rgb(214,25,53)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1343.50"></text></g><g><title>mach_msg_overwrite (1 samples, 0.03%)</title><rect x="12.2066%" y="1317" width="0.0335%" height="15" fill="rgb(254,186,54)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1327.50"></text></g><g><title>mach_msg2_internal (1 samples, 0.03%)</title><rect x="12.2066%" y="1301" width="0.0335%" height="15" fill="rgb(208,174,49)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1311.50"></text></g><g><title>mach_msg2_trap (1 samples, 0.03%)</title><rect x="12.2066%" y="1285" width="0.0335%" height="15" fill="rgb(233,191,51)" fg:x="364" fg:w="1"/><text x="12.4566%" y="1295.50"></text></g><g><title>+[NSTextInputContext currentInputContext_withFirstResponderSync:] (4 samples, 0.13%)</title><rect x="12.1395%" y="1445" width="0.1341%" height="15" fill="rgb(222,134,10)" fg:x="362" fg:w="4"/><text x="12.3895%" y="1455.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="12.2401%" y="1429" width="0.0335%" height="15" fill="rgb(230,226,20)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1439.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="12.2401%" y="1413" width="0.0335%" height="15" fill="rgb(251,111,25)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1423.50"></text></g><g><title>initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin&lt;objc_lock_base_t&gt;&gt;&amp;, bool) (1 samples, 0.03%)</title><rect x="12.2401%" y="1397" width="0.0335%" height="15" fill="rgb(224,40,46)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1407.50"></text></g><g><title>initializeNonMetaClass (1 samples, 0.03%)</title><rect x="12.2401%" y="1381" width="0.0335%" height="15" fill="rgb(236,108,47)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1391.50"></text></g><g><title>CALLING_SOME_+initialize_METHOD (1 samples, 0.03%)</title><rect x="12.2401%" y="1365" width="0.0335%" height="15" fill="rgb(234,93,0)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1375.50"></text></g><g><title>+[NSKeyBindingManager sharedKeyBindingManager] (1 samples, 0.03%)</title><rect x="12.2401%" y="1349" width="0.0335%" height="15" fill="rgb(224,213,32)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1359.50"></text></g><g><title>+[NSDictionary(NSDictionary) dictionaryWithContentsOfFile:] (1 samples, 0.03%)</title><rect x="12.2401%" y="1333" width="0.0335%" height="15" fill="rgb(251,11,48)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1343.50"></text></g><g><title>+[NSDictionary(NSDictionary) newWithContentsOf:immutable:] (1 samples, 0.03%)</title><rect x="12.2401%" y="1317" width="0.0335%" height="15" fill="rgb(236,173,5)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1327.50"></text></g><g><title>+[NSPropertyListSerialization propertyListWithData:options:format:error:] (1 samples, 0.03%)</title><rect x="12.2401%" y="1301" width="0.0335%" height="15" fill="rgb(230,95,12)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1311.50"></text></g><g><title>CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="12.2401%" y="1285" width="0.0335%" height="15" fill="rgb(232,209,1)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1295.50"></text></g><g><title>_CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="12.2401%" y="1269" width="0.0335%" height="15" fill="rgb(232,6,1)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1279.50"></text></g><g><title>__CFTryParseBinaryPlist (1 samples, 0.03%)</title><rect x="12.2401%" y="1253" width="0.0335%" height="15" fill="rgb(210,224,50)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1263.50"></text></g><g><title>__CFBasicHashRehash (1 samples, 0.03%)</title><rect x="12.2401%" y="1237" width="0.0335%" height="15" fill="rgb(228,127,35)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1247.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="12.2401%" y="1221" width="0.0335%" height="15" fill="rgb(245,102,45)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1231.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.03%)</title><rect x="12.2401%" y="1205" width="0.0335%" height="15" fill="rgb(214,1,49)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1215.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="12.2401%" y="1189" width="0.0335%" height="15" fill="rgb(226,163,40)" fg:x="365" fg:w="1"/><text x="12.4901%" y="1199.50"></text></g><g><title>__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (5 samples, 0.17%)</title><rect x="12.1395%" y="1477" width="0.1677%" height="15" fill="rgb(239,212,28)" fg:x="362" fg:w="5"/><text x="12.3895%" y="1487.50"></text></g><g><title>-[NSApplication updateWindows] (5 samples, 0.17%)</title><rect x="12.1395%" y="1461" width="0.1677%" height="15" fill="rgb(220,20,13)" fg:x="362" fg:w="5"/><text x="12.3895%" y="1471.50"></text></g><g><title>-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (1 samples, 0.03%)</title><rect x="12.2736%" y="1445" width="0.0335%" height="15" fill="rgb(210,164,35)" fg:x="366" fg:w="1"/><text x="12.5236%" y="1455.50"></text></g><g><title>-[NSPointerArray(NSArrayConveniences) allObjects] (1 samples, 0.03%)</title><rect x="12.2736%" y="1429" width="0.0335%" height="15" fill="rgb(248,109,41)" fg:x="366" fg:w="1"/><text x="12.5236%" y="1439.50"></text></g><g><title>-[NSConcretePointerArray countByEnumeratingWithState:objects:count:] (1 samples, 0.03%)</title><rect x="12.2736%" y="1413" width="0.0335%" height="15" fill="rgb(238,23,50)" fg:x="366" fg:w="1"/><text x="12.5236%" y="1423.50"></text></g><g><title>CA::Layer::commit_if_needed(CA::Transaction*, void (CA::Layer*, unsigned int, unsigned int) block_pointer) (1 samples, 0.03%)</title><rect x="12.3072%" y="1429" width="0.0335%" height="15" fill="rgb(211,48,49)" fg:x="367" fg:w="1"/><text x="12.5572%" y="1439.50"></text></g><g><title>invocation function for block in CA::Context::commit_transaction(CA::Transaction*, double, double*) (1 samples, 0.03%)</title><rect x="12.3072%" y="1413" width="0.0335%" height="15" fill="rgb(223,36,21)" fg:x="367" fg:w="1"/><text x="12.5572%" y="1423.50"></text></g><g><title>-[CALayer(CALayerPrivate) _copyRenderLayer:layerFlags:commitFlags:] (1 samples, 0.03%)</title><rect x="12.3072%" y="1397" width="0.0335%" height="15" fill="rgb(207,123,46)" fg:x="367" fg:w="1"/><text x="12.5572%" y="1407.50"></text></g><g><title>+[CUIThemeFacet assetExistsForRenditionKey:fromTheme:] (1 samples, 0.03%)</title><rect x="12.3407%" y="1205" width="0.0335%" height="15" fill="rgb(240,218,32)" fg:x="368" fg:w="1"/><text x="12.5907%" y="1215.50"></text></g><g><title>-[CUIStructuredThemeStore canGetRenditionWithKey:] (1 samples, 0.03%)</title><rect x="12.3407%" y="1189" width="0.0335%" height="15" fill="rgb(252,5,43)" fg:x="368" fg:w="1"/><text x="12.5907%" y="1199.50"></text></g><g><title>-[CUIStructuredThemeStore assetExistsForKey:] (1 samples, 0.03%)</title><rect x="12.3407%" y="1173" width="0.0335%" height="15" fill="rgb(252,84,19)" fg:x="368" fg:w="1"/><text x="12.5907%" y="1183.50"></text></g><g><title>-[CUICommonAssetStorage assetExistsForKeyData:length:] (1 samples, 0.03%)</title><rect x="12.3407%" y="1157" width="0.0335%" height="15" fill="rgb(243,152,39)" fg:x="368" fg:w="1"/><text x="12.5907%" y="1167.50"></text></g><g><title>BOMTreeValueExists (1 samples, 0.03%)</title><rect x="12.3407%" y="1141" width="0.0335%" height="15" fill="rgb(234,160,15)" fg:x="368" fg:w="1"/><text x="12.5907%" y="1151.50"></text></g><g><title>_findIndexForKey (1 samples, 0.03%)</title><rect x="12.3407%" y="1125" width="0.0335%" height="15" fill="rgb(237,34,20)" fg:x="368" fg:w="1"/><text x="12.5907%" y="1135.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="12.3407%" y="1109" width="0.0335%" height="15" fill="rgb(229,97,13)" fg:x="368" fg:w="1"/><text x="12.5907%" y="1119.50"></text></g><g><title>-[NSVisualEffectView updateLayer] (2 samples, 0.07%)</title><rect x="12.3407%" y="1333" width="0.0671%" height="15" fill="rgb(234,71,50)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1343.50"></text></g><g><title>-[NSVisualEffectView _updateMaterialLayer] (2 samples, 0.07%)</title><rect x="12.3407%" y="1317" width="0.0671%" height="15" fill="rgb(253,155,4)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1327.50"></text></g><g><title>makeMaterialLayerWithCoreUIOptions (2 samples, 0.07%)</title><rect x="12.3407%" y="1301" width="0.0671%" height="15" fill="rgb(222,185,37)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1311.50"></text></g><g><title>-[NSAppearance _createOrUpdateLayer:options:] (2 samples, 0.07%)</title><rect x="12.3407%" y="1285" width="0.0671%" height="15" fill="rgb(251,177,13)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1295.50"></text></g><g><title>-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (2 samples, 0.07%)</title><rect x="12.3407%" y="1269" width="0.0671%" height="15" fill="rgb(250,179,40)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1279.50"></text></g><g><title>CUIRenderer::CreateOrUpdateLayer(__CFDictionary const*, CALayer**) (2 samples, 0.07%)</title><rect x="12.3407%" y="1253" width="0.0671%" height="15" fill="rgb(242,44,2)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1263.50"></text></g><g><title>CUICoreThemeRenderer::CreateOrUpdateLayer(CUIDescriptor const*, CALayer**) (2 samples, 0.07%)</title><rect x="12.3407%" y="1237" width="0.0671%" height="15" fill="rgb(216,177,13)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1247.50"></text></g><g><title>CUICoreThemeRenderer::CreateOrUpdateVisualEffectLayer(CUIDescriptor const*, CALayer**) (2 samples, 0.07%)</title><rect x="12.3407%" y="1221" width="0.0671%" height="15" fill="rgb(216,106,43)" fg:x="368" fg:w="2"/><text x="12.5907%" y="1231.50"></text></g><g><title>-[CUIThemeFacet updateLayer:effects:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1205" width="0.0335%" height="15" fill="rgb(216,183,2)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1215.50"></text></g><g><title>-[CUIThemeFacet updateLayer:effects:].cold.1 (1 samples, 0.03%)</title><rect x="12.3742%" y="1189" width="0.0335%" height="15" fill="rgb(249,75,3)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1199.50"></text></g><g><title>-[CUIThemeFacet _makeLayerFromCAPackageData] (1 samples, 0.03%)</title><rect x="12.3742%" y="1173" width="0.0335%" height="15" fill="rgb(219,67,39)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1183.50"></text></g><g><title>+[CAPackage packageWithData:type:options:error:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1157" width="0.0335%" height="15" fill="rgb(253,228,2)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1167.50"></text></g><g><title>-[CAPackage _initWithData:type:options:error:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1141" width="0.0335%" height="15" fill="rgb(235,138,27)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1151.50"></text></g><g><title>-[CAPackage _readFromArchiveData:options:error:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1125" width="0.0335%" height="15" fill="rgb(236,97,51)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1135.50"></text></g><g><title>-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1109" width="0.0335%" height="15" fill="rgb(240,80,30)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1119.50"></text></g><g><title>-[NSKeyedUnarchiver decodeObjectForKey:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1093" width="0.0335%" height="15" fill="rgb(230,178,19)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1103.50"></text></g><g><title>_decodeObject (1 samples, 0.03%)</title><rect x="12.3742%" y="1077" width="0.0335%" height="15" fill="rgb(210,190,27)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1087.50"></text></g><g><title>_decodeObjectBinary (1 samples, 0.03%)</title><rect x="12.3742%" y="1061" width="0.0335%" height="15" fill="rgb(222,107,31)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1071.50"></text></g><g><title>-[NSDictionary(NSDictionary) initWithCoder:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1045" width="0.0335%" height="15" fill="rgb(216,127,34)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1055.50"></text></g><g><title>-[NSKeyedUnarchiver _decodeArrayOfObjectsForKey:] (1 samples, 0.03%)</title><rect x="12.3742%" y="1029" width="0.0335%" height="15" fill="rgb(234,116,52)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1039.50"></text></g><g><title>_decodeObjectBinary (1 samples, 0.03%)</title><rect x="12.3742%" y="1013" width="0.0335%" height="15" fill="rgb(222,124,15)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1023.50"></text></g><g><title>-[CALayer initWithCoder:] (1 samples, 0.03%)</title><rect x="12.3742%" y="997" width="0.0335%" height="15" fill="rgb(231,179,28)" fg:x="369" fg:w="1"/><text x="12.6242%" y="1007.50"></text></g><g><title>CAObject_initWithCoder (1 samples, 0.03%)</title><rect x="12.3742%" y="981" width="0.0335%" height="15" fill="rgb(226,93,45)" fg:x="369" fg:w="1"/><text x="12.6242%" y="991.50"></text></g><g><title>-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (1 samples, 0.03%)</title><rect x="12.3742%" y="965" width="0.0335%" height="15" fill="rgb(215,8,51)" fg:x="369" fg:w="1"/><text x="12.6242%" y="975.50"></text></g><g><title>-[NSKeyedUnarchiver decodeObjectForKey:] (1 samples, 0.03%)</title><rect x="12.3742%" y="949" width="0.0335%" height="15" fill="rgb(223,106,5)" fg:x="369" fg:w="1"/><text x="12.6242%" y="959.50"></text></g><g><title>_decodeObject (1 samples, 0.03%)</title><rect x="12.3742%" y="933" width="0.0335%" height="15" fill="rgb(250,191,5)" fg:x="369" fg:w="1"/><text x="12.6242%" y="943.50"></text></g><g><title>_decodeObjectBinary (1 samples, 0.03%)</title><rect x="12.3742%" y="917" width="0.0335%" height="15" fill="rgb(242,132,44)" fg:x="369" fg:w="1"/><text x="12.6242%" y="927.50"></text></g><g><title>-[NSArray(NSArray) initWithCoder:] (1 samples, 0.03%)</title><rect x="12.3742%" y="901" width="0.0335%" height="15" fill="rgb(251,152,29)" fg:x="369" fg:w="1"/><text x="12.6242%" y="911.50"></text></g><g><title>-[NSKeyedUnarchiver _decodeArrayOfObjectsForKey:] (1 samples, 0.03%)</title><rect x="12.3742%" y="885" width="0.0335%" height="15" fill="rgb(218,179,5)" fg:x="369" fg:w="1"/><text x="12.6242%" y="895.50"></text></g><g><title>_decodeObjectBinary (1 samples, 0.03%)</title><rect x="12.3742%" y="869" width="0.0335%" height="15" fill="rgb(227,67,19)" fg:x="369" fg:w="1"/><text x="12.6242%" y="879.50"></text></g><g><title>__CFBinaryPlistCreateObject (1 samples, 0.03%)</title><rect x="12.3742%" y="853" width="0.0335%" height="15" fill="rgb(233,119,31)" fg:x="369" fg:w="1"/><text x="12.6242%" y="863.50"></text></g><g><title>__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="12.3742%" y="837" width="0.0335%" height="15" fill="rgb(241,120,22)" fg:x="369" fg:w="1"/><text x="12.6242%" y="847.50"></text></g><g><title>____CFBinaryPlistCreateObjectFiltered_block_invoke (1 samples, 0.03%)</title><rect x="12.3742%" y="821" width="0.0335%" height="15" fill="rgb(224,102,30)" fg:x="369" fg:w="1"/><text x="12.6242%" y="831.50"></text></g><g><title>__CFStringCreateImmutableFunnel3 (1 samples, 0.03%)</title><rect x="12.3742%" y="805" width="0.0335%" height="15" fill="rgb(210,164,37)" fg:x="369" fg:w="1"/><text x="12.6242%" y="815.50"></text></g><g><title>__CFSearchStringROM (1 samples, 0.03%)</title><rect x="12.3742%" y="789" width="0.0335%" height="15" fill="rgb(226,191,16)" fg:x="369" fg:w="1"/><text x="12.6242%" y="799.50"></text></g><g><title>-[NSViewBackingLayer display] (3 samples, 0.10%)</title><rect x="12.3407%" y="1413" width="0.1006%" height="15" fill="rgb(214,40,45)" fg:x="368" fg:w="3"/><text x="12.5907%" y="1423.50"></text></g><g><title>-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (3 samples, 0.10%)</title><rect x="12.3407%" y="1397" width="0.1006%" height="15" fill="rgb(244,29,26)" fg:x="368" fg:w="3"/><text x="12.5907%" y="1407.50"></text></g><g><title>__29-[NSViewBackingLayer display]_block_invoke (3 samples, 0.10%)</title><rect x="12.3407%" y="1381" width="0.1006%" height="15" fill="rgb(216,16,5)" fg:x="368" fg:w="3"/><text x="12.5907%" y="1391.50"></text></g><g><title>+[NSAppearance _performWithCurrentAppearance:usingBlock:] (3 samples, 0.10%)</title><rect x="12.3407%" y="1365" width="0.1006%" height="15" fill="rgb(249,76,35)" fg:x="368" fg:w="3"/><text x="12.5907%" y="1375.50"></text></g><g><title>_NSViewUpdateLayer (3 samples, 0.10%)</title><rect x="12.3407%" y="1349" width="0.1006%" height="15" fill="rgb(207,11,44)" fg:x="368" fg:w="3"/><text x="12.5907%" y="1359.50"></text></g><g><title>-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (1 samples, 0.03%)</title><rect x="12.4078%" y="1333" width="0.0335%" height="15" fill="rgb(228,190,49)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1343.50"></text></g><g><title>-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (1 samples, 0.03%)</title><rect x="12.4078%" y="1317" width="0.0335%" height="15" fill="rgb(214,173,12)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1327.50"></text></g><g><title>__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (1 samples, 0.03%)</title><rect x="12.4078%" y="1301" width="0.0335%" height="15" fill="rgb(218,26,35)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1311.50"></text></g><g><title>-[NSAppearance _drawInRect:context:options:] (1 samples, 0.03%)</title><rect x="12.4078%" y="1285" width="0.0335%" height="15" fill="rgb(220,200,19)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1295.50"></text></g><g><title>-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (1 samples, 0.03%)</title><rect x="12.4078%" y="1269" width="0.0335%" height="15" fill="rgb(239,95,49)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1279.50"></text></g><g><title>CUIDraw (1 samples, 0.03%)</title><rect x="12.4078%" y="1253" width="0.0335%" height="15" fill="rgb(235,85,53)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1263.50"></text></g><g><title>CUIRenderer::Draw(CGRect, CGContext*, __CFDictionary const*, __CFDictionary const**) (1 samples, 0.03%)</title><rect x="12.4078%" y="1237" width="0.0335%" height="15" fill="rgb(233,133,31)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1247.50"></text></g><g><title>CUICoreThemeRenderer::DrawTitlebarButton(CUIDescriptor const*) (1 samples, 0.03%)</title><rect x="12.4078%" y="1221" width="0.0335%" height="15" fill="rgb(218,25,20)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1231.50"></text></g><g><title>-[CUIThemeFacet drawInFrame:isFocused:focusRingColor:context:effects:] (1 samples, 0.03%)</title><rect x="12.4078%" y="1205" width="0.0335%" height="15" fill="rgb(252,210,38)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1215.50"></text></g><g><title>-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:focusRingColor:isFlipped:effects:] (1 samples, 0.03%)</title><rect x="12.4078%" y="1189" width="0.0335%" height="15" fill="rgb(242,134,21)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1199.50"></text></g><g><title>DrawOnePartImageWithOperation (1 samples, 0.03%)</title><rect x="12.4078%" y="1173" width="0.0335%" height="15" fill="rgb(213,28,48)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1183.50"></text></g><g><title>CGContextDrawImage (1 samples, 0.03%)</title><rect x="12.4078%" y="1157" width="0.0335%" height="15" fill="rgb(250,196,2)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1167.50"></text></g><g><title>CGContextDrawImageWithOptions (1 samples, 0.03%)</title><rect x="12.4078%" y="1141" width="0.0335%" height="15" fill="rgb(227,5,17)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1151.50"></text></g><g><title>ripc_DrawImage (1 samples, 0.03%)</title><rect x="12.4078%" y="1125" width="0.0335%" height="15" fill="rgb(221,226,24)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1135.50"></text></g><g><title>ripc_AcquireRIPImageData (1 samples, 0.03%)</title><rect x="12.4078%" y="1109" width="0.0335%" height="15" fill="rgb(211,5,48)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1119.50"></text></g><g><title>CGSImageDataLock (1 samples, 0.03%)</title><rect x="12.4078%" y="1093" width="0.0335%" height="15" fill="rgb(219,150,6)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1103.50"></text></g><g><title>img_data_lock (1 samples, 0.03%)</title><rect x="12.4078%" y="1077" width="0.0335%" height="15" fill="rgb(251,46,16)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1087.50"></text></g><g><title>img_raw_read (1 samples, 0.03%)</title><rect x="12.4078%" y="1061" width="0.0335%" height="15" fill="rgb(220,204,40)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1071.50"></text></g><g><title>get_chunks_direct (1 samples, 0.03%)</title><rect x="12.4078%" y="1045" width="0.0335%" height="15" fill="rgb(211,85,2)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1055.50"></text></g><g><title>CGDataProviderDirectGetBytesAtPositionInternal (1 samples, 0.03%)</title><rect x="12.4078%" y="1029" width="0.0335%" height="15" fill="rgb(229,17,7)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1039.50"></text></g><g><title>provider_for_destination_get_bytes_at_position_inner (1 samples, 0.03%)</title><rect x="12.4078%" y="1013" width="0.0335%" height="15" fill="rgb(239,72,28)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1023.50"></text></g><g><title>CGColorTransformConvertUsingCMSConverter (1 samples, 0.03%)</title><rect x="12.4078%" y="997" width="0.0335%" height="15" fill="rgb(230,47,54)" fg:x="370" fg:w="1"/><text x="12.6578%" y="1007.50"></text></g><g><title>convert_icc (1 samples, 0.03%)</title><rect x="12.4078%" y="981" width="0.0335%" height="15" fill="rgb(214,50,8)" fg:x="370" fg:w="1"/><text x="12.6578%" y="991.50"></text></g><g><title>convert_using_vImageConverter (1 samples, 0.03%)</title><rect x="12.4078%" y="965" width="0.0335%" height="15" fill="rgb(216,198,43)" fg:x="370" fg:w="1"/><text x="12.6578%" y="975.50"></text></g><g><title>vImageConverterConvert (1 samples, 0.03%)</title><rect x="12.4078%" y="949" width="0.0335%" height="15" fill="rgb(234,20,35)" fg:x="370" fg:w="1"/><text x="12.6578%" y="959.50"></text></g><g><title>vImageConverter_convert_internal (1 samples, 0.03%)</title><rect x="12.4078%" y="933" width="0.0335%" height="15" fill="rgb(254,45,19)" fg:x="370" fg:w="1"/><text x="12.6578%" y="943.50"></text></g><g><title>vImageConvert_AnyToAny (1 samples, 0.03%)</title><rect x="12.4078%" y="917" width="0.0335%" height="15" fill="rgb(219,14,44)" fg:x="370" fg:w="1"/><text x="12.6578%" y="927.50"></text></g><g><title>AnyToAnyBlockInternal (1 samples, 0.03%)</title><rect x="12.4078%" y="901" width="0.0335%" height="15" fill="rgb(217,220,26)" fg:x="370" fg:w="1"/><text x="12.6578%" y="911.50"></text></g><g><title>LookupTable_Planar8toPlanar16 (1 samples, 0.03%)</title><rect x="12.4078%" y="885" width="0.0335%" height="15" fill="rgb(213,158,28)" fg:x="370" fg:w="1"/><text x="12.6578%" y="895.50"></text></g><g><title>vImageConvert_8to16Q12 (1 samples, 0.03%)</title><rect x="12.4078%" y="869" width="0.0335%" height="15" fill="rgb(252,51,52)" fg:x="370" fg:w="1"/><text x="12.6578%" y="879.50"></text></g><g><title>CA::Context::commit_transaction(CA::Transaction*, double, double*) (5 samples, 0.17%)</title><rect x="12.3072%" y="1445" width="0.1677%" height="15" fill="rgb(246,89,16)" fg:x="367" fg:w="5"/><text x="12.5572%" y="1455.50"></text></g><g><title>CA::Layer::display_if_needed(CA::Transaction*) (4 samples, 0.13%)</title><rect x="12.3407%" y="1429" width="0.1341%" height="15" fill="rgb(216,158,49)" fg:x="368" fg:w="4"/><text x="12.5907%" y="1439.50"></text></g><g><title>0x18e3741b4 (1 samples, 0.03%)</title><rect x="12.4413%" y="1413" width="0.0335%" height="15" fill="rgb(236,107,19)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1423.50"></text></g><g><title>0x18e23c718 (1 samples, 0.03%)</title><rect x="12.4413%" y="1397" width="0.0335%" height="15" fill="rgb(228,185,30)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1407.50"></text></g><g><title>0x18e374938 (1 samples, 0.03%)</title><rect x="12.4413%" y="1381" width="0.0335%" height="15" fill="rgb(246,134,8)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1391.50"></text></g><g><title>0x18e373c0c (1 samples, 0.03%)</title><rect x="12.4413%" y="1365" width="0.0335%" height="15" fill="rgb(214,143,50)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1375.50"></text></g><g><title>-[CALayer _display] (1 samples, 0.03%)</title><rect x="12.4413%" y="1349" width="0.0335%" height="15" fill="rgb(228,75,8)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1359.50"></text></g><g><title>invocation function for block in CA::Layer::display_() (1 samples, 0.03%)</title><rect x="12.4413%" y="1333" width="0.0335%" height="15" fill="rgb(207,175,4)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1343.50"></text></g><g><title>CABackingStoreUpdate_ (1 samples, 0.03%)</title><rect x="12.4413%" y="1317" width="0.0335%" height="15" fill="rgb(205,108,24)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1327.50"></text></g><g><title>CACGContextEvaluator::CACGContextEvaluator(unsigned long, unsigned long, CGColorSpace*) (1 samples, 0.03%)</title><rect x="12.4413%" y="1301" width="0.0335%" height="15" fill="rgb(244,120,49)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1311.50"></text></g><g><title>CGDisplayListCreateWithRect (1 samples, 0.03%)</title><rect x="12.4413%" y="1285" width="0.0335%" height="15" fill="rgb(223,47,38)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1295.50"></text></g><g><title>CG::DisplayList::createCGDisplayList(__CFDictionary const*, CGRect const&amp;) (1 samples, 0.03%)</title><rect x="12.4413%" y="1269" width="0.0335%" height="15" fill="rgb(229,179,11)" fg:x="371" fg:w="1"/><text x="12.6913%" y="1279.50"></text></g><g><title>-[NSWindow(Regions) _resetDragMarginsIfNeeded] (1 samples, 0.03%)</title><rect x="12.4748%" y="1381" width="0.0335%" height="15" fill="rgb(231,122,1)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1391.50"></text></g><g><title>-[NSWindow(Regions) _resetDragMargins] (1 samples, 0.03%)</title><rect x="12.4748%" y="1365" width="0.0335%" height="15" fill="rgb(245,119,9)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1375.50"></text></g><g><title>-[NSWindow(Regions) _regionForOpaqueViewsBlockingDraggableFrame:] (1 samples, 0.03%)</title><rect x="12.4748%" y="1349" width="0.0335%" height="15" fill="rgb(241,163,25)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1359.50"></text></g><g><title>-[NSThemeFrame _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.03%)</title><rect x="12.4748%" y="1333" width="0.0335%" height="15" fill="rgb(217,214,3)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1343.50"></text></g><g><title>-[NSView _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.03%)</title><rect x="12.4748%" y="1317" width="0.0335%" height="15" fill="rgb(240,86,28)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1327.50"></text></g><g><title>-[NSTitlebarContainerView _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.03%)</title><rect x="12.4748%" y="1301" width="0.0335%" height="15" fill="rgb(215,47,9)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1311.50"></text></g><g><title>-[NSView _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.03%)</title><rect x="12.4748%" y="1285" width="0.0335%" height="15" fill="rgb(252,25,45)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1295.50"></text></g><g><title>-[NSView _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.03%)</title><rect x="12.4748%" y="1269" width="0.0335%" height="15" fill="rgb(251,164,9)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1279.50"></text></g><g><title>-[NSControl _opaqueRect] (1 samples, 0.03%)</title><rect x="12.4748%" y="1253" width="0.0335%" height="15" fill="rgb(233,194,0)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1263.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="12.4748%" y="1237" width="0.0335%" height="15" fill="rgb(249,111,24)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1247.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="12.4748%" y="1221" width="0.0335%" height="15" fill="rgb(250,223,3)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1231.50"></text></g><g><title>cache_getImp (1 samples, 0.03%)</title><rect x="12.4748%" y="1205" width="0.0335%" height="15" fill="rgb(236,178,37)" fg:x="372" fg:w="1"/><text x="12.7248%" y="1215.50"></text></g><g><title>___NSRunLoopObserverCreateWithHandler_block_invoke (12 samples, 0.40%)</title><rect x="12.1395%" y="1493" width="0.4024%" height="15" fill="rgb(241,158,50)" fg:x="362" fg:w="12"/><text x="12.3895%" y="1503.50"></text></g><g><title>__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (7 samples, 0.23%)</title><rect x="12.3072%" y="1477" width="0.2347%" height="15" fill="rgb(213,121,41)" fg:x="367" fg:w="7"/><text x="12.5572%" y="1487.50"></text></g><g><title>CA::Transaction::commit() (7 samples, 0.23%)</title><rect x="12.3072%" y="1461" width="0.2347%" height="15" fill="rgb(240,92,3)" fg:x="367" fg:w="7"/><text x="12.5572%" y="1471.50"></text></g><g><title>CA::Transaction::run_commit_handlers(CATransactionPhase) (2 samples, 0.07%)</title><rect x="12.4748%" y="1445" width="0.0671%" height="15" fill="rgb(205,123,3)" fg:x="372" fg:w="2"/><text x="12.7248%" y="1455.50"></text></g><g><title>NSDisplayCycleFlush (2 samples, 0.07%)</title><rect x="12.4748%" y="1429" width="0.0671%" height="15" fill="rgb(205,97,47)" fg:x="372" fg:w="2"/><text x="12.7248%" y="1439.50"></text></g><g><title>NSDisplayCycleObserverInvoke (2 samples, 0.07%)</title><rect x="12.4748%" y="1413" width="0.0671%" height="15" fill="rgb(247,152,14)" fg:x="372" fg:w="2"/><text x="12.7248%" y="1423.50"></text></g><g><title>__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (2 samples, 0.07%)</title><rect x="12.4748%" y="1397" width="0.0671%" height="15" fill="rgb(248,195,53)" fg:x="372" fg:w="2"/><text x="12.7248%" y="1407.50"></text></g><g><title>-[_NSTrackingAreaAKManager displayCycleUpdateStructuralRegions] (1 samples, 0.03%)</title><rect x="12.5084%" y="1381" width="0.0335%" height="15" fill="rgb(226,201,16)" fg:x="373" fg:w="1"/><text x="12.7584%" y="1391.50"></text></g><g><title>-[_NSTrackingAreaAKViewHelper updateTrackingAreasWithInvalidCursorRects:] (1 samples, 0.03%)</title><rect x="12.5084%" y="1365" width="0.0335%" height="15" fill="rgb(205,98,0)" fg:x="373" fg:w="1"/><text x="12.7584%" y="1375.50"></text></g><g><title>-[NSNextStepFrame updateTrackingAreas] (1 samples, 0.03%)</title><rect x="12.5084%" y="1349" width="0.0335%" height="15" fill="rgb(214,191,48)" fg:x="373" fg:w="1"/><text x="12.7584%" y="1359.50"></text></g><g><title>-[NSWindow(NSWindowResizing) _updateEdgeResizingTrackingAreas] (1 samples, 0.03%)</title><rect x="12.5084%" y="1333" width="0.0335%" height="15" fill="rgb(237,112,39)" fg:x="373" fg:w="1"/><text x="12.7584%" y="1343.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="12.5084%" y="1317" width="0.0335%" height="15" fill="rgb(247,203,27)" fg:x="373" fg:w="1"/><text x="12.7584%" y="1327.50"></text></g><g><title>__deferBlockOntoMainThread_block_invoke_2 (1 samples, 0.03%)</title><rect x="12.5419%" y="1493" width="0.0335%" height="15" fill="rgb(235,124,28)" fg:x="374" fg:w="1"/><text x="12.7919%" y="1503.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="12.5419%" y="1477" width="0.0335%" height="15" fill="rgb(208,207,46)" fg:x="374" fg:w="1"/><text x="12.7919%" y="1487.50"></text></g><g><title>objc_msgSend$whileHoldingLock:perform: (1 samples, 0.03%)</title><rect x="12.5755%" y="1493" width="0.0335%" height="15" fill="rgb(234,176,4)" fg:x="375" fg:w="1"/><text x="12.8255%" y="1503.50"></text></g><g><title>whileHoldingLockPerform(os_unfair_lock_s*, void () block_pointer) (2 samples, 0.07%)</title><rect x="12.6090%" y="1493" width="0.0671%" height="15" fill="rgb(230,133,28)" fg:x="376" fg:w="2"/><text x="12.8590%" y="1503.50"></text></g><g><title>__56+[HIRunLoopUtilities addRunLoopModesForDeferredActions:]_block_invoke_3 (1 samples, 0.03%)</title><rect x="12.6425%" y="1477" width="0.0335%" height="15" fill="rgb(211,137,40)" fg:x="377" fg:w="1"/><text x="12.8925%" y="1487.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="12.6425%" y="1461" width="0.0335%" height="15" fill="rgb(254,35,13)" fg:x="377" fg:w="1"/><text x="12.8925%" y="1471.50"></text></g><g><title>winit::platform_impl::platform::observer::control_flow_begin_handler (2 samples, 0.07%)</title><rect x="12.6761%" y="1493" width="0.0671%" height="15" fill="rgb(225,49,51)" fg:x="378" fg:w="2"/><text x="12.9261%" y="1503.50"></text></g><g><title>winit::platform_impl::platform::app_state::AppState::wakeup (2 samples, 0.07%)</title><rect x="12.6761%" y="1477" width="0.0671%" height="15" fill="rgb(251,10,15)" fg:x="378" fg:w="2"/><text x="12.9261%" y="1487.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="12.8102%" y="1461" width="0.0335%" height="15" fill="rgb(228,207,15)" fg:x="382" fg:w="1"/><text x="13.0602%" y="1471.50"></text></g><g><title>&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (1 samples, 0.03%)</title><rect x="12.8437%" y="1461" width="0.0335%" height="15" fill="rgb(241,99,19)" fg:x="383" fg:w="1"/><text x="13.0937%" y="1471.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (1 samples, 0.03%)</title><rect x="12.8437%" y="1445" width="0.0335%" height="15" fill="rgb(207,104,49)" fg:x="383" fg:w="1"/><text x="13.0937%" y="1455.50"></text></g><g><title>_szone_free (1 samples, 0.03%)</title><rect x="12.8773%" y="1461" width="0.0335%" height="15" fill="rgb(234,99,18)" fg:x="384" fg:w="1"/><text x="13.1273%" y="1471.50"></text></g><g><title>&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (1 samples, 0.03%)</title><rect x="12.9779%" y="1429" width="0.0335%" height="15" fill="rgb(213,191,49)" fg:x="387" fg:w="1"/><text x="13.2279%" y="1439.50"></text></g><g><title>pcls::main::_{{closure}} (1 samples, 0.03%)</title><rect x="12.9779%" y="1413" width="0.0335%" height="15" fill="rgb(210,226,19)" fg:x="387" fg:w="1"/><text x="13.2279%" y="1423.50"></text></g><g><title>_platform_memmove (131 samples, 4.39%)</title><rect x="13.0114%" y="1413" width="4.3930%" height="15" fill="rgb(229,97,18)" fg:x="388" fg:w="131"/><text x="13.2614%" y="1423.50">_plat..</text></g><g><title>_platform_memmove (311 samples, 10.43%)</title><rect x="17.4044%" y="1397" width="10.4292%" height="15" fill="rgb(211,167,15)" fg:x="519" fg:w="311"/><text x="17.6544%" y="1407.50">_platform_memmo..</text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::repeat (313 samples, 10.50%)</title><rect x="17.4044%" y="1413" width="10.4963%" height="15" fill="rgb(210,169,34)" fg:x="519" fg:w="313"/><text x="17.6544%" y="1423.50">alloc::slice::_..</text></g><g><title>szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="27.8337%" y="1397" width="0.0671%" height="15" fill="rgb(241,121,31)" fg:x="830" fg:w="2"/><text x="28.0837%" y="1407.50"></text></g><g><title>medium_malloc_should_clear (2 samples, 0.07%)</title><rect x="27.8337%" y="1381" width="0.0671%" height="15" fill="rgb(232,40,11)" fg:x="830" fg:w="2"/><text x="28.0837%" y="1391.50"></text></g><g><title>free_medium (41 samples, 1.37%)</title><rect x="27.9007%" y="1413" width="1.3749%" height="15" fill="rgb(205,86,26)" fg:x="832" fg:w="41"/><text x="28.1507%" y="1423.50"></text></g><g><title>mvm_madvise_free_plat (41 samples, 1.37%)</title><rect x="27.9007%" y="1397" width="1.3749%" height="15" fill="rgb(231,126,28)" fg:x="832" fg:w="41"/><text x="28.1507%" y="1407.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (41 samples, 1.37%)</title><rect x="27.9007%" y="1381" width="1.3749%" height="15" fill="rgb(219,221,18)" fg:x="832" fg:w="41"/><text x="28.1507%" y="1391.50"></text></g><g><title>madvise (41 samples, 1.37%)</title><rect x="27.9007%" y="1365" width="1.3749%" height="15" fill="rgb(211,40,0)" fg:x="832" fg:w="41"/><text x="28.1507%" y="1375.50"></text></g><g><title>free_small (1 samples, 0.03%)</title><rect x="29.2757%" y="1413" width="0.0335%" height="15" fill="rgb(239,85,43)" fg:x="873" fg:w="1"/><text x="29.5257%" y="1423.50"></text></g><g><title>_platform_memset (21 samples, 0.70%)</title><rect x="29.3092%" y="1397" width="0.7042%" height="15" fill="rgb(231,55,21)" fg:x="874" fg:w="21"/><text x="29.5592%" y="1407.50"></text></g><g><title>pcls::gfx::Gfx::draw_particles (56 samples, 1.88%)</title><rect x="29.3092%" y="1413" width="1.8779%" height="15" fill="rgb(225,184,43)" fg:x="874" fg:w="56"/><text x="29.5592%" y="1423.50">p..</text></g><g><title>pcls::gfx::Gfx::draw_particles (35 samples, 1.17%)</title><rect x="30.0134%" y="1397" width="1.1737%" height="15" fill="rgb(251,158,41)" fg:x="895" fg:w="35"/><text x="30.2634%" y="1407.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="31.3883%" y="1349" width="0.0335%" height="15" fill="rgb(234,159,37)" fg:x="936" fg:w="1"/><text x="31.6383%" y="1359.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1 samples, 0.03%)</title><rect x="31.4219%" y="1349" width="0.0335%" height="15" fill="rgb(216,204,22)" fg:x="937" fg:w="1"/><text x="31.6719%" y="1359.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1 samples, 0.03%)</title><rect x="31.5560%" y="1333" width="0.0335%" height="15" fill="rgb(214,17,3)" fg:x="941" fg:w="1"/><text x="31.8060%" y="1343.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (1 samples, 0.03%)</title><rect x="31.5560%" y="1317" width="0.0335%" height="15" fill="rgb(212,111,17)" fg:x="941" fg:w="1"/><text x="31.8060%" y="1327.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="31.5895%" y="1317" width="0.0335%" height="15" fill="rgb(221,157,24)" fg:x="942" fg:w="1"/><text x="31.8395%" y="1327.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (5 samples, 0.17%)</title><rect x="31.6231%" y="1317" width="0.1677%" height="15" fill="rgb(252,16,13)" fg:x="943" fg:w="5"/><text x="31.8731%" y="1327.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (1 samples, 0.03%)</title><rect x="31.7572%" y="1301" width="0.0335%" height="15" fill="rgb(221,62,2)" fg:x="947" fg:w="1"/><text x="32.0072%" y="1311.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (4 samples, 0.13%)</title><rect x="31.7907%" y="1301" width="0.1341%" height="15" fill="rgb(247,87,22)" fg:x="948" fg:w="4"/><text x="32.0407%" y="1311.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.03%)</title><rect x="31.8913%" y="1285" width="0.0335%" height="15" fill="rgb(215,73,9)" fg:x="951" fg:w="1"/><text x="32.1413%" y="1295.50"></text></g><g><title>pcls::sweep::SweepAndPrune::rebuild (23 samples, 0.77%)</title><rect x="31.1871%" y="1413" width="0.7713%" height="15" fill="rgb(207,175,33)" fg:x="930" fg:w="23"/><text x="31.4371%" y="1423.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (23 samples, 0.77%)</title><rect x="31.1871%" y="1397" width="0.7713%" height="15" fill="rgb(243,129,54)" fg:x="930" fg:w="23"/><text x="31.4371%" y="1407.50"></text></g><g><title>core::slice::sort::stable::drift::sort (23 samples, 0.77%)</title><rect x="31.1871%" y="1381" width="0.7713%" height="15" fill="rgb(227,119,45)" fg:x="930" fg:w="23"/><text x="31.4371%" y="1391.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (21 samples, 0.70%)</title><rect x="31.2542%" y="1365" width="0.7042%" height="15" fill="rgb(205,109,36)" fg:x="932" fg:w="21"/><text x="31.5042%" y="1375.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (15 samples, 0.50%)</title><rect x="31.4554%" y="1349" width="0.5030%" height="15" fill="rgb(205,6,39)" fg:x="938" fg:w="15"/><text x="31.7054%" y="1359.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (11 samples, 0.37%)</title><rect x="31.5895%" y="1333" width="0.3689%" height="15" fill="rgb(221,32,16)" fg:x="942" fg:w="11"/><text x="31.8395%" y="1343.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (5 samples, 0.17%)</title><rect x="31.7907%" y="1317" width="0.1677%" height="15" fill="rgb(228,144,50)" fg:x="948" fg:w="5"/><text x="32.0407%" y="1327.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (1 samples, 0.03%)</title><rect x="31.9249%" y="1301" width="0.0335%" height="15" fill="rgb(229,201,53)" fg:x="952" fg:w="1"/><text x="32.1749%" y="1311.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (1 samples, 0.03%)</title><rect x="31.9249%" y="1285" width="0.0335%" height="15" fill="rgb(249,153,27)" fg:x="952" fg:w="1"/><text x="32.1749%" y="1295.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1 samples, 0.03%)</title><rect x="31.9249%" y="1269" width="0.0335%" height="15" fill="rgb(227,106,25)" fg:x="952" fg:w="1"/><text x="32.1749%" y="1279.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (1 samples, 0.03%)</title><rect x="31.9249%" y="1253" width="0.0335%" height="15" fill="rgb(230,65,29)" fg:x="952" fg:w="1"/><text x="32.1749%" y="1263.50"></text></g><g><title>__rustc::__rdl_realloc (1 samples, 0.03%)</title><rect x="34.7418%" y="1365" width="0.0335%" height="15" fill="rgb(221,57,46)" fg:x="1036" fg:w="1"/><text x="34.9918%" y="1375.50"></text></g><g><title>_platform_memmove (6 samples, 0.20%)</title><rect x="34.8089%" y="1317" width="0.2012%" height="15" fill="rgb(229,161,17)" fg:x="1038" fg:w="6"/><text x="35.0589%" y="1327.50"></text></g><g><title>_szone_free (1 samples, 0.03%)</title><rect x="35.0101%" y="1317" width="0.0335%" height="15" fill="rgb(222,213,11)" fg:x="1044" fg:w="1"/><text x="35.2601%" y="1327.50"></text></g><g><title>free_tiny (1 samples, 0.03%)</title><rect x="35.0436%" y="1317" width="0.0335%" height="15" fill="rgb(235,35,13)" fg:x="1045" fg:w="1"/><text x="35.2936%" y="1327.50"></text></g><g><title>szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="35.0771%" y="1317" width="0.0671%" height="15" fill="rgb(233,158,34)" fg:x="1046" fg:w="2"/><text x="35.3271%" y="1327.50"></text></g><g><title>medium_malloc_should_clear (2 samples, 0.07%)</title><rect x="35.0771%" y="1301" width="0.0671%" height="15" fill="rgb(215,151,48)" fg:x="1046" fg:w="2"/><text x="35.3271%" y="1311.50"></text></g><g><title>_malloc_zone_realloc (12 samples, 0.40%)</title><rect x="34.7753%" y="1349" width="0.4024%" height="15" fill="rgb(229,84,14)" fg:x="1037" fg:w="12"/><text x="35.0253%" y="1359.50"></text></g><g><title>szone_realloc (11 samples, 0.37%)</title><rect x="34.8089%" y="1333" width="0.3689%" height="15" fill="rgb(229,68,14)" fg:x="1038" fg:w="11"/><text x="35.0589%" y="1343.50"></text></g><g><title>szone_size (1 samples, 0.03%)</title><rect x="35.1442%" y="1317" width="0.0335%" height="15" fill="rgb(243,106,26)" fg:x="1048" fg:w="1"/><text x="35.3942%" y="1327.50"></text></g><g><title>tiny_size (1 samples, 0.03%)</title><rect x="35.1442%" y="1301" width="0.0335%" height="15" fill="rgb(206,45,38)" fg:x="1048" fg:w="1"/><text x="35.3942%" y="1311.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (14 samples, 0.47%)</title><rect x="34.7418%" y="1397" width="0.4695%" height="15" fill="rgb(226,6,15)" fg:x="1036" fg:w="14"/><text x="34.9918%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.47%)</title><rect x="34.7418%" y="1381" width="0.4695%" height="15" fill="rgb(232,22,54)" fg:x="1036" fg:w="14"/><text x="34.9918%" y="1391.50"></text></g><g><title>_realloc (13 samples, 0.44%)</title><rect x="34.7753%" y="1365" width="0.4359%" height="15" fill="rgb(229,222,32)" fg:x="1037" fg:w="13"/><text x="35.0253%" y="1375.50"></text></g><g><title>szone_size (1 samples, 0.03%)</title><rect x="35.1777%" y="1349" width="0.0335%" height="15" fill="rgb(228,62,29)" fg:x="1049" fg:w="1"/><text x="35.4277%" y="1359.50"></text></g><g><title>free_medium (9 samples, 0.30%)</title><rect x="35.2113%" y="1397" width="0.3018%" height="15" fill="rgb(251,103,34)" fg:x="1050" fg:w="9"/><text x="35.4613%" y="1407.50"></text></g><g><title>mvm_madvise_free_plat (9 samples, 0.30%)</title><rect x="35.2113%" y="1381" width="0.3018%" height="15" fill="rgb(233,12,30)" fg:x="1050" fg:w="9"/><text x="35.4613%" y="1391.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (9 samples, 0.30%)</title><rect x="35.2113%" y="1365" width="0.3018%" height="15" fill="rgb(238,52,0)" fg:x="1050" fg:w="9"/><text x="35.4613%" y="1375.50"></text></g><g><title>madvise (9 samples, 0.30%)</title><rect x="35.2113%" y="1349" width="0.3018%" height="15" fill="rgb(223,98,5)" fg:x="1050" fg:w="9"/><text x="35.4613%" y="1359.50"></text></g><g><title>free_small (1 samples, 0.03%)</title><rect x="35.5131%" y="1397" width="0.0335%" height="15" fill="rgb(228,75,37)" fg:x="1059" fg:w="1"/><text x="35.7631%" y="1407.50"></text></g><g><title>_szone_free (2 samples, 0.07%)</title><rect x="35.9155%" y="1381" width="0.0671%" height="15" fill="rgb(205,115,49)" fg:x="1071" fg:w="2"/><text x="36.1655%" y="1391.50"></text></g><g><title>core::slice::sort::shared::pivot::median3_rec (2 samples, 0.07%)</title><rect x="36.4185%" y="1333" width="0.0671%" height="15" fill="rgb(250,154,43)" fg:x="1086" fg:w="2"/><text x="36.6685%" y="1343.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1 samples, 0.03%)</title><rect x="36.4856%" y="1333" width="0.0335%" height="15" fill="rgb(226,43,29)" fg:x="1088" fg:w="1"/><text x="36.7356%" y="1343.50"></text></g><g><title>_platform_memmove (2 samples, 0.07%)</title><rect x="36.6868%" y="1317" width="0.0671%" height="15" fill="rgb(249,228,39)" fg:x="1094" fg:w="2"/><text x="36.9368%" y="1327.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (5 samples, 0.17%)</title><rect x="36.7539%" y="1317" width="0.1677%" height="15" fill="rgb(216,79,43)" fg:x="1096" fg:w="5"/><text x="37.0039%" y="1327.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (1 samples, 0.03%)</title><rect x="36.8880%" y="1301" width="0.0335%" height="15" fill="rgb(228,95,12)" fg:x="1100" fg:w="1"/><text x="37.1380%" y="1311.50"></text></g><g><title>core::slice::sort::shared::pivot::median3_rec (1 samples, 0.03%)</title><rect x="36.9886%" y="1301" width="0.0335%" height="15" fill="rgb(249,221,15)" fg:x="1103" fg:w="1"/><text x="37.2386%" y="1311.50"></text></g><g><title>core::slice::sort::shared::pivot::median3_rec (1 samples, 0.03%)</title><rect x="36.9886%" y="1285" width="0.0335%" height="15" fill="rgb(233,34,13)" fg:x="1103" fg:w="1"/><text x="37.2386%" y="1295.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (7 samples, 0.23%)</title><rect x="37.0221%" y="1301" width="0.2347%" height="15" fill="rgb(214,103,39)" fg:x="1104" fg:w="7"/><text x="37.2721%" y="1311.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (3 samples, 0.10%)</title><rect x="37.1563%" y="1285" width="0.1006%" height="15" fill="rgb(251,126,39)" fg:x="1108" fg:w="3"/><text x="37.4063%" y="1295.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.03%)</title><rect x="37.2233%" y="1269" width="0.0335%" height="15" fill="rgb(214,216,36)" fg:x="1110" fg:w="1"/><text x="37.4733%" y="1279.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (42 samples, 1.41%)</title><rect x="35.9826%" y="1381" width="1.4085%" height="15" fill="rgb(220,221,8)" fg:x="1073" fg:w="42"/><text x="36.2326%" y="1391.50"></text></g><g><title>core::slice::sort::stable::drift::sort (42 samples, 1.41%)</title><rect x="35.9826%" y="1365" width="1.4085%" height="15" fill="rgb(240,216,3)" fg:x="1073" fg:w="42"/><text x="36.2326%" y="1375.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (37 samples, 1.24%)</title><rect x="36.1502%" y="1349" width="1.2408%" height="15" fill="rgb(232,218,17)" fg:x="1078" fg:w="37"/><text x="36.4002%" y="1359.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (26 samples, 0.87%)</title><rect x="36.5191%" y="1333" width="0.8719%" height="15" fill="rgb(229,163,45)" fg:x="1089" fg:w="26"/><text x="36.7691%" y="1343.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (14 samples, 0.47%)</title><rect x="36.9215%" y="1317" width="0.4695%" height="15" fill="rgb(231,110,42)" fg:x="1101" fg:w="14"/><text x="37.1715%" y="1327.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (4 samples, 0.13%)</title><rect x="37.2569%" y="1301" width="0.1341%" height="15" fill="rgb(208,170,48)" fg:x="1111" fg:w="4"/><text x="37.5069%" y="1311.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (4 samples, 0.13%)</title><rect x="37.2569%" y="1285" width="0.1341%" height="15" fill="rgb(239,116,25)" fg:x="1111" fg:w="4"/><text x="37.5069%" y="1295.50"></text></g><g><title>pcls::sweepphx::Phx::step (164 samples, 5.50%)</title><rect x="31.9584%" y="1413" width="5.4997%" height="15" fill="rgb(219,200,50)" fg:x="953" fg:w="164"/><text x="32.2084%" y="1423.50">pcls::s..</text></g><g><title>pcls::sweep::SweepAndPrune::update (57 samples, 1.91%)</title><rect x="35.5466%" y="1397" width="1.9115%" height="15" fill="rgb(245,200,0)" fg:x="1060" fg:w="57"/><text x="35.7966%" y="1407.50">p..</text></g><g><title>free_small (2 samples, 0.07%)</title><rect x="37.3910%" y="1381" width="0.0671%" height="15" fill="rgb(245,119,33)" fg:x="1115" fg:w="2"/><text x="37.6410%" y="1391.50"></text></g><g><title>small_free_list_add_ptr (1 samples, 0.03%)</title><rect x="37.4245%" y="1365" width="0.0335%" height="15" fill="rgb(231,125,12)" fg:x="1116" fg:w="1"/><text x="37.6745%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::TextureView&gt; (2 samples, 0.07%)</title><rect x="37.4581%" y="1397" width="0.0671%" height="15" fill="rgb(216,96,41)" fg:x="1117" fg:w="2"/><text x="37.7081%" y="1407.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_view_drop (1 samples, 0.03%)</title><rect x="37.4916%" y="1381" width="0.0335%" height="15" fill="rgb(248,43,45)" fg:x="1118" fg:w="1"/><text x="37.7416%" y="1391.50"></text></g><g><title>wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_view_drop (1 samples, 0.03%)</title><rect x="37.4916%" y="1365" width="0.0335%" height="15" fill="rgb(217,222,7)" fg:x="1118" fg:w="1"/><text x="37.7416%" y="1375.50"></text></g><g><title>AGX::Mempool&lt;16u, 0u, true, AGX::HAL200::TextureHeapElem, AGX::HAL200::TextureHeapElem, unsigned int&gt;::addToResourceList(std::__1::array&lt;AGX::Mempool&lt;16u, 0u, true, AGX::HAL200::TextureHeapElem, AGX::HAL200::TextureHeapElem, unsigned int&gt;::ChunkInfo, 3ul&gt;&amp;&amp;, MTLResourceList*) (1 samples, 0.03%)</title><rect x="37.6593%" y="1285" width="0.0335%" height="15" fill="rgb(233,28,6)" fg:x="1123" fg:w="1"/><text x="37.9093%" y="1295.50"></text></g><g><title>MTLResourceListAddResource (1 samples, 0.03%)</title><rect x="37.6593%" y="1269" width="0.0335%" height="15" fill="rgb(231,218,15)" fg:x="1123" fg:w="1"/><text x="37.9093%" y="1279.50"></text></g><g><title>MTLResourceListAddHashValue(MTLResourceListPrivate&amp;, unsigned long long) (1 samples, 0.03%)</title><rect x="37.6593%" y="1253" width="0.0335%" height="15" fill="rgb(226,171,48)" fg:x="1123" fg:w="1"/><text x="37.9093%" y="1263.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::emitFragmentProgramVariantAndArguments(AGX::HAL200::DataBufferAllocator&amp;, AGX::HAL200::FragmentProgramVariant const*, AGX::HAL200::RenderPipeline const*, AGX::ArgumentTable&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;&amp;, AGX::FragmentDriverArgumentTable&lt;AGX::HAL200::Classes&gt;&amp;, AGX::HAL200::Framebuffer const&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*) (2 samples, 0.07%)</title><rect x="37.6928%" y="1285" width="0.0671%" height="15" fill="rgb(235,201,9)" fg:x="1124" fg:w="2"/><text x="37.9428%" y="1295.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::HAL200::DataBufferAllocator&amp;, AGX::HAL200::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::HAL200::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration&lt;eAGXDataBufferAllocFlags&gt; const&amp;) (1 samples, 0.03%)</title><rect x="37.7599%" y="1285" width="0.0335%" height="15" fill="rgb(217,80,15)" fg:x="1126" fg:w="1"/><text x="38.0099%" y="1295.50"></text></g><g><title>-[AGXG16GFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (5 samples, 0.17%)</title><rect x="37.6593%" y="1317" width="0.1677%" height="15" fill="rgb(219,152,8)" fg:x="1123" fg:w="5"/><text x="37.9093%" y="1327.50"></text></g><g><title>AGX::RenderContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::encodeAndEmitRenderState(AGX::HAL200::VertexProgramVariant const*, AGX::HAL200::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;&amp;, AGX::RenderDirtyBits&lt;AGX::HAL200::Classes&gt;&amp;, bool) (5 samples, 0.17%)</title><rect x="37.6593%" y="1301" width="0.1677%" height="15" fill="rgb(243,107,38)" fg:x="1123" fg:w="5"/><text x="37.9093%" y="1311.50"></text></g><g><title>ioGPUResourceListAddHashValue (1 samples, 0.03%)</title><rect x="37.7934%" y="1285" width="0.0335%" height="15" fill="rgb(231,17,5)" fg:x="1127" fg:w="1"/><text x="38.0434%" y="1295.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (2 samples, 0.07%)</title><rect x="37.8270%" y="1317" width="0.0671%" height="15" fill="rgb(209,25,54)" fg:x="1128" fg:w="2"/><text x="38.0770%" y="1327.50"></text></g><g><title>wgpu_core::track::texture::TextureStateSet::set_size (1 samples, 0.03%)</title><rect x="37.8605%" y="1301" width="0.0335%" height="15" fill="rgb(219,0,2)" fg:x="1129" fg:w="1"/><text x="38.1105%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="37.8605%" y="1285" width="0.0335%" height="15" fill="rgb(246,9,5)" fg:x="1129" fg:w="1"/><text x="38.1105%" y="1295.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="37.8605%" y="1269" width="0.0335%" height="15" fill="rgb(226,159,4)" fg:x="1129" fg:w="1"/><text x="38.1105%" y="1279.50"></text></g><g><title>DYLD-STUB$$free (1 samples, 0.03%)</title><rect x="37.8940%" y="1317" width="0.0335%" height="15" fill="rgb(219,175,34)" fg:x="1130" fg:w="1"/><text x="38.1440%" y="1327.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="37.9276%" y="1317" width="0.0335%" height="15" fill="rgb(236,10,46)" fg:x="1131" fg:w="1"/><text x="38.1776%" y="1327.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (1 samples, 0.03%)</title><rect x="37.9611%" y="1317" width="0.0335%" height="15" fill="rgb(240,211,16)" fg:x="1132" fg:w="1"/><text x="38.2111%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="37.9611%" y="1301" width="0.0335%" height="15" fill="rgb(205,3,43)" fg:x="1132" fg:w="1"/><text x="38.2111%" y="1311.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (2 samples, 0.07%)</title><rect x="37.9946%" y="1317" width="0.0671%" height="15" fill="rgb(245,7,22)" fg:x="1133" fg:w="2"/><text x="38.2446%" y="1327.50"></text></g><g><title>wgpu_core::command::bind::compat::Manager&lt;T&gt;::make_range (1 samples, 0.03%)</title><rect x="38.0282%" y="1301" width="0.0335%" height="15" fill="rgb(239,132,32)" fg:x="1134" fg:w="1"/><text x="38.2782%" y="1311.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (2 samples, 0.07%)</title><rect x="38.0617%" y="1317" width="0.0671%" height="15" fill="rgb(228,202,34)" fg:x="1135" fg:w="2"/><text x="38.3117%" y="1327.50"></text></g><g><title>wgpu_core::command::bind::compat::Manager&lt;T&gt;::update_expectations (1 samples, 0.03%)</title><rect x="38.0952%" y="1301" width="0.0335%" height="15" fill="rgb(254,200,22)" fg:x="1136" fg:w="1"/><text x="38.3452%" y="1311.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (1 samples, 0.03%)</title><rect x="38.1288%" y="1317" width="0.0335%" height="15" fill="rgb(219,10,39)" fg:x="1137" fg:w="1"/><text x="38.3788%" y="1327.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (1 samples, 0.03%)</title><rect x="38.1288%" y="1301" width="0.0335%" height="15" fill="rgb(226,210,39)" fg:x="1137" fg:w="1"/><text x="38.3788%" y="1311.50"></text></g><g><title>-[AGXG16GFamilyRenderContext endEncoding] (1 samples, 0.03%)</title><rect x="38.1288%" y="1285" width="0.0335%" height="15" fill="rgb(208,219,16)" fg:x="1137" fg:w="1"/><text x="38.3788%" y="1295.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (2 samples, 0.07%)</title><rect x="38.2629%" y="1301" width="0.0671%" height="15" fill="rgb(216,158,51)" fg:x="1141" fg:w="2"/><text x="38.5129%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="38.2964%" y="1285" width="0.0335%" height="15" fill="rgb(233,14,44)" fg:x="1142" fg:w="1"/><text x="38.5464%" y="1295.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="38.2964%" y="1269" width="0.0335%" height="15" fill="rgb(237,97,39)" fg:x="1142" fg:w="1"/><text x="38.5464%" y="1279.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="38.2964%" y="1253" width="0.0335%" height="15" fill="rgb(218,198,43)" fg:x="1142" fg:w="1"/><text x="38.5464%" y="1263.50"></text></g><g><title>wgpu_core::device::AttachmentData&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="38.3300%" y="1301" width="0.0335%" height="15" fill="rgb(231,104,20)" fg:x="1143" fg:w="1"/><text x="38.5800%" y="1311.50"></text></g><g><title>wgpu_core::resource::HalTextureViewDescriptor::aspects (1 samples, 0.03%)</title><rect x="38.3635%" y="1301" width="0.0335%" height="15" fill="rgb(254,36,13)" fg:x="1144" fg:w="1"/><text x="38.6135%" y="1311.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="38.3970%" y="1285" width="0.0335%" height="15" fill="rgb(248,14,50)" fg:x="1145" fg:w="1"/><text x="38.6470%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.03%)</title><rect x="38.3970%" y="1269" width="0.0335%" height="15" fill="rgb(217,107,29)" fg:x="1145" fg:w="1"/><text x="38.6470%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="38.3970%" y="1253" width="0.0335%" height="15" fill="rgb(251,169,33)" fg:x="1145" fg:w="1"/><text x="38.6470%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="38.3970%" y="1237" width="0.0335%" height="15" fill="rgb(217,108,32)" fg:x="1145" fg:w="1"/><text x="38.6470%" y="1247.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="38.3970%" y="1221" width="0.0335%" height="15" fill="rgb(219,66,42)" fg:x="1145" fg:w="1"/><text x="38.6470%" y="1231.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (2 samples, 0.07%)</title><rect x="38.3970%" y="1301" width="0.0671%" height="15" fill="rgb(206,180,7)" fg:x="1145" fg:w="2"/><text x="38.6470%" y="1311.50"></text></g><g><title>__bzero (1 samples, 0.03%)</title><rect x="38.4306%" y="1285" width="0.0335%" height="15" fill="rgb(208,226,31)" fg:x="1146" fg:w="1"/><text x="38.6806%" y="1295.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (1 samples, 0.03%)</title><rect x="38.4641%" y="1301" width="0.0335%" height="15" fill="rgb(218,26,49)" fg:x="1147" fg:w="1"/><text x="38.7141%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.03%)</title><rect x="38.4641%" y="1285" width="0.0335%" height="15" fill="rgb(233,197,48)" fg:x="1147" fg:w="1"/><text x="38.7141%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="38.4641%" y="1269" width="0.0335%" height="15" fill="rgb(252,181,51)" fg:x="1147" fg:w="1"/><text x="38.7141%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="38.4641%" y="1253" width="0.0335%" height="15" fill="rgb(253,90,19)" fg:x="1147" fg:w="1"/><text x="38.7141%" y="1263.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="38.4641%" y="1237" width="0.0335%" height="15" fill="rgb(215,171,30)" fg:x="1147" fg:w="1"/><text x="38.7141%" y="1247.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal init] (1 samples, 0.03%)</title><rect x="38.5312%" y="1253" width="0.0335%" height="15" fill="rgb(214,222,9)" fg:x="1149" fg:w="1"/><text x="38.7812%" y="1263.50"></text></g><g><title>objc_alloc_init (1 samples, 0.03%)</title><rect x="38.5312%" y="1237" width="0.0335%" height="15" fill="rgb(223,3,22)" fg:x="1149" fg:w="1"/><text x="38.7812%" y="1247.50"></text></g><g><title>+[MTLRenderPassColorAttachmentDescriptorArray alloc] (1 samples, 0.03%)</title><rect x="38.5312%" y="1221" width="0.0335%" height="15" fill="rgb(225,196,46)" fg:x="1149" fg:w="1"/><text x="38.7812%" y="1231.50"></text></g><g><title>_objc_rootAllocWithZone (1 samples, 0.03%)</title><rect x="38.5312%" y="1205" width="0.0335%" height="15" fill="rgb(209,110,37)" fg:x="1149" fg:w="1"/><text x="38.7812%" y="1215.50"></text></g><g><title>nanov2_calloc_type (1 samples, 0.03%)</title><rect x="38.5312%" y="1189" width="0.0335%" height="15" fill="rgb(249,89,12)" fg:x="1149" fg:w="1"/><text x="38.7812%" y="1199.50"></text></g><g><title>+[MTLRenderPassDescriptor allocWithZone:] (1 samples, 0.03%)</title><rect x="38.5647%" y="1237" width="0.0335%" height="15" fill="rgb(226,27,33)" fg:x="1150" fg:w="1"/><text x="38.8147%" y="1247.50"></text></g><g><title>+[NSObject allocWithZone:] (1 samples, 0.03%)</title><rect x="38.5647%" y="1221" width="0.0335%" height="15" fill="rgb(213,82,22)" fg:x="1150" fg:w="1"/><text x="38.8147%" y="1231.50"></text></g><g><title>+[MTLRenderPassDescriptor renderPassDescriptor] (4 samples, 0.13%)</title><rect x="38.5312%" y="1269" width="0.1341%" height="15" fill="rgb(248,140,0)" fg:x="1149" fg:w="4"/><text x="38.7812%" y="1279.50"></text></g><g><title>objc_alloc_init (3 samples, 0.10%)</title><rect x="38.5647%" y="1253" width="0.1006%" height="15" fill="rgb(228,106,3)" fg:x="1150" fg:w="3"/><text x="38.8147%" y="1263.50"></text></g><g><title>objc_msgSend (2 samples, 0.07%)</title><rect x="38.5983%" y="1237" width="0.0671%" height="15" fill="rgb(209,23,37)" fg:x="1151" fg:w="2"/><text x="38.8483%" y="1247.50"></text></g><g><title>-[AGXG16GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (1 samples, 0.03%)</title><rect x="38.8665%" y="1237" width="0.0335%" height="15" fill="rgb(241,93,50)" fg:x="1159" fg:w="1"/><text x="39.1165%" y="1247.50"></text></g><g><title>AGX::FramebufferDriverConfig&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::FramebufferDriverConfig(MTLRenderPassDescriptor const*, unsigned int, eAGXLoadStorePatchMode) (1 samples, 0.03%)</title><rect x="38.8665%" y="1221" width="0.0335%" height="15" fill="rgb(253,46,43)" fg:x="1159" fg:w="1"/><text x="39.1165%" y="1231.50"></text></g><g><title>-[IOGPUMetalCommandEncoder globalTraceObjectID] (1 samples, 0.03%)</title><rect x="38.9001%" y="1237" width="0.0335%" height="15" fill="rgb(226,206,43)" fg:x="1160" fg:w="1"/><text x="39.1501%" y="1247.50"></text></g><g><title>IOGPUDeviceGetNextGlobalTraceID (1 samples, 0.03%)</title><rect x="38.9001%" y="1221" width="0.0335%" height="15" fill="rgb(217,54,7)" fg:x="1160" fg:w="1"/><text x="39.1501%" y="1231.50"></text></g><g><title>-[IOGPUMetalCommandEncoder initWithCommandBuffer:] (2 samples, 0.07%)</title><rect x="38.9336%" y="1237" width="0.0671%" height="15" fill="rgb(223,5,52)" fg:x="1161" fg:w="2"/><text x="39.1836%" y="1247.50"></text></g><g><title>-[_MTLCommandEncoder initWithCommandBuffer:] (2 samples, 0.07%)</title><rect x="38.9336%" y="1221" width="0.0671%" height="15" fill="rgb(206,52,46)" fg:x="1161" fg:w="2"/><text x="39.1836%" y="1231.50"></text></g><g><title>-[IOGPUMetalCommandBuffer setCurrentCommandEncoder:] (1 samples, 0.03%)</title><rect x="38.9671%" y="1205" width="0.0335%" height="15" fill="rgb(253,136,11)" fg:x="1162" fg:w="1"/><text x="39.2171%" y="1215.50"></text></g><g><title>-[_MTLCommandBuffer setCurrentCommandEncoder:] (1 samples, 0.03%)</title><rect x="38.9671%" y="1189" width="0.0335%" height="15" fill="rgb(208,106,33)" fg:x="1162" fg:w="1"/><text x="39.2171%" y="1199.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal _descriptorPrivate] (1 samples, 0.03%)</title><rect x="39.0007%" y="1237" width="0.0335%" height="15" fill="rgb(206,54,4)" fg:x="1163" fg:w="1"/><text x="39.2507%" y="1247.50"></text></g><g><title>-[_MTLDevice minTilePixels] (1 samples, 0.03%)</title><rect x="39.1013%" y="1221" width="0.0335%" height="15" fill="rgb(213,3,15)" fg:x="1166" fg:w="1"/><text x="39.3513%" y="1231.50"></text></g><g><title>-[_MTLDevice limits] (1 samples, 0.03%)</title><rect x="39.1013%" y="1205" width="0.0335%" height="15" fill="rgb(252,211,39)" fg:x="1166" fg:w="1"/><text x="39.3513%" y="1215.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal validate:width:height:] (4 samples, 0.13%)</title><rect x="39.0342%" y="1237" width="0.1341%" height="15" fill="rgb(223,6,36)" fg:x="1164" fg:w="4"/><text x="39.2842%" y="1247.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="39.1348%" y="1221" width="0.0335%" height="15" fill="rgb(252,169,45)" fg:x="1167" fg:w="1"/><text x="39.3848%" y="1231.50"></text></g><g><title>AGX::ClipRectContextGen3&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::setViewports(MTLViewport const*, unsigned int, bool) (1 samples, 0.03%)</title><rect x="39.1683%" y="1237" width="0.0335%" height="15" fill="rgb(212,48,26)" fg:x="1168" fg:w="1"/><text x="39.4183%" y="1247.50"></text></g><g><title>AGX::FramebufferCompilerConfigGen3&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::buildDrawBufferState(unsigned int, bool) (1 samples, 0.03%)</title><rect x="39.2019%" y="1237" width="0.0335%" height="15" fill="rgb(251,102,48)" fg:x="1169" fg:w="1"/><text x="39.4519%" y="1247.50"></text></g><g><title>-[MTLRenderPassColorAttachmentDescriptorArrayInternal _descriptorAtIndex:] (1 samples, 0.03%)</title><rect x="39.2354%" y="1221" width="0.0335%" height="15" fill="rgb(243,208,16)" fg:x="1170" fg:w="1"/><text x="39.4854%" y="1231.50"></text></g><g><title>AGX::FramebufferDriverConfig&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::FramebufferDriverConfig(MTLRenderPassDescriptor const*, unsigned int, eAGXLoadStorePatchMode) (2 samples, 0.07%)</title><rect x="39.2354%" y="1237" width="0.0671%" height="15" fill="rgb(219,96,24)" fg:x="1170" fg:w="2"/><text x="39.4854%" y="1247.50"></text></g><g><title>AGX::FramebufferDriverConfig&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::FramebufferDriverConfig(MTLRenderPassDescriptor const*, unsigned int, eAGXLoadStorePatchMode) (1 samples, 0.03%)</title><rect x="39.2689%" y="1221" width="0.0335%" height="15" fill="rgb(219,33,29)" fg:x="1171" fg:w="1"/><text x="39.5189%" y="1231.50"></text></g><g><title>AGX::Framebuffer&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::configurePBE(AGX::HAL200::Texture*, unsigned int, unsigned int, unsigned int, _AGCDrawBufferState const&amp;, _AGCDrawBuffer const&amp;, unsigned int, unsigned int, bool, bool, bool, bool) (1 samples, 0.03%)</title><rect x="39.5037%" y="1205" width="0.0335%" height="15" fill="rgb(223,176,5)" fg:x="1178" fg:w="1"/><text x="39.7537%" y="1215.50"></text></g><g><title>AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::getGPUVirtualAddress(unsigned int, unsigned int, unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="39.5037%" y="1189" width="0.0335%" height="15" fill="rgb(228,140,14)" fg:x="1178" fg:w="1"/><text x="39.7537%" y="1199.50"></text></g><g><title>IOSurfaceGetSliceCount (1 samples, 0.03%)</title><rect x="39.5037%" y="1173" width="0.0335%" height="15" fill="rgb(217,179,31)" fg:x="1178" fg:w="1"/><text x="39.7537%" y="1183.50"></text></g><g><title>AGX::HAL200::BackgroundObjectProgramVariant* AGX::Device&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::tryFindOrCreateDriverProgramVariant&lt;AGX::HAL200::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::HAL200::BackgroundObjectProgram&gt;(AGX::HAL200::BackgroundObjectProgram*, AGX::BackgroundObjectProgramKey const&amp;, NSArray&lt;id&lt;MTLBinaryArchive&gt;&gt;*) (1 samples, 0.03%)</title><rect x="39.5372%" y="1205" width="0.0335%" height="15" fill="rgb(230,9,30)" fg:x="1179" fg:w="1"/><text x="39.7872%" y="1215.50"></text></g><g><title>AGX::Program&lt;AGX::HAL200::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::HAL200::IndirectArgumentLayout, AGXG16GFamilyIndirectArgumentBufferLayout&gt;::getOrCreateVariantEntry(AGX::BackgroundObjectProgramKey const&amp;, bool&amp;, unsigned long, bool) (1 samples, 0.03%)</title><rect x="39.5372%" y="1189" width="0.0335%" height="15" fill="rgb(230,136,20)" fg:x="1179" fg:w="1"/><text x="39.7872%" y="1199.50"></text></g><g><title>VectorMap&lt;AGX::BackgroundObjectProgramKey, AGX::ProgramVariantEntry&lt;AGX::HAL200::BackgroundObjectProgramVariant&gt;, 4u&gt;::operator[](AGX::BackgroundObjectProgramKey const&amp;) (1 samples, 0.03%)</title><rect x="39.5372%" y="1173" width="0.0335%" height="15" fill="rgb(215,210,22)" fg:x="1179" fg:w="1"/><text x="39.7872%" y="1183.50"></text></g><g><title>AGX::FramebufferGen3_3&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::FramebufferGen3_3(AGXG16GFamilyDevice*, AGX::HAL200::CommandBuffer*, AGX::HAL200::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (9 samples, 0.30%)</title><rect x="39.3025%" y="1237" width="0.3018%" height="15" fill="rgb(218,43,5)" fg:x="1172" fg:w="9"/><text x="39.5525%" y="1247.50"></text></g><g><title>AGX::Framebuffer&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::Framebuffer(AGXG16GFamilyDevice*, AGX::HAL200::CommandBuffer*, AGX::HAL200::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (8 samples, 0.27%)</title><rect x="39.3360%" y="1221" width="0.2683%" height="15" fill="rgb(216,11,5)" fg:x="1173" fg:w="8"/><text x="39.5860%" y="1231.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="39.5708%" y="1205" width="0.0335%" height="15" fill="rgb(209,82,29)" fg:x="1180" fg:w="1"/><text x="39.8208%" y="1215.50"></text></g><g><title>IOGPUMetalCommandBufferStorageAllocResourceAtIndex (2 samples, 0.07%)</title><rect x="39.7049%" y="1205" width="0.0671%" height="15" fill="rgb(244,115,12)" fg:x="1184" fg:w="2"/><text x="39.9549%" y="1215.50"></text></g><g><title>IOGPUMetalResourcePoolCreatePooledResource (1 samples, 0.03%)</title><rect x="39.7384%" y="1189" width="0.0335%" height="15" fill="rgb(222,82,18)" fg:x="1185" fg:w="1"/><text x="39.9884%" y="1199.50"></text></g><g><title>IOGPUMetalCommandBufferStorageBeginSegment (3 samples, 0.10%)</title><rect x="39.7720%" y="1205" width="0.1006%" height="15" fill="rgb(249,227,8)" fg:x="1186" fg:w="3"/><text x="40.0220%" y="1215.50"></text></g><g><title>IOGPUResourceListReset (3 samples, 0.10%)</title><rect x="39.7720%" y="1189" width="0.1006%" height="15" fill="rgb(253,141,45)" fg:x="1186" fg:w="3"/><text x="40.0220%" y="1199.50"></text></g><g><title>_platform_memset (2 samples, 0.07%)</title><rect x="39.8055%" y="1173" width="0.0671%" height="15" fill="rgb(234,184,4)" fg:x="1187" fg:w="2"/><text x="40.0555%" y="1183.50"></text></g><g><title>IOGPUResourceListAddResource (1 samples, 0.03%)</title><rect x="39.8726%" y="1205" width="0.0335%" height="15" fill="rgb(218,194,23)" fg:x="1189" fg:w="1"/><text x="40.1226%" y="1215.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::newCommand(unsigned long) (9 samples, 0.30%)</title><rect x="39.6714%" y="1221" width="0.3018%" height="15" fill="rgb(235,66,41)" fg:x="1183" fg:w="9"/><text x="39.9214%" y="1231.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (2 samples, 0.07%)</title><rect x="39.9061%" y="1205" width="0.0671%" height="15" fill="rgb(245,217,1)" fg:x="1190" fg:w="2"/><text x="40.1561%" y="1215.50"></text></g><g><title>ioGPUResourceListAddHashValue (2 samples, 0.07%)</title><rect x="39.9061%" y="1189" width="0.0671%" height="15" fill="rgb(229,91,1)" fg:x="1190" fg:w="2"/><text x="40.1561%" y="1199.50"></text></g><g><title>AGX::FramebufferGen3_2&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::addGPUResources(IOGPUResourceList*, AGX::HAL200::ResourceGroupUsage&amp;, AGX::Framebuffer&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::ResourceMask) const (1 samples, 0.03%)</title><rect x="39.9732%" y="1221" width="0.0335%" height="15" fill="rgb(207,101,30)" fg:x="1192" fg:w="1"/><text x="40.2232%" y="1231.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::emitBackgroundObjectArguments(IOGPUResourceList*, AGX::HAL200::DataBufferAllocator&amp;, AGX::HAL200::BackgroundObjectProgramVariant const*, AGX::BackgroundObjectArgumentTable&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;&amp;, AGX::BackgroundObjectDriverArgumentTable&amp;) (5 samples, 0.17%)</title><rect x="40.0067%" y="1221" width="0.1677%" height="15" fill="rgb(223,82,49)" fg:x="1193" fg:w="5"/><text x="40.2567%" y="1231.50"></text></g><g><title>_platform_memmove (2 samples, 0.07%)</title><rect x="40.1073%" y="1205" width="0.0671%" height="15" fill="rgb(218,167,17)" fg:x="1196" fg:w="2"/><text x="40.3573%" y="1215.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (46 samples, 1.54%)</title><rect x="38.6653%" y="1269" width="1.5426%" height="15" fill="rgb(208,103,14)" fg:x="1153" fg:w="46"/><text x="38.9153%" y="1279.50"></text></g><g><title>-[AGXG16GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (46 samples, 1.54%)</title><rect x="38.6653%" y="1253" width="1.5426%" height="15" fill="rgb(238,20,8)" fg:x="1153" fg:w="46"/><text x="38.9153%" y="1263.50"></text></g><g><title>AGX::RenderContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::beginRenderPass() (18 samples, 0.60%)</title><rect x="39.6043%" y="1237" width="0.6036%" height="15" fill="rgb(218,80,54)" fg:x="1181" fg:w="18"/><text x="39.8543%" y="1247.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="40.1744%" y="1221" width="0.0335%" height="15" fill="rgb(240,144,17)" fg:x="1198" fg:w="1"/><text x="40.4244%" y="1231.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal colorAttachments] (1 samples, 0.03%)</title><rect x="40.2079%" y="1269" width="0.0335%" height="15" fill="rgb(245,27,50)" fg:x="1199" fg:w="1"/><text x="40.4579%" y="1279.50"></text></g><g><title>-[MTLRenderPassColorAttachmentDescriptorArrayInternal dealloc] (1 samples, 0.03%)</title><rect x="40.2414%" y="1221" width="0.0335%" height="15" fill="rgb(251,51,7)" fg:x="1200" fg:w="1"/><text x="40.4914%" y="1231.50"></text></g><g><title>-[MTLRenderPassColorAttachmentDescriptorInternal dealloc] (1 samples, 0.03%)</title><rect x="40.2414%" y="1205" width="0.0335%" height="15" fill="rgb(245,217,29)" fg:x="1200" fg:w="1"/><text x="40.4914%" y="1215.50"></text></g><g><title>objc_release (1 samples, 0.03%)</title><rect x="40.2414%" y="1189" width="0.0335%" height="15" fill="rgb(221,176,29)" fg:x="1200" fg:w="1"/><text x="40.4914%" y="1199.50"></text></g><g><title>objc_msgSendSuper2 (1 samples, 0.03%)</title><rect x="40.2750%" y="1221" width="0.0335%" height="15" fill="rgb(212,180,24)" fg:x="1201" fg:w="1"/><text x="40.5250%" y="1231.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal dealloc] (3 samples, 0.10%)</title><rect x="40.2414%" y="1237" width="0.1006%" height="15" fill="rgb(254,24,2)" fg:x="1200" fg:w="3"/><text x="40.4914%" y="1247.50"></text></g><g><title>objc_release (1 samples, 0.03%)</title><rect x="40.3085%" y="1221" width="0.0335%" height="15" fill="rgb(230,100,2)" fg:x="1202" fg:w="1"/><text x="40.5585%" y="1231.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (66 samples, 2.21%)</title><rect x="38.1623%" y="1317" width="2.2133%" height="15" fill="rgb(219,142,25)" fg:x="1138" fg:w="66"/><text x="38.4123%" y="1327.50">w..</text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (56 samples, 1.88%)</title><rect x="38.4977%" y="1301" width="1.8779%" height="15" fill="rgb(240,73,43)" fg:x="1148" fg:w="56"/><text x="38.7477%" y="1311.50">w..</text></g><g><title>objc::rc::autorelease::autoreleasepool (56 samples, 1.88%)</title><rect x="38.4977%" y="1285" width="1.8779%" height="15" fill="rgb(214,114,15)" fg:x="1148" fg:w="56"/><text x="38.7477%" y="1295.50">o..</text></g><g><title>objc_autoreleasePoolPop (4 samples, 0.13%)</title><rect x="40.2414%" y="1269" width="0.1341%" height="15" fill="rgb(207,130,4)" fg:x="1200" fg:w="4"/><text x="40.4914%" y="1279.50"></text></g><g><title>AutoreleasePoolPage::releaseUntil(objc_object**) (4 samples, 0.13%)</title><rect x="40.2414%" y="1253" width="0.1341%" height="15" fill="rgb(221,25,40)" fg:x="1200" fg:w="4"/><text x="40.4914%" y="1263.50"></text></g><g><title>objc_release (1 samples, 0.03%)</title><rect x="40.3421%" y="1237" width="0.0335%" height="15" fill="rgb(241,184,7)" fg:x="1203" fg:w="1"/><text x="40.5921%" y="1247.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (1 samples, 0.03%)</title><rect x="40.3756%" y="1317" width="0.0335%" height="15" fill="rgb(235,159,4)" fg:x="1204" fg:w="1"/><text x="40.6256%" y="1327.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.03%)</title><rect x="40.4091%" y="1317" width="0.0335%" height="15" fill="rgb(214,87,48)" fg:x="1205" fg:w="1"/><text x="40.6591%" y="1327.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_single (1 samples, 0.03%)</title><rect x="40.4427%" y="1317" width="0.0335%" height="15" fill="rgb(246,198,24)" fg:x="1206" fg:w="1"/><text x="40.6927%" y="1327.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.03%)</title><rect x="40.4427%" y="1301" width="0.0335%" height="15" fill="rgb(209,66,40)" fg:x="1206" fg:w="1"/><text x="40.6927%" y="1311.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (1 samples, 0.03%)</title><rect x="40.4762%" y="1317" width="0.0335%" height="15" fill="rgb(233,147,39)" fg:x="1207" fg:w="1"/><text x="40.7262%" y="1327.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.03%)</title><rect x="40.4762%" y="1301" width="0.0335%" height="15" fill="rgb(231,145,52)" fg:x="1207" fg:w="1"/><text x="40.7262%" y="1311.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (1 samples, 0.03%)</title><rect x="40.5097%" y="1317" width="0.0335%" height="15" fill="rgb(206,20,26)" fg:x="1208" fg:w="1"/><text x="40.7597%" y="1327.50"></text></g><g><title>-[OS_dispatch_queue release] (1 samples, 0.03%)</title><rect x="40.6103%" y="1205" width="0.0335%" height="15" fill="rgb(238,220,4)" fg:x="1211" fg:w="1"/><text x="40.8603%" y="1215.50"></text></g><g><title>-[OS_object retain] (1 samples, 0.03%)</title><rect x="40.6439%" y="1205" width="0.0335%" height="15" fill="rgb(252,195,42)" fg:x="1212" fg:w="1"/><text x="40.8939%" y="1215.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (14 samples, 0.47%)</title><rect x="40.5768%" y="1221" width="0.4695%" height="15" fill="rgb(209,10,6)" fg:x="1210" fg:w="14"/><text x="40.8268%" y="1231.50"></text></g><g><title>_dispatch_event_loop_poke (11 samples, 0.37%)</title><rect x="40.6774%" y="1205" width="0.3689%" height="15" fill="rgb(229,3,52)" fg:x="1213" fg:w="11"/><text x="40.9274%" y="1215.50"></text></g><g><title>_dispatch_kq_poll (11 samples, 0.37%)</title><rect x="40.6774%" y="1189" width="0.3689%" height="15" fill="rgb(253,49,37)" fg:x="1213" fg:w="11"/><text x="40.9274%" y="1199.50"></text></g><g><title>kevent_id (11 samples, 0.37%)</title><rect x="40.6774%" y="1173" width="0.3689%" height="15" fill="rgb(240,103,49)" fg:x="1213" fg:w="11"/><text x="40.9274%" y="1183.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (15 samples, 0.50%)</title><rect x="40.5768%" y="1237" width="0.5030%" height="15" fill="rgb(250,182,30)" fg:x="1210" fg:w="15"/><text x="40.8268%" y="1247.50"></text></g><g><title>mach_absolute_time (1 samples, 0.03%)</title><rect x="41.0463%" y="1221" width="0.0335%" height="15" fill="rgb(248,8,30)" fg:x="1224" fg:w="1"/><text x="41.2963%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer initWithQueue:retainedReferences:] (18 samples, 0.60%)</title><rect x="40.5433%" y="1269" width="0.6036%" height="15" fill="rgb(237,120,30)" fg:x="1209" fg:w="18"/><text x="40.7933%" y="1279.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (17 samples, 0.57%)</title><rect x="40.5768%" y="1253" width="0.5701%" height="15" fill="rgb(221,146,34)" fg:x="1210" fg:w="17"/><text x="40.8268%" y="1263.50"></text></g><g><title>IOGPUMetalCommandBufferStoragePoolCreateStorage (2 samples, 0.07%)</title><rect x="41.0798%" y="1237" width="0.0671%" height="15" fill="rgb(242,55,13)" fg:x="1225" fg:w="2"/><text x="41.3298%" y="1247.50"></text></g><g><title>_iogpuMetalCommandBufferStorageSetupShmems (2 samples, 0.07%)</title><rect x="41.0798%" y="1221" width="0.0671%" height="15" fill="rgb(242,112,31)" fg:x="1225" fg:w="2"/><text x="41.3298%" y="1231.50"></text></g><g><title>IOGPUMetalCommandBufferStorageBeginKernelCommands (1 samples, 0.03%)</title><rect x="41.1133%" y="1205" width="0.0335%" height="15" fill="rgb(249,192,27)" fg:x="1226" fg:w="1"/><text x="41.3633%" y="1215.50"></text></g><g><title>-[AGXG16GFamilyCommandQueue commandBufferWithUnretainedReferences] (19 samples, 0.64%)</title><rect x="40.5433%" y="1285" width="0.6372%" height="15" fill="rgb(208,204,44)" fg:x="1209" fg:w="19"/><text x="40.7933%" y="1295.50"></text></g><g><title>_objc_rootAllocWithZone (1 samples, 0.03%)</title><rect x="41.1469%" y="1269" width="0.0335%" height="15" fill="rgb(208,93,54)" fg:x="1227" fg:w="1"/><text x="41.3969%" y="1279.50"></text></g><g><title>-[NSPlaceholderString initWithBytes:length:encoding:] (1 samples, 0.03%)</title><rect x="41.1804%" y="1253" width="0.0335%" height="15" fill="rgb(242,1,31)" fg:x="1228" fg:w="1"/><text x="41.4304%" y="1263.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (21 samples, 0.70%)</title><rect x="40.5433%" y="1317" width="0.7042%" height="15" fill="rgb(241,83,25)" fg:x="1209" fg:w="21"/><text x="40.7933%" y="1327.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (21 samples, 0.70%)</title><rect x="40.5433%" y="1301" width="0.7042%" height="15" fill="rgb(205,169,50)" fg:x="1209" fg:w="21"/><text x="40.7933%" y="1311.50"></text></g><g><title>metal::commandbuffer::CommandBufferRef::set_label (2 samples, 0.07%)</title><rect x="41.1804%" y="1285" width="0.0671%" height="15" fill="rgb(239,186,37)" fg:x="1228" fg:w="2"/><text x="41.4304%" y="1295.50"></text></g><g><title>metal::nsstring_from_str (2 samples, 0.07%)</title><rect x="41.1804%" y="1269" width="0.0671%" height="15" fill="rgb(205,221,10)" fg:x="1228" fg:w="2"/><text x="41.4304%" y="1279.50"></text></g><g><title>__CFStringCreateImmutableFunnel3 (1 samples, 0.03%)</title><rect x="41.2140%" y="1253" width="0.0335%" height="15" fill="rgb(218,196,15)" fg:x="1229" fg:w="1"/><text x="41.4640%" y="1263.50"></text></g><g><title>__CFSearchStringROM (1 samples, 0.03%)</title><rect x="41.2140%" y="1237" width="0.0335%" height="15" fill="rgb(218,196,35)" fg:x="1229" fg:w="1"/><text x="41.4640%" y="1247.50"></text></g><g><title>__CFStrHashEightBit2 (1 samples, 0.03%)</title><rect x="41.2140%" y="1221" width="0.0335%" height="15" fill="rgb(233,63,24)" fg:x="1229" fg:w="1"/><text x="41.4640%" y="1231.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (1 samples, 0.03%)</title><rect x="41.2475%" y="1317" width="0.0335%" height="15" fill="rgb(225,8,4)" fg:x="1230" fg:w="1"/><text x="41.4975%" y="1327.50"></text></g><g><title>AGX::RenderContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::setRenderPipelineStateCommon(AGX::HAL200::RenderPipeline const*) (1 samples, 0.03%)</title><rect x="41.2810%" y="1301" width="0.0335%" height="15" fill="rgb(234,105,35)" fg:x="1231" fg:w="1"/><text x="41.5310%" y="1311.50"></text></g><g><title>IOGPUResourceListAddResource (1 samples, 0.03%)</title><rect x="41.2810%" y="1285" width="0.0335%" height="15" fill="rgb(236,21,32)" fg:x="1231" fg:w="1"/><text x="41.5310%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (115 samples, 3.86%)</title><rect x="37.5252%" y="1381" width="3.8565%" height="15" fill="rgb(228,109,6)" fg:x="1119" fg:w="115"/><text x="37.7752%" y="1391.50">core..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (115 samples, 3.86%)</title><rect x="37.5252%" y="1365" width="3.8565%" height="15" fill="rgb(229,215,31)" fg:x="1119" fg:w="115"/><text x="37.7752%" y="1375.50">&lt;T a..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (115 samples, 3.86%)</title><rect x="37.5252%" y="1349" width="3.8565%" height="15" fill="rgb(221,52,54)" fg:x="1119" fg:w="115"/><text x="37.7752%" y="1359.50">&lt;wgp..</text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (115 samples, 3.86%)</title><rect x="37.5252%" y="1333" width="3.8565%" height="15" fill="rgb(252,129,43)" fg:x="1119" fg:w="115"/><text x="37.7752%" y="1343.50">wgpu..</text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (3 samples, 0.10%)</title><rect x="41.2810%" y="1317" width="0.1006%" height="15" fill="rgb(248,183,27)" fg:x="1231" fg:w="3"/><text x="41.5310%" y="1327.50"></text></g><g><title>metal::encoder::RenderCommandEncoderRef::set_triangle_fill_mode (2 samples, 0.07%)</title><rect x="41.3146%" y="1301" width="0.0671%" height="15" fill="rgb(250,0,22)" fg:x="1232" fg:w="2"/><text x="41.5646%" y="1311.50"></text></g><g><title>wgpu::CommandEncoder::begin_render_pass (3 samples, 0.10%)</title><rect x="41.3816%" y="1381" width="0.1006%" height="15" fill="rgb(213,166,10)" fg:x="1234" fg:w="3"/><text x="41.6316%" y="1391.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_begin_render_pass (2 samples, 0.07%)</title><rect x="41.4152%" y="1365" width="0.0671%" height="15" fill="rgb(207,163,36)" fg:x="1235" fg:w="2"/><text x="41.6652%" y="1375.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_begin_render_pass (1 samples, 0.03%)</title><rect x="41.4487%" y="1349" width="0.0335%" height="15" fill="rgb(208,122,22)" fg:x="1236" fg:w="1"/><text x="41.6987%" y="1359.50"></text></g><g><title>wgpu::RenderPass::set_vertex_buffer (1 samples, 0.03%)</title><rect x="41.4822%" y="1381" width="0.0335%" height="15" fill="rgb(207,104,49)" fg:x="1237" fg:w="1"/><text x="41.7322%" y="1391.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_set_vertex_buffer (1 samples, 0.03%)</title><rect x="41.4822%" y="1365" width="0.0335%" height="15" fill="rgb(248,211,50)" fg:x="1237" fg:w="1"/><text x="41.7322%" y="1375.50"></text></g><g><title>wgpu_render_pass_draw (1 samples, 0.03%)</title><rect x="41.5158%" y="1381" width="0.0335%" height="15" fill="rgb(217,13,45)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="41.5158%" y="1365" width="0.0335%" height="15" fill="rgb(211,216,49)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="41.5158%" y="1349" width="0.0335%" height="15" fill="rgb(221,58,53)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1359.50"></text></g><g><title>_realloc (1 samples, 0.03%)</title><rect x="41.5158%" y="1333" width="0.0335%" height="15" fill="rgb(220,112,41)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1343.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="41.5158%" y="1317" width="0.0335%" height="15" fill="rgb(236,38,28)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1327.50"></text></g><g><title>nanov2_realloc (1 samples, 0.03%)</title><rect x="41.5158%" y="1301" width="0.0335%" height="15" fill="rgb(227,195,22)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1311.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="41.5158%" y="1285" width="0.0335%" height="15" fill="rgb(214,55,33)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1295.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="41.5158%" y="1269" width="0.0335%" height="15" fill="rgb(248,80,13)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1279.50"></text></g><g><title>tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="41.5158%" y="1253" width="0.0335%" height="15" fill="rgb(238,52,6)" fg:x="1238" fg:w="1"/><text x="41.7658%" y="1263.50"></text></g><g><title>wgpu_render_pass_set_pipeline (1 samples, 0.03%)</title><rect x="41.5493%" y="1381" width="0.0335%" height="15" fill="rgb(224,198,47)" fg:x="1239" fg:w="1"/><text x="41.7993%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="41.5493%" y="1365" width="0.0335%" height="15" fill="rgb(233,171,20)" fg:x="1239" fg:w="1"/><text x="41.7993%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="41.5493%" y="1349" width="0.0335%" height="15" fill="rgb(241,30,25)" fg:x="1239" fg:w="1"/><text x="41.7993%" y="1359.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="41.5493%" y="1333" width="0.0335%" height="15" fill="rgb(207,171,38)" fg:x="1239" fg:w="1"/><text x="41.7993%" y="1343.50"></text></g><g><title>pixels::renderers::ScalingRenderer::render (122 samples, 4.09%)</title><rect x="37.5252%" y="1397" width="4.0912%" height="15" fill="rgb(234,70,1)" fg:x="1119" fg:w="122"/><text x="37.7752%" y="1407.50">pixe..</text></g><g><title>wgpu_render_pass_set_scissor_rect (1 samples, 0.03%)</title><rect x="41.5828%" y="1381" width="0.0335%" height="15" fill="rgb(232,178,18)" fg:x="1240" fg:w="1"/><text x="41.8328%" y="1391.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="41.6499%" y="1365" width="0.0335%" height="15" fill="rgb(241,78,40)" fg:x="1242" fg:w="1"/><text x="41.8999%" y="1375.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::finalizeScsParameters_impl() (1 samples, 0.03%)</title><rect x="41.7170%" y="1253" width="0.0335%" height="15" fill="rgb(222,35,25)" fg:x="1244" fg:w="1"/><text x="41.9670%" y="1263.50"></text></g><g><title>RaytracingConstantsCommon::ScsLayoutBase&lt;RaytracingConstantsGen1::ScsLayoutGen1&gt;::getSectionEnd(RaytracingConstantsCommon::ScsSection) const (1 samples, 0.03%)</title><rect x="41.7170%" y="1237" width="0.0335%" height="15" fill="rgb(207,92,16)" fg:x="1244" fg:w="1"/><text x="41.9670%" y="1247.50"></text></g><g><title>RaytracingConstantsCommon::ScsLayoutBase&lt;RaytracingConstantsGen1::ScsLayoutGen1&gt;::getSectionEnd(RaytracingConstantsCommon::ScsSection) const (1 samples, 0.03%)</title><rect x="41.7170%" y="1221" width="0.0335%" height="15" fill="rgb(216,59,51)" fg:x="1244" fg:w="1"/><text x="41.9670%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyRenderContext deferredEndEncoding:] (2 samples, 0.07%)</title><rect x="41.7170%" y="1285" width="0.0671%" height="15" fill="rgb(213,80,28)" fg:x="1244" fg:w="2"/><text x="41.9670%" y="1295.50"></text></g><g><title>AGX::RenderContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::endRenderPassCommon(bool, bool, bool, bool, bool) (2 samples, 0.07%)</title><rect x="41.7170%" y="1269" width="0.0671%" height="15" fill="rgb(220,93,7)" fg:x="1244" fg:w="2"/><text x="41.9670%" y="1279.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="41.7505%" y="1253" width="0.0335%" height="15" fill="rgb(225,24,44)" fg:x="1245" fg:w="1"/><text x="42.0005%" y="1263.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer commitEncoder] (3 samples, 0.10%)</title><rect x="41.7170%" y="1301" width="0.1006%" height="15" fill="rgb(243,74,40)" fg:x="1244" fg:w="3"/><text x="41.9670%" y="1311.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="41.7840%" y="1285" width="0.0335%" height="15" fill="rgb(228,39,7)" fg:x="1246" fg:w="1"/><text x="42.0340%" y="1295.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer gtpContinuePreParse] (1 samples, 0.03%)</title><rect x="41.8176%" y="1301" width="0.0335%" height="15" fill="rgb(227,79,8)" fg:x="1247" fg:w="1"/><text x="42.0676%" y="1311.50"></text></g><g><title>_dispatch_event_loop_poke (3 samples, 0.10%)</title><rect x="41.8511%" y="1237" width="0.1006%" height="15" fill="rgb(236,58,11)" fg:x="1248" fg:w="3"/><text x="42.1011%" y="1247.50"></text></g><g><title>_dispatch_kq_poll (3 samples, 0.10%)</title><rect x="41.8511%" y="1221" width="0.1006%" height="15" fill="rgb(249,63,35)" fg:x="1248" fg:w="3"/><text x="42.1011%" y="1231.50"></text></g><g><title>kevent_id (3 samples, 0.10%)</title><rect x="41.8511%" y="1205" width="0.1006%" height="15" fill="rgb(252,114,16)" fg:x="1248" fg:w="3"/><text x="42.1011%" y="1215.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCommit:commitTime:] (4 samples, 0.13%)</title><rect x="41.8511%" y="1269" width="0.1341%" height="15" fill="rgb(254,151,24)" fg:x="1248" fg:w="4"/><text x="42.1011%" y="1279.50"></text></g><g><title>+[FPCAMetalLayerState _updateCommandBufferState:block:] (4 samples, 0.13%)</title><rect x="41.8511%" y="1253" width="0.1341%" height="15" fill="rgb(253,54,39)" fg:x="1248" fg:w="4"/><text x="42.1011%" y="1263.50"></text></g><g><title>dispatch_async (1 samples, 0.03%)</title><rect x="41.9517%" y="1237" width="0.0335%" height="15" fill="rgb(243,25,45)" fg:x="1251" fg:w="1"/><text x="42.2017%" y="1247.50"></text></g><g><title>_dispatch_Block_copy (1 samples, 0.03%)</title><rect x="41.9517%" y="1221" width="0.0335%" height="15" fill="rgb(234,134,9)" fg:x="1251" fg:w="1"/><text x="42.2017%" y="1231.50"></text></g><g><title>_Block_copy (1 samples, 0.03%)</title><rect x="41.9517%" y="1205" width="0.0335%" height="15" fill="rgb(227,166,31)" fg:x="1251" fg:w="1"/><text x="42.2017%" y="1215.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="41.9517%" y="1189" width="0.0335%" height="15" fill="rgb(245,143,41)" fg:x="1251" fg:w="1"/><text x="42.2017%" y="1199.50"></text></g><g><title>-[_MTLCommandBuffer commit] (5 samples, 0.17%)</title><rect x="41.8511%" y="1285" width="0.1677%" height="15" fill="rgb(238,181,32)" fg:x="1248" fg:w="5"/><text x="42.1011%" y="1295.50"></text></g><g><title>-[_MTLCommandQueue enqueueCommandBuffer:] (1 samples, 0.03%)</title><rect x="41.9852%" y="1269" width="0.0335%" height="15" fill="rgb(224,113,18)" fg:x="1252" fg:w="1"/><text x="42.2352%" y="1279.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.03%)</title><rect x="41.9852%" y="1253" width="0.0335%" height="15" fill="rgb(240,229,28)" fg:x="1252" fg:w="1"/><text x="42.2352%" y="1263.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.03%)</title><rect x="41.9852%" y="1237" width="0.0335%" height="15" fill="rgb(250,185,3)" fg:x="1252" fg:w="1"/><text x="42.2352%" y="1247.50"></text></g><g><title>__psynch_mutexwait (1 samples, 0.03%)</title><rect x="41.9852%" y="1221" width="0.0335%" height="15" fill="rgb(212,59,25)" fg:x="1252" fg:w="1"/><text x="42.2352%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer commit] (12 samples, 0.40%)</title><rect x="41.7170%" y="1317" width="0.4024%" height="15" fill="rgb(221,87,20)" fg:x="1244" fg:w="12"/><text x="41.9670%" y="1327.50"></text></g><g><title>-[IOGPUMetalCommandBuffer commit] (8 samples, 0.27%)</title><rect x="41.8511%" y="1301" width="0.2683%" height="15" fill="rgb(213,74,28)" fg:x="1248" fg:w="8"/><text x="42.1011%" y="1311.50"></text></g><g><title>-[_MTLCommandQueue commitCommandBuffer:wake:] (3 samples, 0.10%)</title><rect x="42.0188%" y="1285" width="0.1006%" height="15" fill="rgb(224,132,34)" fg:x="1253" fg:w="3"/><text x="42.2688%" y="1295.50"></text></g><g><title>dispatch_source_merge_data (3 samples, 0.10%)</title><rect x="42.0188%" y="1269" width="0.1006%" height="15" fill="rgb(222,101,24)" fg:x="1253" fg:w="3"/><text x="42.2688%" y="1279.50"></text></g><g><title>_dispatch_event_loop_poke (3 samples, 0.10%)</title><rect x="42.0188%" y="1253" width="0.1006%" height="15" fill="rgb(254,142,4)" fg:x="1253" fg:w="3"/><text x="42.2688%" y="1263.50"></text></g><g><title>_dispatch_kq_poll (3 samples, 0.10%)</title><rect x="42.0188%" y="1237" width="0.1006%" height="15" fill="rgb(230,229,49)" fg:x="1253" fg:w="3"/><text x="42.2688%" y="1247.50"></text></g><g><title>kevent_id (3 samples, 0.10%)</title><rect x="42.0188%" y="1221" width="0.1006%" height="15" fill="rgb(238,70,47)" fg:x="1253" fg:w="3"/><text x="42.2688%" y="1231.50"></text></g><g><title>-[_MTLCommandBuffer status] (1 samples, 0.03%)</title><rect x="42.1194%" y="1317" width="0.0335%" height="15" fill="rgb(231,160,17)" fg:x="1256" fg:w="1"/><text x="42.3694%" y="1327.50"></text></g><g><title>&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (14 samples, 0.47%)</title><rect x="41.7170%" y="1349" width="0.4695%" height="15" fill="rgb(218,68,53)" fg:x="1244" fg:w="14"/><text x="41.9670%" y="1359.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (14 samples, 0.47%)</title><rect x="41.7170%" y="1333" width="0.4695%" height="15" fill="rgb(236,111,10)" fg:x="1244" fg:w="14"/><text x="41.9670%" y="1343.50"></text></g><g><title>_Block_copy (1 samples, 0.03%)</title><rect x="42.1529%" y="1317" width="0.0335%" height="15" fill="rgb(224,34,41)" fg:x="1257" fg:w="1"/><text x="42.4029%" y="1327.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="42.1529%" y="1301" width="0.0335%" height="15" fill="rgb(241,118,19)" fg:x="1257" fg:w="1"/><text x="42.4029%" y="1311.50"></text></g><g><title>nanov2_allocate_outlined (1 samples, 0.03%)</title><rect x="42.1529%" y="1285" width="0.0335%" height="15" fill="rgb(238,129,25)" fg:x="1257" fg:w="1"/><text x="42.4029%" y="1295.50"></text></g><g><title>nanov2_find_block_and_allocate (1 samples, 0.03%)</title><rect x="42.1529%" y="1269" width="0.0335%" height="15" fill="rgb(238,22,31)" fg:x="1257" fg:w="1"/><text x="42.4029%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="42.1865%" y="1349" width="0.0335%" height="15" fill="rgb(222,174,48)" fg:x="1258" fg:w="1"/><text x="42.4365%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="42.1865%" y="1333" width="0.0335%" height="15" fill="rgb(206,152,40)" fg:x="1258" fg:w="1"/><text x="42.4365%" y="1343.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="42.1865%" y="1317" width="0.0335%" height="15" fill="rgb(218,99,54)" fg:x="1258" fg:w="1"/><text x="42.4365%" y="1327.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.03%)</title><rect x="42.1865%" y="1301" width="0.0335%" height="15" fill="rgb(220,174,26)" fg:x="1258" fg:w="1"/><text x="42.4365%" y="1311.50"></text></g><g><title>rack_get_thread_index (1 samples, 0.03%)</title><rect x="42.1865%" y="1285" width="0.0335%" height="15" fill="rgb(245,116,9)" fg:x="1258" fg:w="1"/><text x="42.4365%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.03%)</title><rect x="42.2200%" y="1349" width="0.0335%" height="15" fill="rgb(209,72,35)" fg:x="1259" fg:w="1"/><text x="42.4700%" y="1359.50"></text></g><g><title>__rustc::__rust_dealloc (1 samples, 0.03%)</title><rect x="42.2200%" y="1333" width="0.0335%" height="15" fill="rgb(226,126,21)" fg:x="1259" fg:w="1"/><text x="42.4700%" y="1343.50"></text></g><g><title>wgpu_core::command::memory_init::_&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_texture_memory (1 samples, 0.03%)</title><rect x="42.2535%" y="1349" width="0.0335%" height="15" fill="rgb(227,192,1)" fg:x="1260" fg:w="1"/><text x="42.5035%" y="1359.50"></text></g><g><title>_CFRelease (1 samples, 0.03%)</title><rect x="42.3541%" y="1253" width="0.0335%" height="15" fill="rgb(237,180,29)" fg:x="1263" fg:w="1"/><text x="42.6041%" y="1263.50"></text></g><g><title>_nanov2_free (1 samples, 0.03%)</title><rect x="42.3541%" y="1237" width="0.0335%" height="15" fill="rgb(230,197,35)" fg:x="1263" fg:w="1"/><text x="42.6041%" y="1247.50"></text></g><g><title>-[IOGPUMetalCommandBuffer dealloc] (2 samples, 0.07%)</title><rect x="42.3541%" y="1301" width="0.0671%" height="15" fill="rgb(246,193,31)" fg:x="1263" fg:w="2"/><text x="42.6041%" y="1311.50"></text></g><g><title>-[_MTLCommandBuffer dealloc] (2 samples, 0.07%)</title><rect x="42.3541%" y="1285" width="0.0671%" height="15" fill="rgb(241,36,4)" fg:x="1263" fg:w="2"/><text x="42.6041%" y="1295.50"></text></g><g><title>-[_MTLObjectWithLabel dealloc] (2 samples, 0.07%)</title><rect x="42.3541%" y="1269" width="0.0671%" height="15" fill="rgb(241,130,17)" fg:x="1263" fg:w="2"/><text x="42.6041%" y="1279.50"></text></g><g><title>objc_retain_x28 (1 samples, 0.03%)</title><rect x="42.3877%" y="1253" width="0.0335%" height="15" fill="rgb(206,137,32)" fg:x="1264" fg:w="1"/><text x="42.6377%" y="1263.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer dealloc] (4 samples, 0.13%)</title><rect x="42.3206%" y="1317" width="0.1341%" height="15" fill="rgb(237,228,51)" fg:x="1262" fg:w="4"/><text x="42.5706%" y="1327.50"></text></g><g><title>nanov2_try_free_default (1 samples, 0.03%)</title><rect x="42.4212%" y="1301" width="0.0335%" height="15" fill="rgb(243,6,42)" fg:x="1265" fg:w="1"/><text x="42.6712%" y="1311.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (6 samples, 0.20%)</title><rect x="42.2871%" y="1333" width="0.2012%" height="15" fill="rgb(251,74,28)" fg:x="1261" fg:w="6"/><text x="42.5371%" y="1343.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="42.4547%" y="1317" width="0.0335%" height="15" fill="rgb(218,20,49)" fg:x="1266" fg:w="1"/><text x="42.7047%" y="1327.50"></text></g><g><title>_objc_rootDealloc (1 samples, 0.03%)</title><rect x="42.4883%" y="1237" width="0.0335%" height="15" fill="rgb(238,28,14)" fg:x="1267" fg:w="1"/><text x="42.7383%" y="1247.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (1 samples, 0.03%)</title><rect x="42.4883%" y="1221" width="0.0335%" height="15" fill="rgb(229,40,46)" fg:x="1267" fg:w="1"/><text x="42.7383%" y="1231.50"></text></g><g><title>objc_object::clearDeallocating_slow() (1 samples, 0.03%)</title><rect x="42.4883%" y="1205" width="0.0335%" height="15" fill="rgb(244,195,20)" fg:x="1267" fg:w="1"/><text x="42.7383%" y="1215.50"></text></g><g><title>weak_clear_no_lock (1 samples, 0.03%)</title><rect x="42.4883%" y="1189" width="0.0335%" height="15" fill="rgb(253,56,35)" fg:x="1267" fg:w="1"/><text x="42.7383%" y="1199.50"></text></g><g><title>weak_entry_for_referent(weak_table_t*, objc_object*) (1 samples, 0.03%)</title><rect x="42.4883%" y="1173" width="0.0335%" height="15" fill="rgb(210,149,44)" fg:x="1267" fg:w="1"/><text x="42.7383%" y="1183.50"></text></g><g><title>-[_MTLObjectWithLabel dealloc] (2 samples, 0.07%)</title><rect x="42.4883%" y="1253" width="0.0671%" height="15" fill="rgb(240,135,12)" fg:x="1267" fg:w="2"/><text x="42.7383%" y="1263.50"></text></g><g><title>free_tiny (1 samples, 0.03%)</title><rect x="42.5218%" y="1237" width="0.0335%" height="15" fill="rgb(251,24,50)" fg:x="1268" fg:w="1"/><text x="42.7718%" y="1247.50"></text></g><g><title>CFGetAllocator (1 samples, 0.03%)</title><rect x="42.5553%" y="1237" width="0.0335%" height="15" fill="rgb(243,200,47)" fg:x="1269" fg:w="1"/><text x="42.8053%" y="1247.50"></text></g><g><title>__CFCheckCFInfoPACSignature_Bridged (1 samples, 0.03%)</title><rect x="42.5553%" y="1221" width="0.0335%" height="15" fill="rgb(224,166,26)" fg:x="1269" fg:w="1"/><text x="42.8053%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyBuffer dealloc] (28 samples, 0.94%)</title><rect x="42.4883%" y="1317" width="0.9390%" height="15" fill="rgb(233,0,47)" fg:x="1267" fg:w="28"/><text x="42.7383%" y="1327.50"></text></g><g><title>-[AGXBuffer dealloc] (28 samples, 0.94%)</title><rect x="42.4883%" y="1301" width="0.9390%" height="15" fill="rgb(253,80,5)" fg:x="1267" fg:w="28"/><text x="42.7383%" y="1311.50"></text></g><g><title>-[IOGPUMetalBuffer dealloc] (28 samples, 0.94%)</title><rect x="42.4883%" y="1285" width="0.9390%" height="15" fill="rgb(214,133,25)" fg:x="1267" fg:w="28"/><text x="42.7383%" y="1295.50"></text></g><g><title>-[IOGPUMetalResource dealloc] (28 samples, 0.94%)</title><rect x="42.4883%" y="1269" width="0.9390%" height="15" fill="rgb(209,27,14)" fg:x="1267" fg:w="28"/><text x="42.7383%" y="1279.50"></text></g><g><title>_CFRelease (26 samples, 0.87%)</title><rect x="42.5553%" y="1253" width="0.8719%" height="15" fill="rgb(219,102,51)" fg:x="1269" fg:w="26"/><text x="42.8053%" y="1263.50"></text></g><g><title>ioGPUResourceFinalize (25 samples, 0.84%)</title><rect x="42.5889%" y="1237" width="0.8384%" height="15" fill="rgb(237,18,16)" fg:x="1270" fg:w="25"/><text x="42.8389%" y="1247.50"></text></g><g><title>iokit_user_client_trap (25 samples, 0.84%)</title><rect x="42.5889%" y="1221" width="0.8384%" height="15" fill="rgb(241,85,17)" fg:x="1270" fg:w="25"/><text x="42.8389%" y="1231.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (29 samples, 0.97%)</title><rect x="42.4883%" y="1333" width="0.9725%" height="15" fill="rgb(236,90,42)" fg:x="1267" fg:w="29"/><text x="42.7383%" y="1343.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="43.4272%" y="1317" width="0.0335%" height="15" fill="rgb(249,57,21)" fg:x="1295" fg:w="1"/><text x="43.6772%" y="1327.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (36 samples, 1.21%)</title><rect x="42.2871%" y="1349" width="1.2072%" height="15" fill="rgb(243,12,36)" fg:x="1261" fg:w="36"/><text x="42.5371%" y="1359.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::extend (1 samples, 0.03%)</title><rect x="43.4608%" y="1333" width="0.0335%" height="15" fill="rgb(253,128,47)" fg:x="1296" fg:w="1"/><text x="43.7108%" y="1343.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="43.4608%" y="1317" width="0.0335%" height="15" fill="rgb(207,33,20)" fg:x="1296" fg:w="1"/><text x="43.7108%" y="1327.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.03%)</title><rect x="43.4943%" y="1349" width="0.0335%" height="15" fill="rgb(233,215,35)" fg:x="1297" fg:w="1"/><text x="43.7443%" y="1359.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (1 samples, 0.03%)</title><rect x="43.5278%" y="1349" width="0.0335%" height="15" fill="rgb(249,188,52)" fg:x="1298" fg:w="1"/><text x="43.7778%" y="1359.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.13%)</title><rect x="43.5614%" y="1269" width="0.1341%" height="15" fill="rgb(225,12,32)" fg:x="1299" fg:w="4"/><text x="43.8114%" y="1279.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (4 samples, 0.13%)</title><rect x="43.5614%" y="1253" width="0.1341%" height="15" fill="rgb(247,98,14)" fg:x="1299" fg:w="4"/><text x="43.8114%" y="1263.50"></text></g><g><title>_dispatch_event_loop_poke (4 samples, 0.13%)</title><rect x="43.5614%" y="1237" width="0.1341%" height="15" fill="rgb(247,219,48)" fg:x="1299" fg:w="4"/><text x="43.8114%" y="1247.50"></text></g><g><title>_dispatch_kq_poll (4 samples, 0.13%)</title><rect x="43.5614%" y="1221" width="0.1341%" height="15" fill="rgb(253,60,48)" fg:x="1299" fg:w="4"/><text x="43.8114%" y="1231.50"></text></g><g><title>kevent_id (4 samples, 0.13%)</title><rect x="43.5614%" y="1205" width="0.1341%" height="15" fill="rgb(245,15,52)" fg:x="1299" fg:w="4"/><text x="43.8114%" y="1215.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (5 samples, 0.17%)</title><rect x="43.5614%" y="1285" width="0.1677%" height="15" fill="rgb(220,133,28)" fg:x="1299" fg:w="5"/><text x="43.8114%" y="1295.50"></text></g><g><title>IOGPUMetalCommandBufferStoragePoolCreateStorage (1 samples, 0.03%)</title><rect x="43.6955%" y="1269" width="0.0335%" height="15" fill="rgb(217,180,4)" fg:x="1303" fg:w="1"/><text x="43.9455%" y="1279.50"></text></g><g><title>_iogpuMetalCommandBufferStorageSetupShmems (1 samples, 0.03%)</title><rect x="43.6955%" y="1253" width="0.0335%" height="15" fill="rgb(251,24,1)" fg:x="1303" fg:w="1"/><text x="43.9455%" y="1263.50"></text></g><g><title>IOGPUMetalDeviceShmemPoolCreateShmem (1 samples, 0.03%)</title><rect x="43.6955%" y="1237" width="0.0335%" height="15" fill="rgb(212,185,49)" fg:x="1303" fg:w="1"/><text x="43.9455%" y="1247.50"></text></g><g><title>objc_retain (1 samples, 0.03%)</title><rect x="43.6955%" y="1221" width="0.0335%" height="15" fill="rgb(215,175,22)" fg:x="1303" fg:w="1"/><text x="43.9455%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer initWithQueue:retainedReferences:] (6 samples, 0.20%)</title><rect x="43.5614%" y="1301" width="0.2012%" height="15" fill="rgb(250,205,14)" fg:x="1299" fg:w="6"/><text x="43.8114%" y="1311.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="43.7290%" y="1285" width="0.0335%" height="15" fill="rgb(225,211,22)" fg:x="1304" fg:w="1"/><text x="43.9790%" y="1295.50"></text></g><g><title>wgpu::Queue::submit (65 samples, 2.18%)</title><rect x="41.6164%" y="1397" width="2.1797%" height="15" fill="rgb(251,179,42)" fg:x="1241" fg:w="65"/><text x="41.8664%" y="1407.50">w..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (65 samples, 2.18%)</title><rect x="41.6164%" y="1381" width="2.1797%" height="15" fill="rgb(208,216,51)" fg:x="1241" fg:w="65"/><text x="41.8664%" y="1391.50">&lt;..</text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (63 samples, 2.11%)</title><rect x="41.6834%" y="1365" width="2.1127%" height="15" fill="rgb(235,36,11)" fg:x="1243" fg:w="63"/><text x="41.9334%" y="1375.50">w..</text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (7 samples, 0.23%)</title><rect x="43.5614%" y="1349" width="0.2347%" height="15" fill="rgb(213,189,28)" fg:x="1299" fg:w="7"/><text x="43.8114%" y="1359.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (7 samples, 0.23%)</title><rect x="43.5614%" y="1333" width="0.2347%" height="15" fill="rgb(227,203,42)" fg:x="1299" fg:w="7"/><text x="43.8114%" y="1343.50"></text></g><g><title>-[AGXG16GFamilyCommandQueue commandBufferWithUnretainedReferences] (7 samples, 0.23%)</title><rect x="43.5614%" y="1317" width="0.2347%" height="15" fill="rgb(244,72,36)" fg:x="1299" fg:w="7"/><text x="43.8114%" y="1327.50"></text></g><g><title>_objc_rootAllocWithZone (1 samples, 0.03%)</title><rect x="43.7626%" y="1301" width="0.0335%" height="15" fill="rgb(213,53,17)" fg:x="1305" fg:w="1"/><text x="44.0126%" y="1311.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="43.7626%" y="1285" width="0.0335%" height="15" fill="rgb(207,167,3)" fg:x="1305" fg:w="1"/><text x="44.0126%" y="1295.50"></text></g><g><title>tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="43.7626%" y="1269" width="0.0335%" height="15" fill="rgb(216,98,30)" fg:x="1305" fg:w="1"/><text x="44.0126%" y="1279.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (2 samples, 0.07%)</title><rect x="43.8296%" y="1333" width="0.0671%" height="15" fill="rgb(236,123,15)" fg:x="1307" fg:w="2"/><text x="44.0796%" y="1343.50"></text></g><g><title>_platform_memmove (547 samples, 18.34%)</title><rect x="43.8967%" y="1333" width="18.3434%" height="15" fill="rgb(248,81,50)" fg:x="1309" fg:w="547"/><text x="44.1467%" y="1343.50">_platform_memmove</text></g><g><title>wgpu_types::Extent3d::physical_size (1 samples, 0.03%)</title><rect x="62.2401%" y="1317" width="0.0335%" height="15" fill="rgb(214,120,4)" fg:x="1856" fg:w="1"/><text x="62.4901%" y="1327.50"></text></g><g><title>wgpu_types::TextureFormat::block_dimensions (1 samples, 0.03%)</title><rect x="62.2401%" y="1301" width="0.0335%" height="15" fill="rgb(208,179,34)" fg:x="1856" fg:w="1"/><text x="62.4901%" y="1311.50"></text></g><g><title>wgpu_core::command::transfer::validate_texture_copy_range (2 samples, 0.07%)</title><rect x="62.2401%" y="1333" width="0.0671%" height="15" fill="rgb(227,140,7)" fg:x="1856" fg:w="2"/><text x="62.4901%" y="1343.50"></text></g><g><title>wgpu_types::TextureFormat::block_dimensions (1 samples, 0.03%)</title><rect x="62.2736%" y="1317" width="0.0335%" height="15" fill="rgb(214,22,6)" fg:x="1857" fg:w="1"/><text x="62.5236%" y="1327.50"></text></g><g><title>-[AGXG16GFamilyDevice alertCommandBufferActivityStart] (1 samples, 0.03%)</title><rect x="62.3407%" y="1253" width="0.0335%" height="15" fill="rgb(207,137,27)" fg:x="1859" fg:w="1"/><text x="62.5907%" y="1263.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (1 samples, 0.03%)</title><rect x="62.3742%" y="1221" width="0.0335%" height="15" fill="rgb(210,8,46)" fg:x="1860" fg:w="1"/><text x="62.6242%" y="1231.50"></text></g><g><title>_dispatch_event_loop_poke (1 samples, 0.03%)</title><rect x="62.3742%" y="1205" width="0.0335%" height="15" fill="rgb(240,16,54)" fg:x="1860" fg:w="1"/><text x="62.6242%" y="1215.50"></text></g><g><title>_dispatch_kq_poll (1 samples, 0.03%)</title><rect x="62.3742%" y="1189" width="0.0335%" height="15" fill="rgb(211,209,29)" fg:x="1860" fg:w="1"/><text x="62.6242%" y="1199.50"></text></g><g><title>kevent_id (1 samples, 0.03%)</title><rect x="62.3742%" y="1173" width="0.0335%" height="15" fill="rgb(226,228,24)" fg:x="1860" fg:w="1"/><text x="62.6242%" y="1183.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.07%)</title><rect x="62.3742%" y="1237" width="0.0671%" height="15" fill="rgb(222,84,9)" fg:x="1860" fg:w="2"/><text x="62.6242%" y="1247.50"></text></g><g><title>-[_MTLDevice commandBufferErrorOptions] (1 samples, 0.03%)</title><rect x="62.4078%" y="1221" width="0.0335%" height="15" fill="rgb(234,203,30)" fg:x="1861" fg:w="1"/><text x="62.6578%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer initWithQueue:retainedReferences:] (6 samples, 0.20%)</title><rect x="62.3072%" y="1269" width="0.2012%" height="15" fill="rgb(238,109,14)" fg:x="1858" fg:w="6"/><text x="62.5572%" y="1279.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.13%)</title><rect x="62.3742%" y="1253" width="0.1341%" height="15" fill="rgb(233,206,34)" fg:x="1860" fg:w="4"/><text x="62.6242%" y="1263.50"></text></g><g><title>IOGPUMetalCommandBufferStoragePoolCreateStorage (2 samples, 0.07%)</title><rect x="62.4413%" y="1237" width="0.0671%" height="15" fill="rgb(220,167,47)" fg:x="1862" fg:w="2"/><text x="62.6913%" y="1247.50"></text></g><g><title>MTLResourceListRelease (2 samples, 0.07%)</title><rect x="62.4413%" y="1221" width="0.0671%" height="15" fill="rgb(238,105,10)" fg:x="1862" fg:w="2"/><text x="62.6913%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyCommandQueue commandBufferWithUnretainedReferences] (7 samples, 0.23%)</title><rect x="62.3072%" y="1285" width="0.2347%" height="15" fill="rgb(213,227,17)" fg:x="1858" fg:w="7"/><text x="62.5572%" y="1295.50"></text></g><g><title>_objc_rootAllocWithZone (1 samples, 0.03%)</title><rect x="62.5084%" y="1269" width="0.0335%" height="15" fill="rgb(217,132,38)" fg:x="1864" fg:w="1"/><text x="62.7584%" y="1279.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="62.5084%" y="1253" width="0.0335%" height="15" fill="rgb(242,146,4)" fg:x="1864" fg:w="1"/><text x="62.7584%" y="1263.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="62.5084%" y="1237" width="0.0335%" height="15" fill="rgb(212,61,9)" fg:x="1864" fg:w="1"/><text x="62.7584%" y="1247.50"></text></g><g><title>tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="62.5084%" y="1221" width="0.0335%" height="15" fill="rgb(247,126,22)" fg:x="1864" fg:w="1"/><text x="62.7584%" y="1231.50"></text></g><g><title>metal::commandqueue::CommandQueueRef::new_command_buffer_with_unretained_references (1 samples, 0.03%)</title><rect x="62.5419%" y="1285" width="0.0335%" height="15" fill="rgb(220,196,2)" fg:x="1865" fg:w="1"/><text x="62.7919%" y="1295.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (9 samples, 0.30%)</title><rect x="62.3072%" y="1333" width="0.3018%" height="15" fill="rgb(208,46,4)" fg:x="1858" fg:w="9"/><text x="62.5572%" y="1343.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (9 samples, 0.30%)</title><rect x="62.3072%" y="1317" width="0.3018%" height="15" fill="rgb(252,104,46)" fg:x="1858" fg:w="9"/><text x="62.5572%" y="1327.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (9 samples, 0.30%)</title><rect x="62.3072%" y="1301" width="0.3018%" height="15" fill="rgb(237,152,48)" fg:x="1858" fg:w="9"/><text x="62.5572%" y="1311.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="62.5755%" y="1285" width="0.0335%" height="15" fill="rgb(221,59,37)" fg:x="1866" fg:w="1"/><text x="62.8255%" y="1295.50"></text></g><g><title>IOConnectCallMethod (90 samples, 3.02%)</title><rect x="62.6761%" y="1189" width="3.0181%" height="15" fill="rgb(209,202,51)" fg:x="1869" fg:w="90"/><text x="62.9261%" y="1199.50">IOC..</text></g><g><title>io_connect_method (89 samples, 2.98%)</title><rect x="62.7096%" y="1173" width="2.9846%" height="15" fill="rgb(228,81,30)" fg:x="1870" fg:w="89"/><text x="62.9596%" y="1183.50">io_..</text></g><g><title>mach_msg2_internal (89 samples, 2.98%)</title><rect x="62.7096%" y="1157" width="2.9846%" height="15" fill="rgb(227,42,39)" fg:x="1870" fg:w="89"/><text x="62.9596%" y="1167.50">mac..</text></g><g><title>mach_msg2_trap (89 samples, 2.98%)</title><rect x="62.7096%" y="1141" width="2.9846%" height="15" fill="rgb(221,26,2)" fg:x="1870" fg:w="89"/><text x="62.9596%" y="1151.50">mac..</text></g><g><title>IOGPUResourceCreate (92 samples, 3.09%)</title><rect x="62.6425%" y="1205" width="3.0852%" height="15" fill="rgb(254,61,31)" fg:x="1868" fg:w="92"/><text x="62.8925%" y="1215.50">IOG..</text></g><g><title>_CFRuntimeCreateInstance (1 samples, 0.03%)</title><rect x="65.6942%" y="1189" width="0.0335%" height="15" fill="rgb(222,173,38)" fg:x="1959" fg:w="1"/><text x="65.9442%" y="1199.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (93 samples, 3.12%)</title><rect x="62.6425%" y="1221" width="3.1187%" height="15" fill="rgb(218,50,12)" fg:x="1868" fg:w="93"/><text x="62.8925%" y="1231.50">-[I..</text></g><g><title>objc_storeWeak (1 samples, 0.03%)</title><rect x="65.7277%" y="1205" width="0.0335%" height="15" fill="rgb(223,88,40)" fg:x="1960" fg:w="1"/><text x="65.9777%" y="1215.50"></text></g><g><title>weak_register_no_lock (1 samples, 0.03%)</title><rect x="65.7277%" y="1189" width="0.0335%" height="15" fill="rgb(237,54,19)" fg:x="1960" fg:w="1"/><text x="65.9777%" y="1199.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (95 samples, 3.19%)</title><rect x="62.6090%" y="1285" width="3.1858%" height="15" fill="rgb(251,129,25)" fg:x="1867" fg:w="95"/><text x="62.8590%" y="1295.50">-[A..</text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (94 samples, 3.15%)</title><rect x="62.6425%" y="1269" width="3.1522%" height="15" fill="rgb(238,97,19)" fg:x="1868" fg:w="94"/><text x="62.8925%" y="1279.50">-[A..</text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (94 samples, 3.15%)</title><rect x="62.6425%" y="1253" width="3.1522%" height="15" fill="rgb(240,169,18)" fg:x="1868" fg:w="94"/><text x="62.8925%" y="1263.50">-[A..</text></g><g><title>-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:gpuTag:args:argsSize:deallocator:] (94 samples, 3.15%)</title><rect x="62.6425%" y="1237" width="3.1522%" height="15" fill="rgb(230,187,49)" fg:x="1868" fg:w="94"/><text x="62.8925%" y="1247.50">-[I..</text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="65.7612%" y="1221" width="0.0335%" height="15" fill="rgb(209,44,26)" fg:x="1961" fg:w="1"/><text x="66.0112%" y="1231.50"></text></g><g><title>-[IOGPUMetalResource setLabel:] (1 samples, 0.03%)</title><rect x="65.7948%" y="1285" width="0.0335%" height="15" fill="rgb(244,0,6)" fg:x="1962" fg:w="1"/><text x="66.0448%" y="1295.50"></text></g><g><title>-[__NSCFString copy] (1 samples, 0.03%)</title><rect x="65.7948%" y="1269" width="0.0335%" height="15" fill="rgb(248,18,21)" fg:x="1962" fg:w="1"/><text x="66.0448%" y="1279.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (99 samples, 3.32%)</title><rect x="62.6090%" y="1333" width="3.3199%" height="15" fill="rgb(245,180,19)" fg:x="1867" fg:w="99"/><text x="62.8590%" y="1343.50">wgp..</text></g><g><title>wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (99 samples, 3.32%)</title><rect x="62.6090%" y="1317" width="3.3199%" height="15" fill="rgb(252,118,36)" fg:x="1867" fg:w="99"/><text x="62.8590%" y="1327.50">wgp..</text></g><g><title>objc::rc::autorelease::autoreleasepool (99 samples, 3.32%)</title><rect x="62.6090%" y="1301" width="3.3199%" height="15" fill="rgb(210,224,19)" fg:x="1867" fg:w="99"/><text x="62.8590%" y="1311.50">obj..</text></g><g><title>metal::resource::ResourceRef::set_label (3 samples, 0.10%)</title><rect x="65.8283%" y="1285" width="0.1006%" height="15" fill="rgb(218,30,24)" fg:x="1963" fg:w="3"/><text x="66.0783%" y="1295.50"></text></g><g><title>metal::nsstring_from_str (3 samples, 0.10%)</title><rect x="65.8283%" y="1269" width="0.1006%" height="15" fill="rgb(219,75,50)" fg:x="1963" fg:w="3"/><text x="66.0783%" y="1279.50"></text></g><g><title>__CFStringCreateImmutableFunnel3 (3 samples, 0.10%)</title><rect x="65.8283%" y="1253" width="0.1006%" height="15" fill="rgb(234,72,50)" fg:x="1963" fg:w="3"/><text x="66.0783%" y="1263.50"></text></g><g><title>__CFSearchStringROM (2 samples, 0.07%)</title><rect x="65.8618%" y="1237" width="0.0671%" height="15" fill="rgb(219,100,48)" fg:x="1964" fg:w="2"/><text x="66.1118%" y="1247.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_single (1 samples, 0.03%)</title><rect x="65.9289%" y="1333" width="0.0335%" height="15" fill="rgb(253,5,41)" fg:x="1966" fg:w="1"/><text x="66.1789%" y="1343.50"></text></g><g><title>0x10006ea7fff (1 samples, 0.03%)</title><rect x="65.9960%" y="1269" width="0.0335%" height="15" fill="rgb(247,181,11)" fg:x="1968" fg:w="1"/><text x="66.2460%" y="1279.50"></text></g><g><title>AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::texBaseAddressesUpdated() (1 samples, 0.03%)</title><rect x="65.9960%" y="1253" width="0.0335%" height="15" fill="rgb(222,223,25)" fg:x="1968" fg:w="1"/><text x="66.2460%" y="1263.50"></text></g><g><title>IOGPUMetalCommandBufferStorageAllocResourceAtIndex (3 samples, 0.10%)</title><rect x="66.0295%" y="1221" width="0.1006%" height="15" fill="rgb(214,198,28)" fg:x="1969" fg:w="3"/><text x="66.2795%" y="1231.50"></text></g><g><title>IOGPUMetalResourcePoolCreatePooledResource (1 samples, 0.03%)</title><rect x="66.0966%" y="1205" width="0.0335%" height="15" fill="rgb(230,46,43)" fg:x="1971" fg:w="1"/><text x="66.3466%" y="1215.50"></text></g><g><title>IOGPUMetalCommandBufferStorageBeginSegment (3 samples, 0.10%)</title><rect x="66.1301%" y="1221" width="0.1006%" height="15" fill="rgb(233,65,53)" fg:x="1972" fg:w="3"/><text x="66.3801%" y="1231.50"></text></g><g><title>IOGPUResourceListReset (3 samples, 0.10%)</title><rect x="66.1301%" y="1205" width="0.1006%" height="15" fill="rgb(221,121,27)" fg:x="1972" fg:w="3"/><text x="66.3801%" y="1215.50"></text></g><g><title>_platform_memset (3 samples, 0.10%)</title><rect x="66.1301%" y="1189" width="0.1006%" height="15" fill="rgb(247,70,47)" fg:x="1972" fg:w="3"/><text x="66.3801%" y="1199.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::newCommand(unsigned long) (8 samples, 0.27%)</title><rect x="66.0295%" y="1237" width="0.2683%" height="15" fill="rgb(228,85,35)" fg:x="1969" fg:w="8"/><text x="66.2795%" y="1247.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (2 samples, 0.07%)</title><rect x="66.2307%" y="1221" width="0.0671%" height="15" fill="rgb(209,50,18)" fg:x="1975" fg:w="2"/><text x="66.4807%" y="1231.50"></text></g><g><title>ioGPUResourceListAddHashValue (1 samples, 0.03%)</title><rect x="66.2643%" y="1205" width="0.0335%" height="15" fill="rgb(250,19,35)" fg:x="1976" fg:w="1"/><text x="66.5143%" y="1215.50"></text></g><g><title>AGX::DataBufferAllocator&lt;34ul&gt;::grow(unsigned int, bool) (1 samples, 0.03%)</title><rect x="66.2978%" y="1221" width="0.0335%" height="15" fill="rgb(253,107,29)" fg:x="1977" fg:w="1"/><text x="66.5478%" y="1231.50"></text></g><g><title>IOGPUMetalCommandBufferStorageAllocResourceAtIndex (1 samples, 0.03%)</title><rect x="66.2978%" y="1205" width="0.0335%" height="15" fill="rgb(252,179,29)" fg:x="1977" fg:w="1"/><text x="66.5478%" y="1215.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::beginComputePass(AGXStreamHardwareCommandRec**) (10 samples, 0.34%)</title><rect x="66.0295%" y="1253" width="0.3353%" height="15" fill="rgb(238,194,6)" fg:x="1969" fg:w="10"/><text x="66.2795%" y="1263.50"></text></g><g><title>AGX::ContextSwitcherGen3&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::setupComputeCommand(AGXComputeCommandRec*, IOGPUResourceList*, AGX::HAL200::DataBufferAllocator&amp;) (2 samples, 0.07%)</title><rect x="66.2978%" y="1237" width="0.0671%" height="15" fill="rgb(238,164,29)" fg:x="1977" fg:w="2"/><text x="66.5478%" y="1247.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (1 samples, 0.03%)</title><rect x="66.3313%" y="1221" width="0.0335%" height="15" fill="rgb(224,25,9)" fg:x="1978" fg:w="1"/><text x="66.5813%" y="1231.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::bindComputeResources(IOGPUMetalResource const* const*, IOGPUMetalResource const* const*, bool) (1 samples, 0.03%)</title><rect x="66.3649%" y="1253" width="0.0335%" height="15" fill="rgb(244,153,23)" fg:x="1979" fg:w="1"/><text x="66.6149%" y="1263.50"></text></g><g><title>-[IOGPUMetalResource resourceOptions] (1 samples, 0.03%)</title><rect x="66.3649%" y="1237" width="0.0335%" height="15" fill="rgb(212,203,14)" fg:x="1979" fg:w="1"/><text x="66.6149%" y="1247.50"></text></g><g><title>-[IOGPUMetalTexture hazardTrackingMode] (1 samples, 0.03%)</title><rect x="66.3649%" y="1221" width="0.0335%" height="15" fill="rgb(220,164,20)" fg:x="1979" fg:w="1"/><text x="66.6149%" y="1231.50"></text></g><g><title>AGX::BlitUSCStateLoader&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::emitComputeProgramVariantArguments(AGX::HAL200::DataBufferAllocator&amp;, AGX::HAL200::BlitComputeProgramVariant const*, AGX::HAL200::BlitComputeArgumentTable&amp;, AGX::BlitComputeDriverTable&amp;, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int*) (2 samples, 0.07%)</title><rect x="66.3984%" y="1253" width="0.0671%" height="15" fill="rgb(222,203,48)" fg:x="1980" fg:w="2"/><text x="66.6484%" y="1263.50"></text></g><g><title>AGX::SpillInfoGen3&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::allocateUSCSpillBuffer(AGXSpillDesc*, AGXUMADescRec*, MTLResourceList*, AGX::DMASpillBufferDescriptor*, IOGPUResourceInfo&amp;, bool) (1 samples, 0.03%)</title><rect x="66.4655%" y="1253" width="0.0335%" height="15" fill="rgb(215,159,22)" fg:x="1982" fg:w="1"/><text x="66.7155%" y="1263.50"></text></g><g><title>AGX::SpillInfoGen3&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::checkSpillParamsForCompute(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long long) (1 samples, 0.03%)</title><rect x="66.4990%" y="1253" width="0.0335%" height="15" fill="rgb(216,183,47)" fg:x="1983" fg:w="1"/><text x="66.7490%" y="1263.50"></text></g><g><title>IOGPUResourceListAddResource (1 samples, 0.03%)</title><rect x="66.5325%" y="1253" width="0.0335%" height="15" fill="rgb(229,195,25)" fg:x="1984" fg:w="1"/><text x="66.7825%" y="1263.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::blitCDM(IOGPUMetalResource const* const*, AGX::HAL200::Texture*, unsigned long long, IOGPUMetalResource const* const*, AGX::HAL200::Texture*, unsigned long long, AGX::FlagsConfiguration&lt;eAGXBlitFlags&gt; const&amp;, unsigned int, AGX::BlitDispatchContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::BlitRegion const*, _AGCBlitTextureFormat, unsigned long, unsigned long, void const*, AGX::BlitDispatchContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::BarrierMode) (17 samples, 0.57%)</title><rect x="66.0295%" y="1269" width="0.5701%" height="15" fill="rgb(224,132,51)" fg:x="1969" fg:w="17"/><text x="66.2795%" y="1279.50"></text></g><g><title>unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::View)0&gt;(unsigned int, bool) const (1 samples, 0.03%)</title><rect x="66.5661%" y="1253" width="0.0335%" height="15" fill="rgb(240,63,7)" fg:x="1985" fg:w="1"/><text x="66.8161%" y="1263.50"></text></g><g><title>unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::getStride&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::View)0, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::Units)0, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::Op)0&gt;(unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="66.5661%" y="1237" width="0.0335%" height="15" fill="rgb(249,182,41)" fg:x="1985" fg:w="1"/><text x="66.8161%" y="1247.50"></text></g><g><title>AGX::BlitDispatchContextGen2&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::setupSparseStateForCompute(AGX::HAL200::Texture*, AGX::HAL200::Texture*) (1 samples, 0.03%)</title><rect x="66.5996%" y="1269" width="0.0335%" height="15" fill="rgb(243,47,26)" fg:x="1986" fg:w="1"/><text x="66.8496%" y="1279.50"></text></g><g><title>AGX::FramebufferCompilerConfigGen3&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::buildDrawBufferState(unsigned int, bool) (1 samples, 0.03%)</title><rect x="66.6331%" y="1269" width="0.0335%" height="15" fill="rgb(233,48,2)" fg:x="1987" fg:w="1"/><text x="66.8831%" y="1279.50"></text></g><g><title>AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::getGPUVirtualAddress(unsigned int, unsigned int, unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="66.7002%" y="1253" width="0.0335%" height="15" fill="rgb(244,165,34)" fg:x="1989" fg:w="1"/><text x="66.9502%" y="1263.50"></text></g><g><title>$_0::operator()() const::&apos;lambda0&apos;(unsigned long, std::__type_descriptor_t)::__invoke(unsigned long, std::__type_descriptor_t) (1 samples, 0.03%)</title><rect x="66.7673%" y="1237" width="0.0335%" height="15" fill="rgb(207,89,7)" fg:x="1991" fg:w="1"/><text x="67.0173%" y="1247.50"></text></g><g><title>__typed_operator_new_impl[abi:ne190102](unsigned long, std::__type_descriptor_t) (1 samples, 0.03%)</title><rect x="66.7673%" y="1221" width="0.0335%" height="15" fill="rgb(244,117,36)" fg:x="1991" fg:w="1"/><text x="67.0173%" y="1231.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="66.7673%" y="1205" width="0.0335%" height="15" fill="rgb(226,144,34)" fg:x="1991" fg:w="1"/><text x="67.0173%" y="1215.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.03%)</title><rect x="66.7673%" y="1189" width="0.0335%" height="15" fill="rgb(213,23,19)" fg:x="1991" fg:w="1"/><text x="67.0173%" y="1199.50"></text></g><g><title>small_malloc_from_free_list (1 samples, 0.03%)</title><rect x="66.7673%" y="1173" width="0.0335%" height="15" fill="rgb(217,75,12)" fg:x="1991" fg:w="1"/><text x="67.0173%" y="1183.50"></text></g><g><title>small_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="66.7673%" y="1157" width="0.0335%" height="15" fill="rgb(224,159,17)" fg:x="1991" fg:w="1"/><text x="67.0173%" y="1167.50"></text></g><g><title>AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::TextureGen4(AGX::HAL200::Device*, bool, AGXHardwareTextureMemoryOrder, MTLTextureType, AGX::TextureFormat const*, MTLPixelFormat, unsigned long, MTLStorageMode, AGXTextureCompressionSettings, eAGXColorSpaceConversion, eAGXTextureRotation, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, unsigned int, MTLCPUCacheMode, __IOSurface*, unsigned int, unsigned int, __IOSurface*, unsigned int, unsigned int, bool, bool, bool, unsigned long long) (3 samples, 0.10%)</title><rect x="66.7337%" y="1253" width="0.1006%" height="15" fill="rgb(217,118,1)" fg:x="1990" fg:w="3"/><text x="66.9837%" y="1263.50"></text></g><g><title>AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::TextureGen4(AGX::HAL200::Device*, bool, AGXHardwareTextureMemoryOrder, MTLTextureType, AGX::TextureFormat const*, MTLPixelFormat, unsigned long, MTLStorageMode, AGXTextureCompressionSettings, eAGXColorSpaceConversion, eAGXTextureRotation, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, unsigned int, MTLCPUCacheMode, __IOSurface*, unsigned int, unsigned int, __IOSurface*, unsigned int, unsigned int, bool, bool, bool, unsigned long long) (1 samples, 0.03%)</title><rect x="66.8008%" y="1237" width="0.0335%" height="15" fill="rgb(232,180,48)" fg:x="1992" fg:w="1"/><text x="67.0508%" y="1247.50"></text></g><g><title>AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::texBaseAddressesUpdated() (1 samples, 0.03%)</title><rect x="66.8343%" y="1253" width="0.0335%" height="15" fill="rgb(230,27,33)" fg:x="1993" fg:w="1"/><text x="67.0843%" y="1263.50"></text></g><g><title>AGX::PBEStateEncoderGen9&lt;kAGXRevHAL200&gt;::StateFields::StateFields(AGX::PBEStateEncoderGen9&lt;kAGXRevHAL200&gt;::WriteType, unsigned int, unsigned long long, unsigned long long, _AGCDrawBuffer const&amp;, eAGXTextureRotation, eAGXTextureFormatSwizzle, AGXHardwareTextureLayout, eAGXTextureFormatGammaEncoding, eAGXColorSpaceConversion, eAGXTextureChromaLocation, eAGXTextureFormatYUVType, unsigned long long, unsigned long long, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, unsigned int, MTLPixelFormat, bool) (1 samples, 0.03%)</title><rect x="66.8343%" y="1237" width="0.0335%" height="15" fill="rgb(205,31,21)" fg:x="1993" fg:w="1"/><text x="67.0843%" y="1247.50"></text></g><g><title>AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::createTextureViewForBlit(AGX::HAL200::Texture const*, MTLTextureType, MTLPixelFormat, unsigned long, AGXTextureCompressionSettings, eAGXColorSpaceConversion, eAGXTextureRotation, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, MTLCPUCacheMode, __IOSurface*, unsigned int, unsigned int, __IOSurface*, bool, bool) (7 samples, 0.23%)</title><rect x="66.6667%" y="1269" width="0.2347%" height="15" fill="rgb(253,59,4)" fg:x="1988" fg:w="7"/><text x="66.9167%" y="1279.50"></text></g><g><title>unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::View)0&gt;(unsigned int, bool) const (1 samples, 0.03%)</title><rect x="66.8679%" y="1253" width="0.0335%" height="15" fill="rgb(224,201,9)" fg:x="1994" fg:w="1"/><text x="67.1179%" y="1263.50"></text></g><g><title>AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::getGPUVirtualAddress(unsigned int, unsigned int, unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="66.9014%" y="1269" width="0.0335%" height="15" fill="rgb(229,206,30)" fg:x="1995" fg:w="1"/><text x="67.1514%" y="1279.50"></text></g><g><title>IOGPUResourceListAddResource (1 samples, 0.03%)</title><rect x="66.9349%" y="1269" width="0.0335%" height="15" fill="rgb(212,67,47)" fg:x="1996" fg:w="1"/><text x="67.1849%" y="1279.50"></text></g><g><title>AGX::BlitContext&lt;AGX::HAL200::Encoders, AGX::HAL200::Classes, AGX::HAL200::ObjClasses&gt;::copyBufferToTexture(AGXG16GFamilyTexture*, unsigned int, unsigned int, MTLOrigin, MTLSize, IOGPUMetalResource const*, unsigned long, unsigned long, unsigned long, unsigned long) (31 samples, 1.04%)</title><rect x="65.9960%" y="1285" width="1.0396%" height="15" fill="rgb(211,96,50)" fg:x="1968" fg:w="31"/><text x="66.2460%" y="1295.50"></text></g><g><title>std::__1::unique_ptr&lt;AGX::HAL200::CompressionMetadata, std::__1::default_delete&lt;AGX::HAL200::CompressionMetadata&gt;&gt;::~unique_ptr[abi:nn190102]() (2 samples, 0.07%)</title><rect x="66.9685%" y="1269" width="0.0671%" height="15" fill="rgb(252,114,18)" fg:x="1997" fg:w="2"/><text x="67.2185%" y="1279.50"></text></g><g><title>free (1 samples, 0.03%)</title><rect x="67.0020%" y="1253" width="0.0335%" height="15" fill="rgb(223,58,37)" fg:x="1998" fg:w="1"/><text x="67.2520%" y="1263.50"></text></g><g><title>metal::encoder::BlitCommandEncoderRef::copy_from_buffer_to_texture (33 samples, 1.11%)</title><rect x="65.9624%" y="1317" width="1.1066%" height="15" fill="rgb(237,70,4)" fg:x="1967" fg:w="33"/><text x="66.2124%" y="1327.50"></text></g><g><title>-[AGXG16GFamilyBlitContext copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:] (32 samples, 1.07%)</title><rect x="65.9960%" y="1301" width="1.0731%" height="15" fill="rgb(244,85,46)" fg:x="1968" fg:w="32"/><text x="66.2460%" y="1311.50"></text></g><g><title>AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::HAL200::Encoders, AGX::HAL200::Classes&gt;::createTextureViewForBlit(AGX::HAL200::Texture const*, MTLTextureType, MTLPixelFormat, unsigned long, AGXTextureCompressionSettings, eAGXColorSpaceConversion, eAGXTextureRotation, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, MTLCPUCacheMode, __IOSurface*, unsigned int, unsigned int, __IOSurface*, bool, bool) (1 samples, 0.03%)</title><rect x="67.0355%" y="1285" width="0.0335%" height="15" fill="rgb(223,39,52)" fg:x="1999" fg:w="1"/><text x="67.2855%" y="1295.50"></text></g><g><title>-[AGXG16GFamilyDevice getSupportedCommandBufferErrorOptions] (1 samples, 0.03%)</title><rect x="67.1362%" y="1221" width="0.0335%" height="15" fill="rgb(218,200,14)" fg:x="2002" fg:w="1"/><text x="67.3862%" y="1231.50"></text></g><g><title>-[IOGPUMetalCommandEncoder initWithCommandBuffer:] (4 samples, 0.13%)</title><rect x="67.0691%" y="1253" width="0.1341%" height="15" fill="rgb(208,171,16)" fg:x="2000" fg:w="4"/><text x="67.3191%" y="1263.50"></text></g><g><title>-[_MTLCommandEncoder initWithCommandBuffer:] (3 samples, 0.10%)</title><rect x="67.1026%" y="1237" width="0.1006%" height="15" fill="rgb(234,200,18)" fg:x="2001" fg:w="3"/><text x="67.3526%" y="1247.50"></text></g><g><title>-[_MTLObjectWithLabel init] (1 samples, 0.03%)</title><rect x="67.1697%" y="1221" width="0.0335%" height="15" fill="rgb(228,45,11)" fg:x="2003" fg:w="1"/><text x="67.4197%" y="1231.50"></text></g><g><title>objc_msgSendSuper2 (1 samples, 0.03%)</title><rect x="67.1697%" y="1205" width="0.0335%" height="15" fill="rgb(237,182,11)" fg:x="2003" fg:w="1"/><text x="67.4197%" y="1215.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer blitCommandEncoderCommon:] (6 samples, 0.20%)</title><rect x="67.0691%" y="1285" width="0.2012%" height="15" fill="rgb(241,175,49)" fg:x="2000" fg:w="6"/><text x="67.3191%" y="1295.50"></text></g><g><title>-[AGXG16GFamilyBlitContext initWithCommandBuffer:descriptor:] (6 samples, 0.20%)</title><rect x="67.0691%" y="1269" width="0.2012%" height="15" fill="rgb(247,38,35)" fg:x="2000" fg:w="6"/><text x="67.3191%" y="1279.50"></text></g><g><title>szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="67.2032%" y="1253" width="0.0671%" height="15" fill="rgb(228,39,49)" fg:x="2004" fg:w="2"/><text x="67.4532%" y="1263.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.03%)</title><rect x="67.2368%" y="1237" width="0.0335%" height="15" fill="rgb(226,101,26)" fg:x="2005" fg:w="1"/><text x="67.4868%" y="1247.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="67.2368%" y="1221" width="0.0335%" height="15" fill="rgb(206,141,19)" fg:x="2005" fg:w="1"/><text x="67.4868%" y="1231.50"></text></g><g><title>wgpu::Queue::write_texture (701 samples, 23.51%)</title><rect x="43.7961%" y="1397" width="23.5077%" height="15" fill="rgb(211,200,13)" fg:x="1306" fg:w="701"/><text x="44.0461%" y="1407.50">wgpu::Queue::write_texture</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (701 samples, 23.51%)</title><rect x="43.7961%" y="1381" width="23.5077%" height="15" fill="rgb(241,121,6)" fg:x="1306" fg:w="701"/><text x="44.0461%" y="1391.50">&lt;T as wgpu::context::DynContext&gt;::que..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (700 samples, 23.47%)</title><rect x="43.8296%" y="1365" width="23.4742%" height="15" fill="rgb(234,221,29)" fg:x="1307" fg:w="700"/><text x="44.0796%" y="1375.50">&lt;wgpu::backend::direct::Context as wg..</text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (700 samples, 23.47%)</title><rect x="43.8296%" y="1349" width="23.4742%" height="15" fill="rgb(229,136,5)" fg:x="1307" fg:w="700"/><text x="44.0796%" y="1359.50">wgpu_core::device::queue::_&lt;impl wgpu..</text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_texture (40 samples, 1.34%)</title><rect x="65.9624%" y="1333" width="1.3414%" height="15" fill="rgb(238,36,11)" fg:x="1967" fg:w="40"/><text x="66.2124%" y="1343.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (7 samples, 0.23%)</title><rect x="67.0691%" y="1317" width="0.2347%" height="15" fill="rgb(251,55,41)" fg:x="2000" fg:w="7"/><text x="67.3191%" y="1327.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (7 samples, 0.23%)</title><rect x="67.0691%" y="1301" width="0.2347%" height="15" fill="rgb(242,34,40)" fg:x="2000" fg:w="7"/><text x="67.3191%" y="1311.50"></text></g><g><title>AutoreleasePoolPage::push() (1 samples, 0.03%)</title><rect x="67.2703%" y="1285" width="0.0335%" height="15" fill="rgb(215,42,17)" fg:x="2006" fg:w="1"/><text x="67.5203%" y="1295.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="67.3709%" y="1333" width="0.0335%" height="15" fill="rgb(207,44,46)" fg:x="2009" fg:w="1"/><text x="67.6209%" y="1343.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.03%)</title><rect x="67.4044%" y="1333" width="0.0335%" height="15" fill="rgb(211,206,28)" fg:x="2010" fg:w="1"/><text x="67.6544%" y="1343.50"></text></g><g><title>-[CAMetalDrawable estimateTargets] (1 samples, 0.03%)</title><rect x="67.4380%" y="1285" width="0.0335%" height="15" fill="rgb(237,167,16)" fg:x="2011" fg:w="1"/><text x="67.6880%" y="1295.50"></text></g><g><title>-[CAMetalLayer(CAMetalLayerPrivate) currentDisplay] (1 samples, 0.03%)</title><rect x="67.4380%" y="1269" width="0.0335%" height="15" fill="rgb(233,66,6)" fg:x="2011" fg:w="1"/><text x="67.6880%" y="1279.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="67.4380%" y="1253" width="0.0335%" height="15" fill="rgb(246,123,29)" fg:x="2011" fg:w="1"/><text x="67.6880%" y="1263.50"></text></g><g><title>_dispatch_event_loop_poke (2 samples, 0.07%)</title><rect x="67.5050%" y="1221" width="0.0671%" height="15" fill="rgb(209,62,40)" fg:x="2013" fg:w="2"/><text x="67.7550%" y="1231.50"></text></g><g><title>_dispatch_kq_poll (2 samples, 0.07%)</title><rect x="67.5050%" y="1205" width="0.0671%" height="15" fill="rgb(218,4,25)" fg:x="2013" fg:w="2"/><text x="67.7550%" y="1215.50"></text></g><g><title>kevent_id (2 samples, 0.07%)</title><rect x="67.5050%" y="1189" width="0.0671%" height="15" fill="rgb(253,91,49)" fg:x="2013" fg:w="2"/><text x="67.7550%" y="1199.50"></text></g><g><title>+[FPCAMetalLayerState drawableLifetimeStart:drawableID:surfaceID:acquisitionWaitStart:acquiredTime:] (3 samples, 0.10%)</title><rect x="67.5050%" y="1253" width="0.1006%" height="15" fill="rgb(228,155,29)" fg:x="2013" fg:w="3"/><text x="67.7550%" y="1263.50"></text></g><g><title>+[FPCAMetalLayerState _updateLayerState:block:] (3 samples, 0.10%)</title><rect x="67.5050%" y="1237" width="0.1006%" height="15" fill="rgb(243,57,37)" fg:x="2013" fg:w="3"/><text x="67.7550%" y="1247.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="67.5721%" y="1221" width="0.0335%" height="15" fill="rgb(244,167,17)" fg:x="2015" fg:w="1"/><text x="67.8221%" y="1231.50"></text></g><g><title>-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (6 samples, 0.20%)</title><rect x="67.5050%" y="1269" width="0.2012%" height="15" fill="rgb(207,181,38)" fg:x="2013" fg:w="6"/><text x="67.7550%" y="1279.50"></text></g><g><title>-[IOSurfaceSharedEvent initWithOptions:] (3 samples, 0.10%)</title><rect x="67.6056%" y="1253" width="0.1006%" height="15" fill="rgb(211,8,23)" fg:x="2016" fg:w="3"/><text x="67.8556%" y="1263.50"></text></g><g><title>IOConnectCallMethod (3 samples, 0.10%)</title><rect x="67.6056%" y="1237" width="0.1006%" height="15" fill="rgb(235,11,44)" fg:x="2016" fg:w="3"/><text x="67.8556%" y="1247.50"></text></g><g><title>io_connect_method (3 samples, 0.10%)</title><rect x="67.6056%" y="1221" width="0.1006%" height="15" fill="rgb(248,18,52)" fg:x="2016" fg:w="3"/><text x="67.8556%" y="1231.50"></text></g><g><title>mach_msg2_internal (3 samples, 0.10%)</title><rect x="67.6056%" y="1205" width="0.1006%" height="15" fill="rgb(208,4,7)" fg:x="2016" fg:w="3"/><text x="67.8556%" y="1215.50"></text></g><g><title>mach_msg2_trap (3 samples, 0.10%)</title><rect x="67.6056%" y="1189" width="0.1006%" height="15" fill="rgb(240,17,39)" fg:x="2016" fg:w="3"/><text x="67.8556%" y="1199.50"></text></g><g><title>CAHostTimeConvert (1 samples, 0.03%)</title><rect x="67.7062%" y="1237" width="0.0335%" height="15" fill="rgb(207,170,3)" fg:x="2019" fg:w="1"/><text x="67.9562%" y="1247.50"></text></g><g><title>CAImageQueueCollect_ (2 samples, 0.07%)</title><rect x="67.7062%" y="1269" width="0.0671%" height="15" fill="rgb(236,100,52)" fg:x="2019" fg:w="2"/><text x="67.9562%" y="1279.50"></text></g><g><title>release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (2 samples, 0.07%)</title><rect x="67.7062%" y="1253" width="0.0671%" height="15" fill="rgb(246,78,51)" fg:x="2019" fg:w="2"/><text x="67.9562%" y="1263.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="67.7398%" y="1237" width="0.0335%" height="15" fill="rgb(211,17,15)" fg:x="2020" fg:w="1"/><text x="67.9898%" y="1247.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="67.7398%" y="1221" width="0.0335%" height="15" fill="rgb(209,59,46)" fg:x="2020" fg:w="1"/><text x="67.9898%" y="1231.50"></text></g><g><title>tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="67.7398%" y="1205" width="0.0335%" height="15" fill="rgb(210,92,25)" fg:x="2020" fg:w="1"/><text x="67.9898%" y="1215.50"></text></g><g><title>CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (1 samples, 0.03%)</title><rect x="67.7733%" y="1269" width="0.0335%" height="15" fill="rgb(238,174,52)" fg:x="2021" fg:w="1"/><text x="68.0233%" y="1279.50"></text></g><g><title>__kdebug_trace64 (3 samples, 0.10%)</title><rect x="67.8068%" y="1269" width="0.1006%" height="15" fill="rgb(230,73,7)" fg:x="2022" fg:w="3"/><text x="68.0568%" y="1279.50"></text></g><g><title>_dispatch_semaphore_wait_slow (2 samples, 0.07%)</title><rect x="67.9074%" y="1269" width="0.0671%" height="15" fill="rgb(243,124,40)" fg:x="2025" fg:w="2"/><text x="68.1574%" y="1279.50"></text></g><g><title>_dispatch_sema4_timedwait (2 samples, 0.07%)</title><rect x="67.9074%" y="1253" width="0.0671%" height="15" fill="rgb(244,170,11)" fg:x="2025" fg:w="2"/><text x="68.1574%" y="1263.50"></text></g><g><title>semaphore_timedwait_trap (2 samples, 0.07%)</title><rect x="67.9074%" y="1237" width="0.0671%" height="15" fill="rgb(207,114,54)" fg:x="2025" fg:w="2"/><text x="68.1574%" y="1247.50"></text></g><g><title>wgpu::Surface::get_current_texture (21 samples, 0.70%)</title><rect x="67.3038%" y="1397" width="0.7042%" height="15" fill="rgb(205,42,20)" fg:x="2007" fg:w="21"/><text x="67.5538%" y="1407.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (21 samples, 0.70%)</title><rect x="67.3038%" y="1381" width="0.7042%" height="15" fill="rgb(230,30,28)" fg:x="2007" fg:w="21"/><text x="67.5538%" y="1391.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (19 samples, 0.64%)</title><rect x="67.3709%" y="1365" width="0.6372%" height="15" fill="rgb(205,73,54)" fg:x="2009" fg:w="19"/><text x="67.6209%" y="1375.50"></text></g><g><title>wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (19 samples, 0.64%)</title><rect x="67.3709%" y="1349" width="0.6372%" height="15" fill="rgb(254,227,23)" fg:x="2009" fg:w="19"/><text x="67.6209%" y="1359.50"></text></g><g><title>wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (17 samples, 0.57%)</title><rect x="67.4380%" y="1333" width="0.5701%" height="15" fill="rgb(228,202,34)" fg:x="2011" fg:w="17"/><text x="67.6880%" y="1343.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (17 samples, 0.57%)</title><rect x="67.4380%" y="1317" width="0.5701%" height="15" fill="rgb(222,225,37)" fg:x="2011" fg:w="17"/><text x="67.6880%" y="1327.50"></text></g><g><title>-[CAMetalLayer nextDrawable] (17 samples, 0.57%)</title><rect x="67.4380%" y="1301" width="0.5701%" height="15" fill="rgb(221,14,54)" fg:x="2011" fg:w="17"/><text x="67.6880%" y="1311.50"></text></g><g><title>CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (16 samples, 0.54%)</title><rect x="67.4715%" y="1285" width="0.5366%" height="15" fill="rgb(254,102,2)" fg:x="2012" fg:w="16"/><text x="67.7215%" y="1295.50"></text></g><g><title>get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (1 samples, 0.03%)</title><rect x="67.9745%" y="1269" width="0.0335%" height="15" fill="rgb(232,104,17)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1279.50"></text></g><g><title>CA::Render::create_iosurface_with_pixel_format(unsigned int, unsigned int, unsigned int, unsigned int, unsigned long long, __CFString const*) (1 samples, 0.03%)</title><rect x="67.9745%" y="1253" width="0.0335%" height="15" fill="rgb(250,220,14)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1263.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="67.9745%" y="1237" width="0.0335%" height="15" fill="rgb(241,158,9)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1247.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="67.9745%" y="1221" width="0.0335%" height="15" fill="rgb(246,9,43)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1231.50"></text></g><g><title>__CADeviceUseCompression_block_invoke (1 samples, 0.03%)</title><rect x="67.9745%" y="1205" width="0.0335%" height="15" fill="rgb(206,73,33)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1215.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.03%)</title><rect x="67.9745%" y="1189" width="0.0335%" height="15" fill="rgb(222,79,8)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1199.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="67.9745%" y="1173" width="0.0335%" height="15" fill="rgb(234,8,54)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1183.50"></text></g><g><title>__CADeviceSupportsCIF10_block_invoke (1 samples, 0.03%)</title><rect x="67.9745%" y="1157" width="0.0335%" height="15" fill="rgb(209,134,38)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1167.50"></text></g><g><title>MGGetSInt64Answer (1 samples, 0.03%)</title><rect x="67.9745%" y="1141" width="0.0335%" height="15" fill="rgb(230,127,29)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1151.50"></text></g><g><title>0x18fe3b200 (1 samples, 0.03%)</title><rect x="67.9745%" y="1125" width="0.0335%" height="15" fill="rgb(242,44,41)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1135.50"></text></g><g><title>0x18fe3ad94 (1 samples, 0.03%)</title><rect x="67.9745%" y="1109" width="0.0335%" height="15" fill="rgb(222,56,43)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1119.50"></text></g><g><title>0x18fe589f4 (1 samples, 0.03%)</title><rect x="67.9745%" y="1093" width="0.0335%" height="15" fill="rgb(238,39,47)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1103.50"></text></g><g><title>0x18fe58598 (1 samples, 0.03%)</title><rect x="67.9745%" y="1077" width="0.0335%" height="15" fill="rgb(226,79,43)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1087.50"></text></g><g><title>IORegistryEntryFromPath (1 samples, 0.03%)</title><rect x="67.9745%" y="1061" width="0.0335%" height="15" fill="rgb(242,105,53)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1071.50"></text></g><g><title>IOMasterPort (1 samples, 0.03%)</title><rect x="67.9745%" y="1045" width="0.0335%" height="15" fill="rgb(251,132,46)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1055.50"></text></g><g><title>host_get_io_main (1 samples, 0.03%)</title><rect x="67.9745%" y="1029" width="0.0335%" height="15" fill="rgb(231,77,14)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1039.50"></text></g><g><title>mach_msg2_internal (1 samples, 0.03%)</title><rect x="67.9745%" y="1013" width="0.0335%" height="15" fill="rgb(240,135,9)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1023.50"></text></g><g><title>mach_msg2_trap (1 samples, 0.03%)</title><rect x="67.9745%" y="997" width="0.0335%" height="15" fill="rgb(248,109,14)" fg:x="2027" fg:w="1"/><text x="68.2245%" y="1007.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.03%)</title><rect x="68.0080%" y="1365" width="0.0335%" height="15" fill="rgb(227,146,52)" fg:x="2028" fg:w="1"/><text x="68.2580%" y="1375.50"></text></g><g><title>-[CAMetalDrawable release] (1 samples, 0.03%)</title><rect x="68.1087%" y="1317" width="0.0335%" height="15" fill="rgb(232,54,3)" fg:x="2031" fg:w="1"/><text x="68.3587%" y="1327.50"></text></g><g><title>objc_msgSend$retainCount (1 samples, 0.03%)</title><rect x="68.1087%" y="1301" width="0.0335%" height="15" fill="rgb(229,201,43)" fg:x="2031" fg:w="1"/><text x="68.3587%" y="1311.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer gtpContinuePreParse] (1 samples, 0.03%)</title><rect x="68.1422%" y="1285" width="0.0335%" height="15" fill="rgb(252,161,33)" fg:x="2032" fg:w="1"/><text x="68.3922%" y="1295.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="68.1422%" y="1269" width="0.0335%" height="15" fill="rgb(226,146,40)" fg:x="2032" fg:w="1"/><text x="68.3922%" y="1279.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer commit] (2 samples, 0.07%)</title><rect x="68.1422%" y="1301" width="0.0671%" height="15" fill="rgb(219,47,25)" fg:x="2032" fg:w="2"/><text x="68.3922%" y="1311.50"></text></g><g><title>-[IOGPUMetalCommandBuffer commit] (1 samples, 0.03%)</title><rect x="68.1757%" y="1285" width="0.0335%" height="15" fill="rgb(250,135,13)" fg:x="2033" fg:w="1"/><text x="68.4257%" y="1295.50"></text></g><g><title>-[_MTLCommandBuffer commit] (1 samples, 0.03%)</title><rect x="68.1757%" y="1269" width="0.0335%" height="15" fill="rgb(219,229,18)" fg:x="2033" fg:w="1"/><text x="68.4257%" y="1279.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="68.1757%" y="1253" width="0.0335%" height="15" fill="rgb(217,152,27)" fg:x="2033" fg:w="1"/><text x="68.4257%" y="1263.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.07%)</title><rect x="68.2763%" y="1253" width="0.0671%" height="15" fill="rgb(225,71,47)" fg:x="2036" fg:w="2"/><text x="68.5263%" y="1263.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (2 samples, 0.07%)</title><rect x="68.2763%" y="1237" width="0.0671%" height="15" fill="rgb(220,139,14)" fg:x="2036" fg:w="2"/><text x="68.5263%" y="1247.50"></text></g><g><title>_dispatch_event_loop_poke (2 samples, 0.07%)</title><rect x="68.2763%" y="1221" width="0.0671%" height="15" fill="rgb(247,54,32)" fg:x="2036" fg:w="2"/><text x="68.5263%" y="1231.50"></text></g><g><title>_dispatch_kq_poll (2 samples, 0.07%)</title><rect x="68.2763%" y="1205" width="0.0671%" height="15" fill="rgb(252,131,39)" fg:x="2036" fg:w="2"/><text x="68.5263%" y="1215.50"></text></g><g><title>kevent_id (2 samples, 0.07%)</title><rect x="68.2763%" y="1189" width="0.0671%" height="15" fill="rgb(210,108,39)" fg:x="2036" fg:w="2"/><text x="68.5263%" y="1199.50"></text></g><g><title>IOGPUMetalCommandBufferStoragePoolCreateStorage (1 samples, 0.03%)</title><rect x="68.3434%" y="1253" width="0.0335%" height="15" fill="rgb(205,23,29)" fg:x="2038" fg:w="1"/><text x="68.5934%" y="1263.50"></text></g><g><title>_iogpuMetalCommandBufferStorageSetupShmems (1 samples, 0.03%)</title><rect x="68.3434%" y="1237" width="0.0335%" height="15" fill="rgb(246,139,46)" fg:x="2038" fg:w="1"/><text x="68.5934%" y="1247.50"></text></g><g><title>IOGPUMetalCommandBufferStorageBeginKernelCommands (1 samples, 0.03%)</title><rect x="68.3434%" y="1221" width="0.0335%" height="15" fill="rgb(250,81,26)" fg:x="2038" fg:w="1"/><text x="68.5934%" y="1231.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer initWithQueue:retainedReferences:] (5 samples, 0.17%)</title><rect x="68.2428%" y="1285" width="0.1677%" height="15" fill="rgb(214,104,7)" fg:x="2035" fg:w="5"/><text x="68.4928%" y="1295.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.13%)</title><rect x="68.2763%" y="1269" width="0.1341%" height="15" fill="rgb(233,189,8)" fg:x="2036" fg:w="4"/><text x="68.5263%" y="1279.50"></text></g><g><title>objc_opt_isKindOfClass (1 samples, 0.03%)</title><rect x="68.3769%" y="1253" width="0.0335%" height="15" fill="rgb(228,141,17)" fg:x="2039" fg:w="1"/><text x="68.6269%" y="1263.50"></text></g><g><title>_objc_rootAllocWithZone (1 samples, 0.03%)</title><rect x="68.4105%" y="1285" width="0.0335%" height="15" fill="rgb(247,157,1)" fg:x="2040" fg:w="1"/><text x="68.6605%" y="1295.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="68.4105%" y="1269" width="0.0335%" height="15" fill="rgb(249,225,5)" fg:x="2040" fg:w="1"/><text x="68.6605%" y="1279.50"></text></g><g><title>-[AGXG16GFamilyCommandQueue commandBuffer] (8 samples, 0.27%)</title><rect x="68.2093%" y="1301" width="0.2683%" height="15" fill="rgb(242,55,13)" fg:x="2034" fg:w="8"/><text x="68.4593%" y="1311.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="68.4440%" y="1285" width="0.0335%" height="15" fill="rgb(230,49,50)" fg:x="2041" fg:w="1"/><text x="68.6940%" y="1295.50"></text></g><g><title>-[IOGPUMetalCommandBuffer setLabel:] (1 samples, 0.03%)</title><rect x="68.4775%" y="1301" width="0.0335%" height="15" fill="rgb(241,111,38)" fg:x="2042" fg:w="1"/><text x="68.7275%" y="1311.50"></text></g><g><title>_CFNonObjCStringCreateCopy (1 samples, 0.03%)</title><rect x="68.4775%" y="1285" width="0.0335%" height="15" fill="rgb(252,155,4)" fg:x="2042" fg:w="1"/><text x="68.7275%" y="1295.50"></text></g><g><title>-[__NSPlaceholderDictionary initWithObjects:forKeys:count:] (1 samples, 0.03%)</title><rect x="68.5111%" y="1269" width="0.0335%" height="15" fill="rgb(212,69,32)" fg:x="2043" fg:w="1"/><text x="68.7611%" y="1279.50"></text></g><g><title>-[__NSCFString hash] (2 samples, 0.07%)</title><rect x="68.5446%" y="1237" width="0.0671%" height="15" fill="rgb(243,107,47)" fg:x="2044" fg:w="2"/><text x="68.7946%" y="1247.50"></text></g><g><title>-[_MTLCommandBuffer presentDrawable:] (4 samples, 0.13%)</title><rect x="68.5111%" y="1301" width="0.1341%" height="15" fill="rgb(247,130,12)" fg:x="2043" fg:w="4"/><text x="68.7611%" y="1311.50"></text></g><g><title>+[NSDictionary dictionaryWithObjects:forKeys:count:] (4 samples, 0.13%)</title><rect x="68.5111%" y="1285" width="0.1341%" height="15" fill="rgb(233,74,16)" fg:x="2043" fg:w="4"/><text x="68.7611%" y="1295.50"></text></g><g><title>__NSDictionaryI_new (3 samples, 0.10%)</title><rect x="68.5446%" y="1269" width="0.1006%" height="15" fill="rgb(208,58,18)" fg:x="2044" fg:w="3"/><text x="68.7946%" y="1279.50"></text></g><g><title>____NSDictionaryI_new_block_invoke (3 samples, 0.10%)</title><rect x="68.5446%" y="1253" width="0.1006%" height="15" fill="rgb(242,225,1)" fg:x="2044" fg:w="3"/><text x="68.7946%" y="1263.50"></text></g><g><title>__CFStringHash (1 samples, 0.03%)</title><rect x="68.6117%" y="1237" width="0.0335%" height="15" fill="rgb(249,39,40)" fg:x="2046" fg:w="1"/><text x="68.8617%" y="1247.50"></text></g><g><title>malloc_type_zone_calloc (1 samples, 0.03%)</title><rect x="68.6452%" y="1237" width="0.0335%" height="15" fill="rgb(207,72,44)" fg:x="2047" fg:w="1"/><text x="68.8952%" y="1247.50"></text></g><g><title>_CFRuntimeCreateInstance (2 samples, 0.07%)</title><rect x="68.6452%" y="1253" width="0.0671%" height="15" fill="rgb(215,193,12)" fg:x="2047" fg:w="2"/><text x="68.8952%" y="1263.50"></text></g><g><title>nanov2_calloc_type (1 samples, 0.03%)</title><rect x="68.6787%" y="1237" width="0.0335%" height="15" fill="rgb(248,41,39)" fg:x="2048" fg:w="1"/><text x="68.9287%" y="1247.50"></text></g><g><title>&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (19 samples, 0.64%)</title><rect x="68.1087%" y="1333" width="0.6372%" height="15" fill="rgb(253,85,4)" fg:x="2031" fg:w="19"/><text x="68.3587%" y="1343.50"></text></g><g><title>objc::rc::autorelease::autoreleasepool (18 samples, 0.60%)</title><rect x="68.1422%" y="1317" width="0.6036%" height="15" fill="rgb(243,70,31)" fg:x="2032" fg:w="18"/><text x="68.3922%" y="1327.50"></text></g><g><title>metal::commandbuffer::CommandBufferRef::set_label (3 samples, 0.10%)</title><rect x="68.6452%" y="1301" width="0.1006%" height="15" fill="rgb(253,195,26)" fg:x="2047" fg:w="3"/><text x="68.8952%" y="1311.50"></text></g><g><title>metal::nsstring_from_str (3 samples, 0.10%)</title><rect x="68.6452%" y="1285" width="0.1006%" height="15" fill="rgb(243,42,11)" fg:x="2047" fg:w="3"/><text x="68.8952%" y="1295.50"></text></g><g><title>__CFStringCreateImmutableFunnel3 (3 samples, 0.10%)</title><rect x="68.6452%" y="1269" width="0.1006%" height="15" fill="rgb(239,66,17)" fg:x="2047" fg:w="3"/><text x="68.8952%" y="1279.50"></text></g><g><title>__CFSearchStringROM (1 samples, 0.03%)</title><rect x="68.7123%" y="1253" width="0.0335%" height="15" fill="rgb(217,132,21)" fg:x="2049" fg:w="1"/><text x="68.9623%" y="1263.50"></text></g><g><title>wgpu::SurfaceTexture::present (23 samples, 0.77%)</title><rect x="68.0080%" y="1397" width="0.7713%" height="15" fill="rgb(252,202,21)" fg:x="2028" fg:w="23"/><text x="68.2580%" y="1407.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (23 samples, 0.77%)</title><rect x="68.0080%" y="1381" width="0.7713%" height="15" fill="rgb(233,98,36)" fg:x="2028" fg:w="23"/><text x="68.2580%" y="1391.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (22 samples, 0.74%)</title><rect x="68.0416%" y="1365" width="0.7378%" height="15" fill="rgb(216,153,54)" fg:x="2029" fg:w="22"/><text x="68.2916%" y="1375.50"></text></g><g><title>wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (22 samples, 0.74%)</title><rect x="68.0416%" y="1349" width="0.7378%" height="15" fill="rgb(250,99,7)" fg:x="2029" fg:w="22"/><text x="68.2916%" y="1359.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="68.7458%" y="1333" width="0.0335%" height="15" fill="rgb(207,56,50)" fg:x="2050" fg:w="1"/><text x="68.9958%" y="1343.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="68.8129%" y="1333" width="0.0335%" height="15" fill="rgb(244,61,34)" fg:x="2052" fg:w="1"/><text x="69.0629%" y="1343.50"></text></g><g><title>pixels::Pixels::render (937 samples, 31.42%)</title><rect x="37.4581%" y="1413" width="31.4219%" height="15" fill="rgb(241,50,38)" fg:x="1117" fg:w="937"/><text x="37.7081%" y="1423.50">pixels::Pixels::render</text></g><g><title>wgpu::Texture::create_view (3 samples, 0.10%)</title><rect x="68.7793%" y="1397" width="0.1006%" height="15" fill="rgb(212,166,30)" fg:x="2051" fg:w="3"/><text x="69.0293%" y="1407.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_create_view (3 samples, 0.10%)</title><rect x="68.7793%" y="1381" width="0.1006%" height="15" fill="rgb(249,127,32)" fg:x="2051" fg:w="3"/><text x="69.0293%" y="1391.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (2 samples, 0.07%)</title><rect x="68.8129%" y="1365" width="0.0671%" height="15" fill="rgb(209,103,0)" fg:x="2052" fg:w="2"/><text x="69.0629%" y="1375.50"></text></g><g><title>wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (2 samples, 0.07%)</title><rect x="68.8129%" y="1349" width="0.0671%" height="15" fill="rgb(238,209,51)" fg:x="2052" fg:w="2"/><text x="69.0629%" y="1359.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (1 samples, 0.03%)</title><rect x="68.8464%" y="1333" width="0.0335%" height="15" fill="rgb(237,56,23)" fg:x="2053" fg:w="1"/><text x="69.0964%" y="1343.50"></text></g><g><title>__CFMachMessageCheckForAndDestroyUnsentMessage (1 samples, 0.03%)</title><rect x="68.9135%" y="1381" width="0.0335%" height="15" fill="rgb(215,153,46)" fg:x="2055" fg:w="1"/><text x="69.1635%" y="1391.50"></text></g><g><title>pcls::main::_{{closure}} (1,672 samples, 56.07%)</title><rect x="13.0114%" y="1429" width="56.0698%" height="15" fill="rgb(224,49,31)" fg:x="388" fg:w="1672"/><text x="13.2614%" y="1439.50">pcls::main::_{{closure}}</text></g><g><title>winit::platform_impl::platform::app_state::AppState::queue_redraw (6 samples, 0.20%)</title><rect x="68.8799%" y="1413" width="0.2012%" height="15" fill="rgb(250,18,42)" fg:x="2054" fg:w="6"/><text x="69.1299%" y="1423.50"></text></g><g><title>CFRunLoopWakeUp (5 samples, 0.17%)</title><rect x="68.9135%" y="1397" width="0.1677%" height="15" fill="rgb(215,176,39)" fg:x="2055" fg:w="5"/><text x="69.1635%" y="1407.50"></text></g><g><title>mach_msg (4 samples, 0.13%)</title><rect x="68.9470%" y="1381" width="0.1341%" height="15" fill="rgb(223,77,29)" fg:x="2056" fg:w="4"/><text x="69.1970%" y="1391.50"></text></g><g><title>mach_msg_overwrite (4 samples, 0.13%)</title><rect x="68.9470%" y="1365" width="0.1341%" height="15" fill="rgb(234,94,52)" fg:x="2056" fg:w="4"/><text x="69.1970%" y="1375.50"></text></g><g><title>mach_msg2_internal (4 samples, 0.13%)</title><rect x="68.9470%" y="1349" width="0.1341%" height="15" fill="rgb(220,154,50)" fg:x="2056" fg:w="4"/><text x="69.1970%" y="1359.50"></text></g><g><title>mach_msg2_trap (4 samples, 0.13%)</title><rect x="68.9470%" y="1333" width="0.1341%" height="15" fill="rgb(212,11,10)" fg:x="2056" fg:w="4"/><text x="69.1970%" y="1343.50"></text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (1,701 samples, 57.04%)</title><rect x="12.0724%" y="1509" width="57.0423%" height="15" fill="rgb(205,166,19)" fg:x="360" fg:w="1701"/><text x="12.3224%" y="1519.50">__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>winit::platform_impl::platform::observer::control_flow_end_handler (1,681 samples, 56.37%)</title><rect x="12.7431%" y="1493" width="56.3716%" height="15" fill="rgb(244,198,16)" fg:x="380" fg:w="1681"/><text x="12.9931%" y="1503.50">winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>winit::platform_impl::platform::app_state::AppState::cleared (1,681 samples, 56.37%)</title><rect x="12.7431%" y="1477" width="56.3716%" height="15" fill="rgb(219,69,12)" fg:x="380" fg:w="1681"/><text x="12.9931%" y="1487.50">winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (1,676 samples, 56.20%)</title><rect x="12.9108%" y="1461" width="56.2039%" height="15" fill="rgb(245,30,7)" fg:x="385" fg:w="1676"/><text x="13.1608%" y="1471.50">winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (1,676 samples, 56.20%)</title><rect x="12.9108%" y="1445" width="56.2039%" height="15" fill="rgb(218,221,48)" fg:x="385" fg:w="1676"/><text x="13.1608%" y="1455.50">&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::plat..</text></g><g><title>winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (1 samples, 0.03%)</title><rect x="69.0812%" y="1429" width="0.0335%" height="15" fill="rgb(216,66,15)" fg:x="2060" fg:w="1"/><text x="69.3312%" y="1439.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.03%)</title><rect x="69.1147%" y="1509" width="0.0335%" height="15" fill="rgb(226,122,50)" fg:x="2061" fg:w="1"/><text x="69.3647%" y="1519.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="69.1482%" y="1509" width="0.0335%" height="15" fill="rgb(239,156,16)" fg:x="2062" fg:w="1"/><text x="69.3982%" y="1519.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="69.1818%" y="1509" width="0.0335%" height="15" fill="rgb(224,27,38)" fg:x="2063" fg:w="1"/><text x="69.4318%" y="1519.50"></text></g><g><title>__CFRunLoopDoObservers (1,708 samples, 57.28%)</title><rect x="11.9718%" y="1525" width="57.2770%" height="15" fill="rgb(224,39,27)" fg:x="357" fg:w="1708"/><text x="12.2218%" y="1535.50">__CFRunLoopDoObservers</text></g><g><title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="69.2153%" y="1509" width="0.0335%" height="15" fill="rgb(215,92,29)" fg:x="2064" fg:w="1"/><text x="69.4653%" y="1519.50"></text></g><g><title>__CFRunLoopDoSource1 (1 samples, 0.03%)</title><rect x="69.2488%" y="1525" width="0.0335%" height="15" fill="rgb(207,159,16)" fg:x="2065" fg:w="1"/><text x="69.4988%" y="1535.50"></text></g><g><title>CFRetain (1 samples, 0.03%)</title><rect x="69.2488%" y="1509" width="0.0335%" height="15" fill="rgb(238,163,47)" fg:x="2065" fg:w="1"/><text x="69.4988%" y="1519.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="69.2488%" y="1493" width="0.0335%" height="15" fill="rgb(219,91,49)" fg:x="2065" fg:w="1"/><text x="69.4988%" y="1503.50"></text></g><g><title>__CFRunLoopDoSources0 (1 samples, 0.03%)</title><rect x="69.2824%" y="1525" width="0.0335%" height="15" fill="rgb(227,167,31)" fg:x="2066" fg:w="1"/><text x="69.5324%" y="1535.50"></text></g><g><title>-[__NSCFArray objectAtIndex:] (1 samples, 0.03%)</title><rect x="69.3159%" y="1509" width="0.0335%" height="15" fill="rgb(234,80,54)" fg:x="2067" fg:w="1"/><text x="69.5659%" y="1519.50"></text></g><g><title>__CFTimeIntervalToTSR (1 samples, 0.03%)</title><rect x="74.0443%" y="1477" width="0.0335%" height="15" fill="rgb(212,114,2)" fg:x="2208" fg:w="1"/><text x="74.2943%" y="1487.50"></text></g><g><title>__CFArmNextTimerInMode (3 samples, 0.10%)</title><rect x="74.0443%" y="1493" width="0.1006%" height="15" fill="rgb(234,50,24)" fg:x="2208" fg:w="3"/><text x="74.2943%" y="1503.50"></text></g><g><title>mk_timer_arm (2 samples, 0.07%)</title><rect x="74.0778%" y="1477" width="0.0671%" height="15" fill="rgb(221,68,8)" fg:x="2209" fg:w="2"/><text x="74.3278%" y="1487.50"></text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ (1 samples, 0.03%)</title><rect x="74.1449%" y="1493" width="0.0335%" height="15" fill="rgb(254,180,31)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1503.50"></text></g><g><title>-[NSApplication(NSQuietSafeQuit) _updateCanQuitQuietlyAndSafely] (1 samples, 0.03%)</title><rect x="74.1449%" y="1477" width="0.0335%" height="15" fill="rgb(247,130,50)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1487.50"></text></g><g><title>_LSSetApplicationInformationItem (1 samples, 0.03%)</title><rect x="74.1449%" y="1461" width="0.0335%" height="15" fill="rgb(211,109,4)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1471.50"></text></g><g><title>_LSSetApplicationInformation (1 samples, 0.03%)</title><rect x="74.1449%" y="1445" width="0.0335%" height="15" fill="rgb(238,50,21)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1455.50"></text></g><g><title>LSClientToServerConnection::sendWithReply(void*) (1 samples, 0.03%)</title><rect x="74.1449%" y="1429" width="0.0335%" height="15" fill="rgb(225,57,45)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1439.50"></text></g><g><title>xpc_connection_send_message_with_reply_sync (1 samples, 0.03%)</title><rect x="74.1449%" y="1413" width="0.0335%" height="15" fill="rgb(209,196,50)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1423.50"></text></g><g><title>dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.03%)</title><rect x="74.1449%" y="1397" width="0.0335%" height="15" fill="rgb(242,140,13)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1407.50"></text></g><g><title>_dispatch_mach_send_and_wait_for_reply (1 samples, 0.03%)</title><rect x="74.1449%" y="1381" width="0.0335%" height="15" fill="rgb(217,111,7)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1391.50"></text></g><g><title>_dispatch_mach_send_msg (1 samples, 0.03%)</title><rect x="74.1449%" y="1365" width="0.0335%" height="15" fill="rgb(253,193,51)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1375.50"></text></g><g><title>_dispatch_mach_send_drain (1 samples, 0.03%)</title><rect x="74.1449%" y="1349" width="0.0335%" height="15" fill="rgb(252,70,29)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1359.50"></text></g><g><title>_dispatch_mach_msg_send (1 samples, 0.03%)</title><rect x="74.1449%" y="1333" width="0.0335%" height="15" fill="rgb(232,127,12)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1343.50"></text></g><g><title>mach_msg2_internal (1 samples, 0.03%)</title><rect x="74.1449%" y="1317" width="0.0335%" height="15" fill="rgb(211,180,21)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1327.50"></text></g><g><title>mach_msg2_trap (1 samples, 0.03%)</title><rect x="74.1449%" y="1301" width="0.0335%" height="15" fill="rgb(229,72,13)" fg:x="2211" fg:w="1"/><text x="74.3949%" y="1311.50"></text></g><g><title>CFArrayGetFirstIndexOfValue (1 samples, 0.03%)</title><rect x="74.1784%" y="1477" width="0.0335%" height="15" fill="rgb(240,211,49)" fg:x="2212" fg:w="1"/><text x="74.4284%" y="1487.50"></text></g><g><title>__CFRepositionTimerInMode (4 samples, 0.13%)</title><rect x="74.1784%" y="1493" width="0.1341%" height="15" fill="rgb(219,149,40)" fg:x="2212" fg:w="4"/><text x="74.4284%" y="1503.50"></text></g><g><title>__CFArmNextTimerInMode (3 samples, 0.10%)</title><rect x="74.2119%" y="1477" width="0.1006%" height="15" fill="rgb(210,127,46)" fg:x="2213" fg:w="3"/><text x="74.4619%" y="1487.50"></text></g><g><title>mk_timer_arm (3 samples, 0.10%)</title><rect x="74.2119%" y="1461" width="0.1006%" height="15" fill="rgb(220,106,7)" fg:x="2213" fg:w="3"/><text x="74.4619%" y="1471.50"></text></g><g><title>__CFRunLoopCopyMode (1 samples, 0.03%)</title><rect x="74.3125%" y="1493" width="0.0335%" height="15" fill="rgb(249,31,22)" fg:x="2216" fg:w="1"/><text x="74.5625%" y="1503.50"></text></g><g><title>CFSetGetValue (1 samples, 0.03%)</title><rect x="74.3125%" y="1477" width="0.0335%" height="15" fill="rgb(253,1,49)" fg:x="2216" fg:w="1"/><text x="74.5625%" y="1487.50"></text></g><g><title>___CFBasicHashFindBucket_Linear (1 samples, 0.03%)</title><rect x="74.3125%" y="1461" width="0.0335%" height="15" fill="rgb(227,144,33)" fg:x="2216" fg:w="1"/><text x="74.5625%" y="1471.50"></text></g><g><title>__CFStringHash (1 samples, 0.03%)</title><rect x="74.3125%" y="1445" width="0.0335%" height="15" fill="rgb(249,163,44)" fg:x="2216" fg:w="1"/><text x="74.5625%" y="1455.50"></text></g><g><title>__CFTimeIntervalUntilTSR (1 samples, 0.03%)</title><rect x="74.3461%" y="1493" width="0.0335%" height="15" fill="rgb(234,15,39)" fg:x="2217" fg:w="1"/><text x="74.5961%" y="1503.50"></text></g><g><title>__CFRunLoopDoTimers (152 samples, 5.10%)</title><rect x="69.3159%" y="1525" width="5.0973%" height="15" fill="rgb(207,66,16)" fg:x="2067" fg:w="152"/><text x="69.5659%" y="1535.50">__CFRu..</text></g><g><title>__CFRunLoopDoTimer (151 samples, 5.06%)</title><rect x="69.3494%" y="1509" width="5.0637%" height="15" fill="rgb(233,112,24)" fg:x="2068" fg:w="151"/><text x="69.5994%" y="1519.50">__CFRu..</text></g><g><title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="74.3796%" y="1493" width="0.0335%" height="15" fill="rgb(230,90,22)" fg:x="2218" fg:w="1"/><text x="74.6296%" y="1503.50"></text></g><g><title>__CFRunLoopServiceMachPort (4 samples, 0.13%)</title><rect x="74.4131%" y="1525" width="0.1341%" height="15" fill="rgb(229,61,13)" fg:x="2219" fg:w="4"/><text x="74.6631%" y="1535.50"></text></g><g><title>mach_msg (4 samples, 0.13%)</title><rect x="74.4131%" y="1509" width="0.1341%" height="15" fill="rgb(225,57,24)" fg:x="2219" fg:w="4"/><text x="74.6631%" y="1519.50"></text></g><g><title>mach_msg_overwrite (4 samples, 0.13%)</title><rect x="74.4131%" y="1493" width="0.1341%" height="15" fill="rgb(208,169,48)" fg:x="2219" fg:w="4"/><text x="74.6631%" y="1503.50"></text></g><g><title>mach_msg2_internal (4 samples, 0.13%)</title><rect x="74.4131%" y="1477" width="0.1341%" height="15" fill="rgb(244,218,51)" fg:x="2219" fg:w="4"/><text x="74.6631%" y="1487.50"></text></g><g><title>mach_msg2_trap (4 samples, 0.13%)</title><rect x="74.4131%" y="1461" width="0.1341%" height="15" fill="rgb(214,148,10)" fg:x="2219" fg:w="4"/><text x="74.6631%" y="1471.50"></text></g><g><title>CFRetain (1 samples, 0.03%)</title><rect x="74.5473%" y="1493" width="0.0335%" height="15" fill="rgb(225,174,27)" fg:x="2223" fg:w="1"/><text x="74.7973%" y="1503.50"></text></g><g><title>CFRunLoopCopyCurrentMode (2 samples, 0.07%)</title><rect x="74.5473%" y="1509" width="0.0671%" height="15" fill="rgb(230,96,26)" fg:x="2223" fg:w="2"/><text x="74.7973%" y="1519.50"></text></g><g><title>_CFRetain (1 samples, 0.03%)</title><rect x="74.5808%" y="1493" width="0.0335%" height="15" fill="rgb(232,10,30)" fg:x="2224" fg:w="1"/><text x="74.8308%" y="1503.50"></text></g><g><title>_CFRunLoopCurrentIsMain (1 samples, 0.03%)</title><rect x="74.6144%" y="1509" width="0.0335%" height="15" fill="rgb(222,8,50)" fg:x="2225" fg:w="1"/><text x="74.8644%" y="1519.50"></text></g><g><title>__kdebug_trace64 (1 samples, 0.03%)</title><rect x="74.6479%" y="1509" width="0.0335%" height="15" fill="rgb(213,81,27)" fg:x="2226" fg:w="1"/><text x="74.8979%" y="1519.50"></text></g><g><title>__cftrace_runloop_trace_iteration_start (5 samples, 0.17%)</title><rect x="74.5473%" y="1525" width="0.1677%" height="15" fill="rgb(245,50,10)" fg:x="2223" fg:w="5"/><text x="74.7973%" y="1535.50"></text></g><g><title>kdebug_is_enabled (1 samples, 0.03%)</title><rect x="74.6814%" y="1509" width="0.0335%" height="15" fill="rgb(216,100,18)" fg:x="2227" fg:w="1"/><text x="74.9314%" y="1519.50"></text></g><g><title>__kdebug_trace64 (2 samples, 0.07%)</title><rect x="74.7150%" y="1525" width="0.0671%" height="15" fill="rgb(236,147,54)" fg:x="2228" fg:w="2"/><text x="74.9650%" y="1535.50"></text></g><g><title>mach_port_extract_member (3 samples, 0.10%)</title><rect x="74.7820%" y="1525" width="0.1006%" height="15" fill="rgb(205,143,26)" fg:x="2230" fg:w="3"/><text x="75.0320%" y="1535.50"></text></g><g><title>_kernelrpc_mach_port_extract_member_trap (3 samples, 0.10%)</title><rect x="74.7820%" y="1509" width="0.1006%" height="15" fill="rgb(236,26,9)" fg:x="2230" fg:w="3"/><text x="75.0320%" y="1519.50"></text></g><g><title>__CFRunLoopRun (1,889 samples, 63.35%)</title><rect x="11.6365%" y="1541" width="63.3467%" height="15" fill="rgb(221,165,53)" fg:x="347" fg:w="1889"/><text x="11.8865%" y="1551.50">__CFRunLoopRun</text></g><g><title>mach_port_insert_member (3 samples, 0.10%)</title><rect x="74.8826%" y="1525" width="0.1006%" height="15" fill="rgb(214,110,17)" fg:x="2233" fg:w="3"/><text x="75.1326%" y="1535.50"></text></g><g><title>_kernelrpc_mach_port_insert_member_trap (3 samples, 0.10%)</title><rect x="74.8826%" y="1509" width="0.1006%" height="15" fill="rgb(237,197,12)" fg:x="2233" fg:w="3"/><text x="75.1326%" y="1519.50"></text></g><g><title>CFRunLoopRunSpecific (1,962 samples, 65.79%)</title><rect x="9.2555%" y="1557" width="65.7948%" height="15" fill="rgb(205,84,17)" fg:x="276" fg:w="1962"/><text x="9.5055%" y="1567.50">CFRunLoopRunSpecific</text></g><g><title>__kdebug_trace64 (2 samples, 0.07%)</title><rect x="74.9832%" y="1541" width="0.0671%" height="15" fill="rgb(237,18,45)" fg:x="2236" fg:w="2"/><text x="75.2332%" y="1551.50"></text></g><g><title>GetCurrentEventLoop (1 samples, 0.03%)</title><rect x="75.0503%" y="1557" width="0.0335%" height="15" fill="rgb(221,87,14)" fg:x="2238" fg:w="1"/><text x="75.3003%" y="1567.50"></text></g><g><title>DYLD-STUB$$pthread_getspecific (1 samples, 0.03%)</title><rect x="75.0503%" y="1541" width="0.0335%" height="15" fill="rgb(238,186,15)" fg:x="2238" fg:w="1"/><text x="75.3003%" y="1551.50"></text></g><g><title>_FirstEventTime (1 samples, 0.03%)</title><rect x="75.0838%" y="1557" width="0.0335%" height="15" fill="rgb(208,115,11)" fg:x="2239" fg:w="1"/><text x="75.3338%" y="1567.50"></text></g><g><title>HLTBGetEnvironmentVariable (1 samples, 0.03%)</title><rect x="75.0838%" y="1541" width="0.0335%" height="15" fill="rgb(254,175,0)" fg:x="2239" fg:w="1"/><text x="75.3338%" y="1551.50"></text></g><g><title>CFDictionaryGetValueIfPresent (1 samples, 0.03%)</title><rect x="75.0838%" y="1525" width="0.0335%" height="15" fill="rgb(227,24,42)" fg:x="2239" fg:w="1"/><text x="75.3338%" y="1535.50"></text></g><g><title>___CFBasicHashFindBucket_Linear (1 samples, 0.03%)</title><rect x="75.0838%" y="1509" width="0.0335%" height="15" fill="rgb(223,211,37)" fg:x="2239" fg:w="1"/><text x="75.3338%" y="1519.50"></text></g><g><title>-[__NSCFArray objectAtIndex:] (1 samples, 0.03%)</title><rect x="75.1174%" y="1509" width="0.0335%" height="15" fill="rgb(235,49,27)" fg:x="2240" fg:w="1"/><text x="75.3674%" y="1519.50"></text></g><g><title>OUTLINED_FUNCTION_1 (1 samples, 0.03%)</title><rect x="75.1509%" y="1397" width="0.0335%" height="15" fill="rgb(254,97,51)" fg:x="2241" fg:w="1"/><text x="75.4009%" y="1407.50"></text></g><g><title>RetainEventParamData (3 samples, 0.10%)</title><rect x="75.1509%" y="1429" width="0.1006%" height="15" fill="rgb(249,51,40)" fg:x="2241" fg:w="3"/><text x="75.4009%" y="1439.50"></text></g><g><title>TypeManager::Retain(unsigned int, unsigned int, unsigned long, void const*) (3 samples, 0.10%)</title><rect x="75.1509%" y="1413" width="0.1006%" height="15" fill="rgb(210,128,45)" fg:x="2241" fg:w="3"/><text x="75.4009%" y="1423.50"></text></g><g><title>TypeManager::FindCallbacks(unsigned int, unsigned char, HITypeCompressedCallBacks*) (2 samples, 0.07%)</title><rect x="75.1844%" y="1397" width="0.0671%" height="15" fill="rgb(224,137,50)" fg:x="2242" fg:w="2"/><text x="75.4344%" y="1407.50"></text></g><g><title>GetCollectionItem (1 samples, 0.03%)</title><rect x="75.2180%" y="1381" width="0.0335%" height="15" fill="rgb(242,15,9)" fg:x="2243" fg:w="1"/><text x="75.4680%" y="1391.50"></text></g><g><title>GetCMItem(OpaqueCollection*, int, int*, void*) (1 samples, 0.03%)</title><rect x="75.2180%" y="1365" width="0.0335%" height="15" fill="rgb(233,187,41)" fg:x="2243" fg:w="1"/><text x="75.4680%" y="1375.50"></text></g><g><title>CreateMouseButtonEventFromCGEvent(__CGEvent*, OpaqueEventRef**, OpaqueWindowPtr**) (4 samples, 0.13%)</title><rect x="75.1509%" y="1477" width="0.1341%" height="15" fill="rgb(227,2,29)" fg:x="2241" fg:w="4"/><text x="75.4009%" y="1487.50"></text></g><g><title>CreateMouseEvent (4 samples, 0.13%)</title><rect x="75.1509%" y="1461" width="0.1341%" height="15" fill="rgb(222,70,3)" fg:x="2241" fg:w="4"/><text x="75.4009%" y="1471.50"></text></g><g><title>SetEventParameter (4 samples, 0.13%)</title><rect x="75.1509%" y="1445" width="0.1341%" height="15" fill="rgb(213,11,42)" fg:x="2241" fg:w="4"/><text x="75.4009%" y="1455.50"></text></g><g><title>StoreEventParam (1 samples, 0.03%)</title><rect x="75.2515%" y="1429" width="0.0335%" height="15" fill="rgb(225,150,9)" fg:x="2244" fg:w="1"/><text x="75.5015%" y="1439.50"></text></g><g><title>CreateEventWithCGEvent (6 samples, 0.20%)</title><rect x="75.1509%" y="1493" width="0.2012%" height="15" fill="rgb(230,162,45)" fg:x="2241" fg:w="6"/><text x="75.4009%" y="1503.50"></text></g><g><title>TSMAdjustDoubleTapAction (2 samples, 0.07%)</title><rect x="75.2850%" y="1477" width="0.0671%" height="15" fill="rgb(222,14,52)" fg:x="2245" fg:w="2"/><text x="75.5350%" y="1487.50"></text></g><g><title>PostEventToQueueInternal (1 samples, 0.03%)</title><rect x="75.3521%" y="1493" width="0.0335%" height="15" fill="rgb(254,198,14)" fg:x="2247" fg:w="1"/><text x="75.6021%" y="1503.50"></text></g><g><title>_NotifyEventLoopObservers (1 samples, 0.03%)</title><rect x="75.3521%" y="1477" width="0.0335%" height="15" fill="rgb(220,217,30)" fg:x="2247" fg:w="1"/><text x="75.6021%" y="1487.50"></text></g><g><title>_NotifyEventLoopObservers (1 samples, 0.03%)</title><rect x="75.3521%" y="1461" width="0.0335%" height="15" fill="rgb(215,146,41)" fg:x="2247" fg:w="1"/><text x="75.6021%" y="1471.50"></text></g><g><title>CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (8 samples, 0.27%)</title><rect x="75.1509%" y="1509" width="0.2683%" height="15" fill="rgb(217,27,36)" fg:x="2241" fg:w="8"/><text x="75.4009%" y="1519.50"></text></g><g><title>ReleaseEvent (1 samples, 0.03%)</title><rect x="75.3856%" y="1493" width="0.0335%" height="15" fill="rgb(219,218,39)" fg:x="2248" fg:w="1"/><text x="75.6356%" y="1503.50"></text></g><g><title>ReleaseEventParam (1 samples, 0.03%)</title><rect x="75.3856%" y="1477" width="0.0335%" height="15" fill="rgb(219,4,42)" fg:x="2248" fg:w="1"/><text x="75.6356%" y="1487.50"></text></g><g><title>PingEventQueueMachPort (5 samples, 0.17%)</title><rect x="75.4192%" y="1509" width="0.1677%" height="15" fill="rgb(249,119,36)" fg:x="2249" fg:w="5"/><text x="75.6692%" y="1519.50"></text></g><g><title>mach_msg (5 samples, 0.17%)</title><rect x="75.4192%" y="1493" width="0.1677%" height="15" fill="rgb(209,23,33)" fg:x="2249" fg:w="5"/><text x="75.6692%" y="1503.50"></text></g><g><title>mach_msg_overwrite (5 samples, 0.17%)</title><rect x="75.4192%" y="1477" width="0.1677%" height="15" fill="rgb(211,10,0)" fg:x="2249" fg:w="5"/><text x="75.6692%" y="1487.50"></text></g><g><title>mach_msg2_internal (5 samples, 0.17%)</title><rect x="75.4192%" y="1461" width="0.1677%" height="15" fill="rgb(208,99,37)" fg:x="2249" fg:w="5"/><text x="75.6692%" y="1471.50"></text></g><g><title>mach_msg2_trap (5 samples, 0.17%)</title><rect x="75.4192%" y="1445" width="0.1677%" height="15" fill="rgb(213,132,31)" fg:x="2249" fg:w="5"/><text x="75.6692%" y="1455.50"></text></g><g><title>CFRelease (1 samples, 0.03%)</title><rect x="75.6204%" y="1477" width="0.0335%" height="15" fill="rgb(243,129,40)" fg:x="2255" fg:w="1"/><text x="75.8704%" y="1487.50"></text></g><g><title>Convert1CGEvent(unsigned char) (17 samples, 0.57%)</title><rect x="75.1174%" y="1525" width="0.5701%" height="15" fill="rgb(210,66,33)" fg:x="2240" fg:w="17"/><text x="75.3674%" y="1535.50"></text></g><g><title>_RemoveCGEventFromQueue (3 samples, 0.10%)</title><rect x="75.5869%" y="1509" width="0.1006%" height="15" fill="rgb(209,189,4)" fg:x="2254" fg:w="3"/><text x="75.8369%" y="1519.50"></text></g><g><title>ForEachCGQEntryEventDo(unsigned int (CGQEntry*) block_pointer) (2 samples, 0.07%)</title><rect x="75.6204%" y="1493" width="0.0671%" height="15" fill="rgb(214,107,37)" fg:x="2255" fg:w="2"/><text x="75.8704%" y="1503.50"></text></g><g><title>_CFArrayReplaceValues (1 samples, 0.03%)</title><rect x="75.6539%" y="1477" width="0.0335%" height="15" fill="rgb(245,88,54)" fg:x="2256" fg:w="1"/><text x="75.9039%" y="1487.50"></text></g><g><title>__CFArrayReleaseValues (1 samples, 0.03%)</title><rect x="75.6539%" y="1461" width="0.0335%" height="15" fill="rgb(205,146,20)" fg:x="2256" fg:w="1"/><text x="75.9039%" y="1471.50"></text></g><g><title>RunCurrentEventLoopInMode (1,982 samples, 66.47%)</title><rect x="9.2555%" y="1573" width="66.4655%" height="15" fill="rgb(220,161,25)" fg:x="276" fg:w="1982"/><text x="9.5055%" y="1583.50">RunCurrentEventLoopInMode</text></g><g><title>_NotifyEventLoopObservers (18 samples, 0.60%)</title><rect x="75.1174%" y="1557" width="0.6036%" height="15" fill="rgb(215,152,15)" fg:x="2240" fg:w="18"/><text x="75.3674%" y="1567.50"></text></g><g><title>MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (18 samples, 0.60%)</title><rect x="75.1174%" y="1541" width="0.6036%" height="15" fill="rgb(233,192,44)" fg:x="2240" fg:w="18"/><text x="75.3674%" y="1551.50"></text></g><g><title>DYLD-STUB$$pthread_mutex_lock (1 samples, 0.03%)</title><rect x="75.6875%" y="1525" width="0.0335%" height="15" fill="rgb(240,170,46)" fg:x="2257" fg:w="1"/><text x="75.9375%" y="1535.50"></text></g><g><title>_objc_rootDealloc (1 samples, 0.03%)</title><rect x="75.7210%" y="1493" width="0.0335%" height="15" fill="rgb(207,104,33)" fg:x="2258" fg:w="1"/><text x="75.9710%" y="1503.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (1 samples, 0.03%)</title><rect x="75.7210%" y="1477" width="0.0335%" height="15" fill="rgb(219,21,39)" fg:x="2258" fg:w="1"/><text x="75.9710%" y="1487.50"></text></g><g><title>objc_object::sidetable_clearDeallocating() (1 samples, 0.03%)</title><rect x="75.7210%" y="1461" width="0.0335%" height="15" fill="rgb(214,133,29)" fg:x="2258" fg:w="1"/><text x="75.9710%" y="1471.50"></text></g><g><title>objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;, DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;::find(DisguisedPtr&lt;objc_object const&gt; const&amp;) (1 samples, 0.03%)</title><rect x="75.7210%" y="1445" width="0.0335%" height="15" fill="rgb(226,93,6)" fg:x="2258" fg:w="1"/><text x="75.9710%" y="1455.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;, DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object const&gt;&gt;(DisguisedPtr&lt;objc_object const&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;*&amp;) (1 samples, 0.03%)</title><rect x="75.7210%" y="1429" width="0.0335%" height="15" fill="rgb(252,222,34)" fg:x="2258" fg:w="1"/><text x="75.9710%" y="1439.50"></text></g><g><title>-[OS_voucher release] (3 samples, 0.10%)</title><rect x="75.7210%" y="1541" width="0.1006%" height="15" fill="rgb(252,92,48)" fg:x="2258" fg:w="3"/><text x="75.9710%" y="1551.50"></text></g><g><title>_voucher_xref_dispose (3 samples, 0.10%)</title><rect x="75.7210%" y="1525" width="0.1006%" height="15" fill="rgb(245,223,24)" fg:x="2258" fg:w="3"/><text x="75.9710%" y="1535.50"></text></g><g><title>-[OS_voucher dealloc] (3 samples, 0.10%)</title><rect x="75.7210%" y="1509" width="0.1006%" height="15" fill="rgb(205,176,3)" fg:x="2258" fg:w="3"/><text x="75.9710%" y="1519.50"></text></g><g><title>_voucher_dispose (2 samples, 0.07%)</title><rect x="75.7545%" y="1493" width="0.0671%" height="15" fill="rgb(235,151,15)" fg:x="2259" fg:w="2"/><text x="76.0045%" y="1503.50"></text></g><g><title>_voucher_dealloc_mach_voucher (2 samples, 0.07%)</title><rect x="75.7545%" y="1477" width="0.0671%" height="15" fill="rgb(237,209,11)" fg:x="2259" fg:w="2"/><text x="76.0045%" y="1487.50"></text></g><g><title>mach_port_deallocate (2 samples, 0.07%)</title><rect x="75.7545%" y="1461" width="0.0671%" height="15" fill="rgb(243,227,24)" fg:x="2259" fg:w="2"/><text x="76.0045%" y="1471.50"></text></g><g><title>_kernelrpc_mach_port_deallocate_trap (2 samples, 0.07%)</title><rect x="75.7545%" y="1445" width="0.0671%" height="15" fill="rgb(239,193,16)" fg:x="2259" fg:w="2"/><text x="76.0045%" y="1455.50"></text></g><g><title>__CFAllocatorSystemDeallocate (1 samples, 0.03%)</title><rect x="75.8216%" y="1541" width="0.0335%" height="15" fill="rgb(231,27,9)" fg:x="2261" fg:w="1"/><text x="76.0716%" y="1551.50"></text></g><g><title>_BlockUntilNextEventMatchingListInModeWithFilter (1,993 samples, 66.83%)</title><rect x="9.0879%" y="1605" width="66.8343%" height="15" fill="rgb(219,169,10)" fg:x="271" fg:w="1993"/><text x="9.3379%" y="1615.50">_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>ReceiveNextEventCommon (1,993 samples, 66.83%)</title><rect x="9.0879%" y="1589" width="66.8343%" height="15" fill="rgb(244,229,43)" fg:x="271" fg:w="1993"/><text x="9.3379%" y="1599.50">ReceiveNextEventCommon</text></g><g><title>_DropPendingBoost (6 samples, 0.20%)</title><rect x="75.7210%" y="1573" width="0.2012%" height="15" fill="rgb(254,38,20)" fg:x="2258" fg:w="6"/><text x="75.9710%" y="1583.50"></text></g><g><title>_CFRelease (6 samples, 0.20%)</title><rect x="75.7210%" y="1557" width="0.2012%" height="15" fill="rgb(250,47,30)" fg:x="2258" fg:w="6"/><text x="75.9710%" y="1567.50"></text></g><g><title>__CFMachPortBoostDeallocate (2 samples, 0.07%)</title><rect x="75.8551%" y="1541" width="0.0671%" height="15" fill="rgb(224,124,36)" fg:x="2262" fg:w="2"/><text x="76.1051%" y="1551.50"></text></g><g><title>voucher_decrement_importance_count4CF (2 samples, 0.07%)</title><rect x="75.8551%" y="1525" width="0.0671%" height="15" fill="rgb(246,68,51)" fg:x="2262" fg:w="2"/><text x="76.1051%" y="1535.50"></text></g><g><title>mach_voucher_attr_command (2 samples, 0.07%)</title><rect x="75.8551%" y="1509" width="0.0671%" height="15" fill="rgb(253,43,49)" fg:x="2262" fg:w="2"/><text x="76.1051%" y="1519.50"></text></g><g><title>mach_msg2_internal (2 samples, 0.07%)</title><rect x="75.8551%" y="1493" width="0.0671%" height="15" fill="rgb(219,54,36)" fg:x="2262" fg:w="2"/><text x="76.1051%" y="1503.50"></text></g><g><title>mach_msg2_trap (2 samples, 0.07%)</title><rect x="75.8551%" y="1477" width="0.0671%" height="15" fill="rgb(227,133,34)" fg:x="2262" fg:w="2"/><text x="76.1051%" y="1487.50"></text></g><g><title>_DPSNextEvent (2,007 samples, 67.30%)</title><rect x="8.6519%" y="1621" width="67.3038%" height="15" fill="rgb(247,227,15)" fg:x="258" fg:w="2007"/><text x="8.9019%" y="1631.50">_DPSNextEvent</text></g><g><title>_DPSNextEvent (1 samples, 0.03%)</title><rect x="75.9222%" y="1605" width="0.0335%" height="15" fill="rgb(229,96,14)" fg:x="2264" fg:w="1"/><text x="76.1722%" y="1615.50"></text></g><g><title>SLEventGetIntegerValueField (1 samples, 0.03%)</title><rect x="75.9557%" y="1605" width="0.0335%" height="15" fill="rgb(220,79,17)" fg:x="2265" fg:w="1"/><text x="76.2057%" y="1615.50"></text></g><g><title>_NSEventMarkCATransactionInputTime (2 samples, 0.07%)</title><rect x="75.9557%" y="1621" width="0.0671%" height="15" fill="rgb(205,131,53)" fg:x="2265" fg:w="2"/><text x="76.2057%" y="1631.50"></text></g><g><title>host_to_seconds (1 samples, 0.03%)</title><rect x="75.9893%" y="1605" width="0.0335%" height="15" fill="rgb(209,50,29)" fg:x="2266" fg:w="1"/><text x="76.2393%" y="1615.50"></text></g><g><title>mdict_rehashd (1 samples, 0.03%)</title><rect x="76.0228%" y="1589" width="0.0335%" height="15" fill="rgb(245,86,46)" fg:x="2267" fg:w="1"/><text x="76.2728%" y="1599.50"></text></g><g><title>nanov2_calloc_type (1 samples, 0.03%)</title><rect x="76.0228%" y="1573" width="0.0335%" height="15" fill="rgb(235,66,46)" fg:x="2267" fg:w="1"/><text x="76.2728%" y="1583.50"></text></g><g><title>-[__NSDictionaryM setObject:forKey:] (2 samples, 0.07%)</title><rect x="76.0228%" y="1605" width="0.0671%" height="15" fill="rgb(232,148,31)" fg:x="2267" fg:w="2"/><text x="76.2728%" y="1615.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="76.0563%" y="1589" width="0.0335%" height="15" fill="rgb(217,149,8)" fg:x="2268" fg:w="1"/><text x="76.3063%" y="1599.50"></text></g><g><title>CFPasteboardSetTelemetry (1 samples, 0.03%)</title><rect x="76.0899%" y="1605" width="0.0335%" height="15" fill="rgb(209,183,11)" fg:x="2269" fg:w="1"/><text x="76.3399%" y="1615.50"></text></g><g><title>CFEqual (1 samples, 0.03%)</title><rect x="76.1234%" y="1589" width="0.0335%" height="15" fill="rgb(208,55,20)" fg:x="2270" fg:w="1"/><text x="76.3734%" y="1599.50"></text></g><g><title>CFRelease (1 samples, 0.03%)</title><rect x="76.1569%" y="1589" width="0.0335%" height="15" fill="rgb(218,39,14)" fg:x="2271" fg:w="1"/><text x="76.4069%" y="1599.50"></text></g><g><title>IsLSServerConnected(LSSessionID, bool) (22 samples, 0.74%)</title><rect x="76.1905%" y="1589" width="0.7378%" height="15" fill="rgb(216,169,33)" fg:x="2272" fg:w="22"/><text x="76.4405%" y="1599.50"></text></g><g><title>clientIsAllowedToConnect(__CFDictionary const*) (22 samples, 0.74%)</title><rect x="76.1905%" y="1573" width="0.7378%" height="15" fill="rgb(233,80,24)" fg:x="2272" fg:w="22"/><text x="76.4405%" y="1583.50"></text></g><g><title>_dispatch_lane_barrier_sync_invoke_and_complete (22 samples, 0.74%)</title><rect x="76.1905%" y="1557" width="0.7378%" height="15" fill="rgb(213,179,31)" fg:x="2272" fg:w="22"/><text x="76.4405%" y="1567.50"></text></g><g><title>_dispatch_client_callout (22 samples, 0.74%)</title><rect x="76.1905%" y="1541" width="0.7378%" height="15" fill="rgb(209,19,5)" fg:x="2272" fg:w="22"/><text x="76.4405%" y="1551.50"></text></g><g><title>invocation function for block in clientIsAllowedToConnect(__CFDictionary const*) (22 samples, 0.74%)</title><rect x="76.1905%" y="1525" width="0.7378%" height="15" fill="rgb(219,18,35)" fg:x="2272" fg:w="22"/><text x="76.4405%" y="1535.50"></text></g><g><title>sysctl (22 samples, 0.74%)</title><rect x="76.1905%" y="1509" width="0.7378%" height="15" fill="rgb(209,169,16)" fg:x="2272" fg:w="22"/><text x="76.4405%" y="1519.50"></text></g><g><title>__sysctl (22 samples, 0.74%)</title><rect x="76.1905%" y="1493" width="0.7378%" height="15" fill="rgb(245,90,51)" fg:x="2272" fg:w="22"/><text x="76.4405%" y="1503.50"></text></g><g><title>LSSharedMemoryPage::CopyForSessionID(LSSessionID, bool) (1 samples, 0.03%)</title><rect x="76.9282%" y="1589" width="0.0335%" height="15" fill="rgb(220,99,45)" fg:x="2294" fg:w="1"/><text x="77.1782%" y="1599.50"></text></g><g><title>_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="76.9282%" y="1573" width="0.0335%" height="15" fill="rgb(249,89,25)" fg:x="2294" fg:w="1"/><text x="77.1782%" y="1583.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="76.9282%" y="1557" width="0.0335%" height="15" fill="rgb(239,193,0)" fg:x="2294" fg:w="1"/><text x="77.1782%" y="1567.50"></text></g><g><title>invocation function for block in LSSharedMemoryPage::CopyForSessionID(LSSessionID, bool) (1 samples, 0.03%)</title><rect x="76.9282%" y="1541" width="0.0335%" height="15" fill="rgb(231,126,1)" fg:x="2294" fg:w="1"/><text x="77.1782%" y="1551.50"></text></g><g><title>_LSCopyFrontApplication (26 samples, 0.87%)</title><rect x="76.1234%" y="1605" width="0.8719%" height="15" fill="rgb(243,166,3)" fg:x="2270" fg:w="26"/><text x="76.3734%" y="1615.50"></text></g><g><title>_LSSharedMemoryCopyForSessionID (1 samples, 0.03%)</title><rect x="76.9618%" y="1589" width="0.0335%" height="15" fill="rgb(223,22,34)" fg:x="2295" fg:w="1"/><text x="77.2118%" y="1599.50"></text></g><g><title>_NSDictionaryI_mutableCopyWithZone (1 samples, 0.03%)</title><rect x="76.9953%" y="1605" width="0.0335%" height="15" fill="rgb(251,52,51)" fg:x="2296" fg:w="1"/><text x="77.2453%" y="1615.50"></text></g><g><title>_NSPasteboardSetPasteVerificationTelemetry (1 samples, 0.03%)</title><rect x="77.0288%" y="1605" width="0.0335%" height="15" fill="rgb(221,165,28)" fg:x="2297" fg:w="1"/><text x="77.2788%" y="1615.50"></text></g><g><title>+[NSPasteboard _pasteboardWithName:] (1 samples, 0.03%)</title><rect x="77.0288%" y="1589" width="0.0335%" height="15" fill="rgb(218,121,47)" fg:x="2297" fg:w="1"/><text x="77.2788%" y="1599.50"></text></g><g><title>_NSPasteboardWithNameShouldDisguise (1 samples, 0.03%)</title><rect x="77.0288%" y="1573" width="0.0335%" height="15" fill="rgb(209,120,9)" fg:x="2297" fg:w="1"/><text x="77.2788%" y="1583.50"></text></g><g><title>-[__NSSetI containsObject:] (1 samples, 0.03%)</title><rect x="77.0288%" y="1557" width="0.0335%" height="15" fill="rgb(236,68,12)" fg:x="2297" fg:w="1"/><text x="77.2788%" y="1567.50"></text></g><g><title>objc_msgSend$hash (1 samples, 0.03%)</title><rect x="77.0288%" y="1541" width="0.0335%" height="15" fill="rgb(225,194,26)" fg:x="2297" fg:w="1"/><text x="77.2788%" y="1551.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="77.0624%" y="1605" width="0.0335%" height="15" fill="rgb(231,84,39)" fg:x="2298" fg:w="1"/><text x="77.3124%" y="1615.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="77.0624%" y="1589" width="0.0335%" height="15" fill="rgb(210,11,45)" fg:x="2298" fg:w="1"/><text x="77.3124%" y="1599.50"></text></g><g><title>getMethodFromRelativeList(relative_list_list_t&lt;method_list_t&gt;*, objc_selector*) (1 samples, 0.03%)</title><rect x="77.0624%" y="1573" width="0.0335%" height="15" fill="rgb(224,54,52)" fg:x="2298" fg:w="1"/><text x="77.3124%" y="1583.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="77.0959%" y="1605" width="0.0335%" height="15" fill="rgb(238,102,14)" fg:x="2299" fg:w="1"/><text x="77.3459%" y="1615.50"></text></g><g><title>_NS_SetBasicPasteTelemetry (34 samples, 1.14%)</title><rect x="76.0228%" y="1621" width="1.1402%" height="15" fill="rgb(243,160,52)" fg:x="2267" fg:w="34"/><text x="76.2728%" y="1631.50"></text></g><g><title>objc_retainAutoreleaseReturnValue (1 samples, 0.03%)</title><rect x="77.1294%" y="1605" width="0.0335%" height="15" fill="rgb(216,114,19)" fg:x="2300" fg:w="1"/><text x="77.3794%" y="1615.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="77.1294%" y="1589" width="0.0335%" height="15" fill="rgb(244,166,37)" fg:x="2300" fg:w="1"/><text x="77.3794%" y="1599.50"></text></g><g><title>AutoreleasePoolPage::add(objc_object*) (1 samples, 0.03%)</title><rect x="77.1294%" y="1573" width="0.0335%" height="15" fill="rgb(246,29,44)" fg:x="2300" fg:w="1"/><text x="77.3794%" y="1583.50"></text></g><g><title>_objc_rootAllocWithZone (1 samples, 0.03%)</title><rect x="77.1630%" y="1621" width="0.0335%" height="15" fill="rgb(215,56,53)" fg:x="2301" fg:w="1"/><text x="77.4130%" y="1631.50"></text></g><g><title>nanov2_calloc_type (1 samples, 0.03%)</title><rect x="77.1630%" y="1605" width="0.0335%" height="15" fill="rgb(217,60,2)" fg:x="2301" fg:w="1"/><text x="77.4130%" y="1615.50"></text></g><g><title>objc_autoreleasePoolPop (1 samples, 0.03%)</title><rect x="77.1965%" y="1621" width="0.0335%" height="15" fill="rgb(207,26,24)" fg:x="2302" fg:w="1"/><text x="77.4465%" y="1631.50"></text></g><g><title>AutoreleasePoolPage::releaseUntil(objc_object**) (1 samples, 0.03%)</title><rect x="77.1965%" y="1605" width="0.0335%" height="15" fill="rgb(252,210,15)" fg:x="2302" fg:w="1"/><text x="77.4465%" y="1615.50"></text></g><g><title>-[SLSEventAuthenticationMessage dealloc] (1 samples, 0.03%)</title><rect x="77.1965%" y="1589" width="0.0335%" height="15" fill="rgb(253,209,26)" fg:x="2302" fg:w="1"/><text x="77.4465%" y="1599.50"></text></g><g><title>_nanov2_free (1 samples, 0.03%)</title><rect x="77.1965%" y="1573" width="0.0335%" height="15" fill="rgb(238,170,14)" fg:x="2302" fg:w="1"/><text x="77.4465%" y="1583.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="77.1965%" y="1557" width="0.0335%" height="15" fill="rgb(216,178,15)" fg:x="2302" fg:w="1"/><text x="77.4465%" y="1567.50"></text></g><g><title>-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (2,060 samples, 69.08%)</title><rect x="8.1824%" y="1637" width="69.0812%" height="15" fill="rgb(250,197,2)" fg:x="244" fg:w="2060"/><text x="8.4324%" y="1647.50">-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>objc_msgSend$makeObjectsPerformSelector: (1 samples, 0.03%)</title><rect x="77.2300%" y="1621" width="0.0335%" height="15" fill="rgb(212,70,42)" fg:x="2303" fg:w="1"/><text x="77.4800%" y="1631.50"></text></g><g><title>start (2,137 samples, 71.66%)</title><rect x="5.6338%" y="1765" width="71.6633%" height="15" fill="rgb(227,213,9)" fg:x="168" fg:w="2137"/><text x="5.8838%" y="1775.50">start</text></g><g><title>main (2,135 samples, 71.60%)</title><rect x="5.7009%" y="1749" width="71.5962%" height="15" fill="rgb(245,99,25)" fg:x="170" fg:w="2135"/><text x="5.9509%" y="1759.50">main</text></g><g><title>std::rt::lang_start_internal (2,135 samples, 71.60%)</title><rect x="5.7009%" y="1733" width="71.5962%" height="15" fill="rgb(250,82,29)" fg:x="170" fg:w="2135"/><text x="5.9509%" y="1743.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (2,135 samples, 71.60%)</title><rect x="5.7009%" y="1717" width="71.5962%" height="15" fill="rgb(241,226,54)" fg:x="170" fg:w="2135"/><text x="5.9509%" y="1727.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,135 samples, 71.60%)</title><rect x="5.7009%" y="1701" width="71.5962%" height="15" fill="rgb(221,99,41)" fg:x="170" fg:w="2135"/><text x="5.9509%" y="1711.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>pcls::main (2,135 samples, 71.60%)</title><rect x="5.7009%" y="1685" width="71.5962%" height="15" fill="rgb(213,90,21)" fg:x="170" fg:w="2135"/><text x="5.9509%" y="1695.50">pcls::main</text></g><g><title>winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (2,109 samples, 70.72%)</title><rect x="6.5728%" y="1669" width="70.7243%" height="15" fill="rgb(205,208,24)" fg:x="196" fg:w="2109"/><text x="6.8228%" y="1679.50">winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>-[NSApplication run] (2,109 samples, 70.72%)</title><rect x="6.5728%" y="1653" width="70.7243%" height="15" fill="rgb(246,31,12)" fg:x="196" fg:w="2109"/><text x="6.8228%" y="1663.50">-[NSApplication run]</text></g><g><title>-[NSApplication(NSEventRouting) nextEventMatchingMask:untilDate:inMode:dequeue:] (1 samples, 0.03%)</title><rect x="77.2636%" y="1637" width="0.0335%" height="15" fill="rgb(213,154,6)" fg:x="2304" fg:w="1"/><text x="77.5136%" y="1647.50"></text></g><g><title>_dispatch_kevent_worker_thread (1 samples, 0.03%)</title><rect x="77.3307%" y="1733" width="0.0335%" height="15" fill="rgb(222,163,29)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1743.50"></text></g><g><title>_dispatch_event_loop_merge (1 samples, 0.03%)</title><rect x="77.3307%" y="1717" width="0.0335%" height="15" fill="rgb(227,201,8)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1727.50"></text></g><g><title>_dispatch_mach_notification_merge_msg (1 samples, 0.03%)</title><rect x="77.3307%" y="1701" width="0.0335%" height="15" fill="rgb(233,9,32)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1711.50"></text></g><g><title>libdispatch_internal_protocol_server (1 samples, 0.03%)</title><rect x="77.3307%" y="1685" width="0.0335%" height="15" fill="rgb(217,54,24)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1695.50"></text></g><g><title>_Xmach_notify_send_possible (1 samples, 0.03%)</title><rect x="77.3307%" y="1669" width="0.0335%" height="15" fill="rgb(235,192,0)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1679.50"></text></g><g><title>_dispatch_mach_notify_send_possible (1 samples, 0.03%)</title><rect x="77.3307%" y="1653" width="0.0335%" height="15" fill="rgb(235,45,9)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1663.50"></text></g><g><title>_dispatch_mach_notify_merge (1 samples, 0.03%)</title><rect x="77.3307%" y="1637" width="0.0335%" height="15" fill="rgb(246,42,40)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1647.50"></text></g><g><title>_dispatch_mach_notification_merge_evt (1 samples, 0.03%)</title><rect x="77.3307%" y="1621" width="0.0335%" height="15" fill="rgb(248,111,24)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1631.50"></text></g><g><title>_dispatch_mach_wakeup (1 samples, 0.03%)</title><rect x="77.3307%" y="1605" width="0.0335%" height="15" fill="rgb(249,65,22)" fg:x="2306" fg:w="1"/><text x="77.5807%" y="1615.50"></text></g><g><title>_dispatch_worker_thread2 (1 samples, 0.03%)</title><rect x="77.3642%" y="1733" width="0.0335%" height="15" fill="rgb(238,111,51)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1743.50"></text></g><g><title>_dispatch_root_queue_drain (1 samples, 0.03%)</title><rect x="77.3642%" y="1717" width="0.0335%" height="15" fill="rgb(250,118,22)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1727.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="77.3642%" y="1701" width="0.0335%" height="15" fill="rgb(234,84,26)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1711.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.03%)</title><rect x="77.3642%" y="1685" width="0.0335%" height="15" fill="rgb(243,172,12)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1695.50"></text></g><g><title>_dispatch_call_block_and_release (1 samples, 0.03%)</title><rect x="77.3642%" y="1669" width="0.0335%" height="15" fill="rgb(236,150,49)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1679.50"></text></g><g><title>0x266e9db18 (1 samples, 0.03%)</title><rect x="77.3642%" y="1653" width="0.0335%" height="15" fill="rgb(225,197,26)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1663.50"></text></g><g><title>0x266f13434 (1 samples, 0.03%)</title><rect x="77.3642%" y="1637" width="0.0335%" height="15" fill="rgb(214,17,42)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1647.50"></text></g><g><title>dispatch thunk of XPCSession.send&lt;A&gt;(_:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1621" width="0.0335%" height="15" fill="rgb(224,165,40)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1631.50"></text></g><g><title>XPCSession.send&lt;A&gt;(_:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1605" width="0.0335%" height="15" fill="rgb(246,100,4)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1615.50"></text></g><g><title>static XPCReceivedMessage.encodeMessage&lt;A&gt;(_:isSync:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1589" width="0.0335%" height="15" fill="rgb(222,103,0)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1599.50"></text></g><g><title>XPCEncoder.encode&lt;A&gt;(_:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1573" width="0.0335%" height="15" fill="rgb(227,189,26)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1583.50"></text></g><g><title>static XPCEncoder.encode&lt;A&gt;(_:withCodingMetadata:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1557" width="0.0335%" height="15" fill="rgb(214,202,17)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1567.50"></text></g><g><title>dispatch thunk of Encodable.encode(to:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1541" width="0.0335%" height="15" fill="rgb(229,111,3)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1551.50"></text></g><g><title>0x266f5aeac (1 samples, 0.03%)</title><rect x="77.3642%" y="1525" width="0.0335%" height="15" fill="rgb(229,172,15)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1535.50"></text></g><g><title>0x266f5a298 (1 samples, 0.03%)</title><rect x="77.3642%" y="1509" width="0.0335%" height="15" fill="rgb(230,224,35)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1519.50"></text></g><g><title>KeyedEncodingContainer.nestedContainer&lt;A&gt;(keyedBy:forKey:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1493" width="0.0335%" height="15" fill="rgb(251,141,6)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1503.50"></text></g><g><title>_KeyedEncodingContainerBox.nestedContainer&lt;A, B&gt;(keyedBy:forKey:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1477" width="0.0335%" height="15" fill="rgb(225,208,6)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1487.50"></text></g><g><title>protocol witness for KeyedEncodingContainerProtocol.nestedContainer&lt;A&gt;(keyedBy:forKey:) in conformance _XPCKeyedEncodingContainer&lt;A&gt; (1 samples, 0.03%)</title><rect x="77.3642%" y="1461" width="0.0335%" height="15" fill="rgb(246,181,16)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1471.50"></text></g><g><title>_XPCKeyedEncodingContainer.nestedContainer&lt;A&gt;(keyedBy:forKey:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1445" width="0.0335%" height="15" fill="rgb(227,129,36)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1455.50"></text></g><g><title>specialized Dictionary.subscript.setter (1 samples, 0.03%)</title><rect x="77.3642%" y="1429" width="0.0335%" height="15" fill="rgb(248,117,24)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1439.50"></text></g><g><title>specialized _NativeDictionary.setValue(_:forKey:isUnique:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1413" width="0.0335%" height="15" fill="rgb(214,185,35)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1423.50"></text></g><g><title>specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:) (1 samples, 0.03%)</title><rect x="77.3642%" y="1397" width="0.0335%" height="15" fill="rgb(236,150,34)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1407.50"></text></g><g><title>__swift_instantiateConcreteTypeFromMangledName (1 samples, 0.03%)</title><rect x="77.3642%" y="1381" width="0.0335%" height="15" fill="rgb(243,228,27)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1391.50"></text></g><g><title>swift_getTypeByMangledNameInContextImpl(char const*, unsigned long, swift::TargetContextDescriptor&lt;swift::InProcess&gt; const*, void const* const*) (1 samples, 0.03%)</title><rect x="77.3642%" y="1365" width="0.0335%" height="15" fill="rgb(245,77,44)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1375.50"></text></g><g><title>swift_getTypeByMangledName (1 samples, 0.03%)</title><rect x="77.3642%" y="1349" width="0.0335%" height="15" fill="rgb(235,214,42)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1359.50"></text></g><g><title>swift_getTypeByMangledNameImpl(swift::MetadataRequest, __swift::__runtime::llvm::StringRef, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) (1 samples, 0.03%)</title><rect x="77.3642%" y="1333" width="0.0335%" height="15" fill="rgb(221,74,3)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1343.50"></text></g><g><title>swift_getTypeByMangledNode (1 samples, 0.03%)</title><rect x="77.3642%" y="1317" width="0.0335%" height="15" fill="rgb(206,121,29)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1327.50"></text></g><g><title>swift_getTypeByMangledNodeImpl(swift::MetadataRequest, swift::Demangle::__runtime::Demangler&amp;, swift::Demangle::__runtime::Node*, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) (1 samples, 0.03%)</title><rect x="77.3642%" y="1301" width="0.0335%" height="15" fill="rgb(249,131,53)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1311.50"></text></g><g><title>swift::Demangle::__runtime::TypeDecoder&lt;(anonymous namespace)::DecodedMetadataBuilder&gt;::decodeMangledType(swift::Demangle::__runtime::Node*, unsigned int, bool) (1 samples, 0.03%)</title><rect x="77.3642%" y="1285" width="0.0335%" height="15" fill="rgb(236,170,29)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1295.50"></text></g><g><title>(anonymous namespace)::DecodedMetadataBuilder::createBoundGenericType(swift::TargetContextDescriptor&lt;swift::InProcess&gt; const*, __swift::__runtime::llvm::ArrayRef&lt;swift::MetadataPackOrValue&gt;, swift::MetadataPackOrValue) const (1 samples, 0.03%)</title><rect x="77.3642%" y="1269" width="0.0335%" height="15" fill="rgb(247,96,15)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1279.50"></text></g><g><title>_gatherGenericParameters(swift::TargetContextDescriptor&lt;swift::InProcess&gt; const*, __swift::__runtime::llvm::ArrayRef&lt;swift::MetadataPackOrValue&gt;, swift::TargetMetadata&lt;swift::InProcess&gt; const*, __swift::__runtime::llvm::SmallVectorImpl&lt;unsigned int&gt;&amp;, __swift::__runtime::llvm::SmallVectorImpl&lt;void const*&gt;&amp;, swift::Demangle::__runtime::Demangler&amp;) (1 samples, 0.03%)</title><rect x="77.3642%" y="1253" width="0.0335%" height="15" fill="rgb(211,210,7)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1263.50"></text></g><g><title>swift::_checkGenericRequirements(__swift::__runtime::llvm::ArrayRef&lt;swift::GenericParamDescriptor&gt;, __swift::__runtime::llvm::ArrayRef&lt;swift::TargetGenericRequirementDescriptor&lt;swift::InProcess&gt;&gt;, __swift::__runtime::llvm::SmallVectorImpl&lt;void const*&gt;&amp;, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) (1 samples, 0.03%)</title><rect x="77.3642%" y="1237" width="0.0335%" height="15" fill="rgb(240,88,50)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1247.50"></text></g><g><title>checkInvertibleRequirements(swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::InvertibleProtocolSet) (1 samples, 0.03%)</title><rect x="77.3642%" y="1221" width="0.0335%" height="15" fill="rgb(209,229,26)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1231.50"></text></g><g><title>swift::TargetMetadata&lt;swift::InProcess&gt;::getTypeContextDescriptor() const (1 samples, 0.03%)</title><rect x="77.3642%" y="1205" width="0.0335%" height="15" fill="rgb(210,68,23)" fg:x="2307" fg:w="1"/><text x="77.6142%" y="1215.50"></text></g><g><title>_dispatch_kevent_mach_msg_recv (1 samples, 0.03%)</title><rect x="77.5654%" y="1701" width="0.0335%" height="15" fill="rgb(229,180,13)" fg:x="2313" fg:w="1"/><text x="77.8154%" y="1711.50"></text></g><g><title>_dispatch_kevent_merge (2 samples, 0.07%)</title><rect x="77.5989%" y="1701" width="0.0671%" height="15" fill="rgb(236,53,44)" fg:x="2314" fg:w="2"/><text x="77.8489%" y="1711.50"></text></g><g><title>_dispatch_lane_wakeup (1 samples, 0.03%)</title><rect x="77.6660%" y="1701" width="0.0335%" height="15" fill="rgb(244,214,29)" fg:x="2316" fg:w="1"/><text x="77.9160%" y="1711.50"></text></g><g><title>_dispatch_mach_handle_or_push_received_msg (1 samples, 0.03%)</title><rect x="77.7331%" y="1685" width="0.0335%" height="15" fill="rgb(220,75,29)" fg:x="2318" fg:w="1"/><text x="77.9831%" y="1695.50"></text></g><g><title>_dispatch_mach_merge_msg (4 samples, 0.13%)</title><rect x="77.6995%" y="1701" width="0.1341%" height="15" fill="rgb(214,183,37)" fg:x="2317" fg:w="4"/><text x="77.9495%" y="1711.50"></text></g><g><title>dispatch_mach_msg_create (2 samples, 0.07%)</title><rect x="77.7666%" y="1685" width="0.0671%" height="15" fill="rgb(239,117,29)" fg:x="2319" fg:w="2"/><text x="78.0166%" y="1695.50"></text></g><g><title>_os_object_alloc_realized (2 samples, 0.07%)</title><rect x="77.7666%" y="1669" width="0.0671%" height="15" fill="rgb(237,171,35)" fg:x="2319" fg:w="2"/><text x="78.0166%" y="1679.50"></text></g><g><title>class_createInstance (2 samples, 0.07%)</title><rect x="77.7666%" y="1653" width="0.0671%" height="15" fill="rgb(229,178,53)" fg:x="2319" fg:w="2"/><text x="78.0166%" y="1663.50"></text></g><g><title>nanov2_calloc_type (2 samples, 0.07%)</title><rect x="77.7666%" y="1637" width="0.0671%" height="15" fill="rgb(210,102,19)" fg:x="2319" fg:w="2"/><text x="78.0166%" y="1647.50"></text></g><g><title>_dispatch_queue_wakeup (1 samples, 0.03%)</title><rect x="77.8337%" y="1701" width="0.0335%" height="15" fill="rgb(235,127,22)" fg:x="2321" fg:w="1"/><text x="78.0837%" y="1711.50"></text></g><g><title>_dispatch_event_loop_merge (13 samples, 0.44%)</title><rect x="77.4648%" y="1717" width="0.4359%" height="15" fill="rgb(244,31,31)" fg:x="2310" fg:w="13"/><text x="77.7148%" y="1727.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="77.8672%" y="1701" width="0.0335%" height="15" fill="rgb(231,43,21)" fg:x="2322" fg:w="1"/><text x="78.1172%" y="1711.50"></text></g><g><title>_dispatch_event_loop_leave_deferred (3 samples, 0.10%)</title><rect x="77.9007%" y="1701" width="0.1006%" height="15" fill="rgb(217,131,35)" fg:x="2323" fg:w="3"/><text x="78.1507%" y="1711.50"></text></g><g><title>-[__NSMallocBlock__ release] (1 samples, 0.03%)</title><rect x="78.2025%" y="1621" width="0.0335%" height="15" fill="rgb(221,149,4)" fg:x="2332" fg:w="1"/><text x="78.4525%" y="1631.50"></text></g><g><title>_call_dispose_helpers_excp (2 samples, 0.07%)</title><rect x="78.2025%" y="1637" width="0.0671%" height="15" fill="rgb(232,170,28)" fg:x="2332" fg:w="2"/><text x="78.4525%" y="1647.50"></text></g><g><title>_Block_release (1 samples, 0.03%)</title><rect x="78.2361%" y="1621" width="0.0335%" height="15" fill="rgb(238,56,10)" fg:x="2333" fg:w="1"/><text x="78.4861%" y="1631.50"></text></g><g><title>objc_destructInstance (1 samples, 0.03%)</title><rect x="78.2361%" y="1605" width="0.0335%" height="15" fill="rgb(235,196,14)" fg:x="2333" fg:w="1"/><text x="78.4861%" y="1615.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (1 samples, 0.03%)</title><rect x="78.2361%" y="1589" width="0.0335%" height="15" fill="rgb(216,45,48)" fg:x="2333" fg:w="1"/><text x="78.4861%" y="1599.50"></text></g><g><title>_object_remove_associations (1 samples, 0.03%)</title><rect x="78.2361%" y="1573" width="0.0335%" height="15" fill="rgb(238,213,17)" fg:x="2333" fg:w="1"/><text x="78.4861%" y="1583.50"></text></g><g><title>_nanov2_free (1 samples, 0.03%)</title><rect x="78.2696%" y="1637" width="0.0335%" height="15" fill="rgb(212,13,2)" fg:x="2334" fg:w="1"/><text x="78.5196%" y="1647.50"></text></g><g><title>_object_remove_associations (1 samples, 0.03%)</title><rect x="78.3032%" y="1621" width="0.0335%" height="15" fill="rgb(240,114,20)" fg:x="2335" fg:w="1"/><text x="78.5532%" y="1631.50"></text></g><g><title>_object_remove_associations (1 samples, 0.03%)</title><rect x="78.3367%" y="1605" width="0.0335%" height="15" fill="rgb(228,41,40)" fg:x="2336" fg:w="1"/><text x="78.5867%" y="1615.50"></text></g><g><title>objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::find(DisguisedPtr&lt;objc_object&gt; const&amp;) (1 samples, 0.03%)</title><rect x="78.3367%" y="1589" width="0.0335%" height="15" fill="rgb(244,132,35)" fg:x="2336" fg:w="1"/><text x="78.5867%" y="1599.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt;&gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt; const*&amp;) const (1 samples, 0.03%)</title><rect x="78.3367%" y="1573" width="0.0335%" height="15" fill="rgb(253,189,4)" fg:x="2336" fg:w="1"/><text x="78.5867%" y="1583.50"></text></g><g><title>_Block_release (6 samples, 0.20%)</title><rect x="78.2025%" y="1653" width="0.2012%" height="15" fill="rgb(224,37,19)" fg:x="2332" fg:w="6"/><text x="78.4525%" y="1663.50"></text></g><g><title>objc_destructInstance (3 samples, 0.10%)</title><rect x="78.3032%" y="1637" width="0.1006%" height="15" fill="rgb(235,223,18)" fg:x="2335" fg:w="3"/><text x="78.5532%" y="1647.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (2 samples, 0.07%)</title><rect x="78.3367%" y="1621" width="0.0671%" height="15" fill="rgb(235,163,25)" fg:x="2336" fg:w="2"/><text x="78.5867%" y="1631.50"></text></g><g><title>objc_object::sidetable_clearDeallocating() (1 samples, 0.03%)</title><rect x="78.3702%" y="1605" width="0.0335%" height="15" fill="rgb(217,145,28)" fg:x="2337" fg:w="1"/><text x="78.6202%" y="1615.50"></text></g><g><title>dyld4::APIs::dlopen(char const*, int) (1 samples, 0.03%)</title><rect x="78.4038%" y="1525" width="0.0335%" height="15" fill="rgb(223,223,32)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1535.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*) (1 samples, 0.03%)</title><rect x="78.4038%" y="1509" width="0.0335%" height="15" fill="rgb(227,189,39)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1519.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const (1 samples, 0.03%)</title><rect x="78.4038%" y="1493" width="0.0335%" height="15" fill="rgb(248,10,22)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1503.50"></text></g><g><title>void dyld4::RuntimeLocks::withLoadersWriteLockAndProtectedStack&lt;dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()&gt;(dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;())::&apos;lambda&apos;()::operator()() const (1 samples, 0.03%)</title><rect x="78.4038%" y="1477" width="0.0335%" height="15" fill="rgb(248,46,39)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1487.50"></text></g><g><title>dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()::operator()() const (1 samples, 0.03%)</title><rect x="78.4038%" y="1461" width="0.0335%" height="15" fill="rgb(248,113,48)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1471.50"></text></g><g><title>dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;) (1 samples, 0.03%)</title><rect x="78.4038%" y="1445" width="0.0335%" height="15" fill="rgb(245,16,25)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1455.50"></text></g><g><title>dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) (1 samples, 0.03%)</title><rect x="78.4038%" y="1429" width="0.0335%" height="15" fill="rgb(249,152,16)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1439.50"></text></g><g><title>dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, mach_o::Platform, bool, bool, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) const (1 samples, 0.03%)</title><rect x="78.4038%" y="1413" width="0.0335%" height="15" fill="rgb(250,16,1)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1423.50"></text></g><g><title>dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) (1 samples, 0.03%)</title><rect x="78.4038%" y="1397" width="0.0335%" height="15" fill="rgb(249,138,3)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1407.50"></text></g><g><title>invocation function for block in dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;) (1 samples, 0.03%)</title><rect x="78.4038%" y="1381" width="0.0335%" height="15" fill="rgb(227,71,41)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1391.50"></text></g><g><title>dyld4::PrebuiltLoader::matchesPath(dyld4::RuntimeState const&amp;, char const*) const (1 samples, 0.03%)</title><rect x="78.4038%" y="1365" width="0.0335%" height="15" fill="rgb(209,184,23)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1375.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="78.4038%" y="1349" width="0.0335%" height="15" fill="rgb(223,215,31)" fg:x="2338" fg:w="1"/><text x="78.6538%" y="1359.50"></text></g><g><title>__35-[NSDockConnection startConnection]_block_invoke.13 (2 samples, 0.07%)</title><rect x="78.4038%" y="1637" width="0.0671%" height="15" fill="rgb(210,146,28)" fg:x="2338" fg:w="2"/><text x="78.6538%" y="1647.50"></text></g><g><title>-[NSDockConnection _makeConnectionIfNeededWithRetryInterval:onDemand:] (2 samples, 0.07%)</title><rect x="78.4038%" y="1621" width="0.0671%" height="15" fill="rgb(209,183,41)" fg:x="2338" fg:w="2"/><text x="78.6538%" y="1631.50"></text></g><g><title>SLSessionCopyCurrentDictionary (2 samples, 0.07%)</title><rect x="78.4038%" y="1605" width="0.0671%" height="15" fill="rgb(209,224,45)" fg:x="2338" fg:w="2"/><text x="78.6538%" y="1615.50"></text></g><g><title>SLSCopyCurrentSessionPropertiesInternalBridge (2 samples, 0.07%)</title><rect x="78.4038%" y="1589" width="0.0671%" height="15" fill="rgb(224,209,51)" fg:x="2338" fg:w="2"/><text x="78.6538%" y="1599.50"></text></g><g><title>_dispatch_once_callout (2 samples, 0.07%)</title><rect x="78.4038%" y="1573" width="0.0671%" height="15" fill="rgb(223,17,39)" fg:x="2338" fg:w="2"/><text x="78.6538%" y="1583.50"></text></g><g><title>_dispatch_client_callout (2 samples, 0.07%)</title><rect x="78.4038%" y="1557" width="0.0671%" height="15" fill="rgb(234,204,37)" fg:x="2338" fg:w="2"/><text x="78.6538%" y="1567.50"></text></g><g><title>__loginframework_vtable_block_invoke (2 samples, 0.07%)</title><rect x="78.4038%" y="1541" width="0.0671%" height="15" fill="rgb(236,120,5)" fg:x="2338" fg:w="2"/><text x="78.6538%" y="1551.50"></text></g><g><title>dyld4::APIs::dlsym(void*, char const*) (1 samples, 0.03%)</title><rect x="78.4373%" y="1525" width="0.0335%" height="15" fill="rgb(248,97,27)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1535.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1509" width="0.0335%" height="15" fill="rgb(240,66,17)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1519.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1493" width="0.0335%" height="15" fill="rgb(210,79,3)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1503.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1477" width="0.0335%" height="15" fill="rgb(214,176,27)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1487.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1461" width="0.0335%" height="15" fill="rgb(235,185,3)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1471.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1445" width="0.0335%" height="15" fill="rgb(227,24,12)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1455.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1429" width="0.0335%" height="15" fill="rgb(252,169,48)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1439.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1413" width="0.0335%" height="15" fill="rgb(212,65,1)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1423.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.03%)</title><rect x="78.4373%" y="1397" width="0.0335%" height="15" fill="rgb(242,39,24)" fg:x="2339" fg:w="1"/><text x="78.6873%" y="1407.50"></text></g><g><title>+[FPCAMetalLayerState _layerStateForAddress:] (1 samples, 0.03%)</title><rect x="78.4708%" y="1621" width="0.0335%" height="15" fill="rgb(249,32,23)" fg:x="2340" fg:w="1"/><text x="78.7208%" y="1631.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (1 samples, 0.03%)</title><rect x="78.4708%" y="1605" width="0.0335%" height="15" fill="rgb(251,195,23)" fg:x="2340" fg:w="1"/><text x="78.7208%" y="1615.50"></text></g><g><title>-[__NSCFNumber hash] (1 samples, 0.03%)</title><rect x="78.4708%" y="1589" width="0.0335%" height="15" fill="rgb(236,174,8)" fg:x="2340" fg:w="1"/><text x="78.7208%" y="1599.50"></text></g><g><title>-[NSMutableArray sortRange:options:usingComparator:] (1 samples, 0.03%)</title><rect x="78.5044%" y="1605" width="0.0335%" height="15" fill="rgb(220,197,8)" fg:x="2341" fg:w="1"/><text x="78.7544%" y="1615.50"></text></g><g><title>-[__NSArrayM replaceObjectsInRange:withObjects:count:] (1 samples, 0.03%)</title><rect x="78.5044%" y="1589" width="0.0335%" height="15" fill="rgb(240,108,37)" fg:x="2341" fg:w="1"/><text x="78.7544%" y="1599.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="78.5044%" y="1573" width="0.0335%" height="15" fill="rgb(232,176,24)" fg:x="2341" fg:w="1"/><text x="78.7544%" y="1583.50"></text></g><g><title>__142+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:]_block_invoke (2 samples, 0.07%)</title><rect x="78.5044%" y="1621" width="0.0671%" height="15" fill="rgb(243,35,29)" fg:x="2341" fg:w="2"/><text x="78.7544%" y="1631.50"></text></g><g><title>_CFRetain (1 samples, 0.03%)</title><rect x="78.5379%" y="1605" width="0.0335%" height="15" fill="rgb(210,37,18)" fg:x="2342" fg:w="1"/><text x="78.7879%" y="1615.50"></text></g><g><title>-[__NSArrayM removeAllObjects] (1 samples, 0.03%)</title><rect x="78.5714%" y="1605" width="0.0335%" height="15" fill="rgb(224,184,40)" fg:x="2343" fg:w="1"/><text x="78.8214%" y="1615.50"></text></g><g><title>_cow_mutate_slow (1 samples, 0.03%)</title><rect x="78.5714%" y="1589" width="0.0335%" height="15" fill="rgb(236,39,29)" fg:x="2343" fg:w="1"/><text x="78.8214%" y="1599.50"></text></g><g><title>cow_copy_storage (1 samples, 0.03%)</title><rect x="78.5714%" y="1573" width="0.0335%" height="15" fill="rgb(232,48,39)" fg:x="2343" fg:w="1"/><text x="78.8214%" y="1583.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (1 samples, 0.03%)</title><rect x="78.6050%" y="1605" width="0.0335%" height="15" fill="rgb(236,34,42)" fg:x="2344" fg:w="1"/><text x="78.8550%" y="1615.50"></text></g><g><title>-[__NSCFNumber isEqualToNumber:] (1 samples, 0.03%)</title><rect x="78.6050%" y="1589" width="0.0335%" height="15" fill="rgb(243,106,37)" fg:x="2344" fg:w="1"/><text x="78.8550%" y="1599.50"></text></g><g><title>-[__NSCFNumber compare:] (1 samples, 0.03%)</title><rect x="78.6050%" y="1573" width="0.0335%" height="15" fill="rgb(218,96,6)" fg:x="2344" fg:w="1"/><text x="78.8550%" y="1583.50"></text></g><g><title>objc_msgSend$objCType (1 samples, 0.03%)</title><rect x="78.6050%" y="1557" width="0.0335%" height="15" fill="rgb(235,130,12)" fg:x="2344" fg:w="1"/><text x="78.8550%" y="1567.50"></text></g><g><title>__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (6 samples, 0.20%)</title><rect x="78.4708%" y="1637" width="0.2012%" height="15" fill="rgb(231,95,0)" fg:x="2340" fg:w="6"/><text x="78.7208%" y="1647.50"></text></g><g><title>__65+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:]_block_invoke (3 samples, 0.10%)</title><rect x="78.5714%" y="1621" width="0.1006%" height="15" fill="rgb(228,12,23)" fg:x="2343" fg:w="3"/><text x="78.8214%" y="1631.50"></text></g><g><title>__NSArrayM_copy (1 samples, 0.03%)</title><rect x="78.6385%" y="1605" width="0.0335%" height="15" fill="rgb(216,12,1)" fg:x="2345" fg:w="1"/><text x="78.8885%" y="1615.50"></text></g><g><title>_cow_create (1 samples, 0.03%)</title><rect x="78.6385%" y="1589" width="0.0335%" height="15" fill="rgb(219,59,3)" fg:x="2345" fg:w="1"/><text x="78.8885%" y="1599.50"></text></g><g><title>nanov2_calloc_type (1 samples, 0.03%)</title><rect x="78.6385%" y="1573" width="0.0335%" height="15" fill="rgb(215,208,46)" fg:x="2345" fg:w="1"/><text x="78.8885%" y="1583.50"></text></g><g><title>+[NSNumber numberWithUnsignedLongLong:] (1 samples, 0.03%)</title><rect x="78.7056%" y="1605" width="0.0335%" height="15" fill="rgb(254,224,29)" fg:x="2347" fg:w="1"/><text x="78.9556%" y="1615.50"></text></g><g><title>-[__NSCFNumber isEqual:] (1 samples, 0.03%)</title><rect x="78.8062%" y="1589" width="0.0335%" height="15" fill="rgb(232,14,29)" fg:x="2350" fg:w="1"/><text x="79.0562%" y="1599.50"></text></g><g><title>_NSIsNSNumber (1 samples, 0.03%)</title><rect x="78.8062%" y="1573" width="0.0335%" height="15" fill="rgb(208,45,52)" fg:x="2350" fg:w="1"/><text x="79.0562%" y="1583.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (7 samples, 0.23%)</title><rect x="78.7391%" y="1605" width="0.2347%" height="15" fill="rgb(234,191,28)" fg:x="2348" fg:w="7"/><text x="78.9891%" y="1615.50"></text></g><g><title>__CFNumberHash (4 samples, 0.13%)</title><rect x="78.8397%" y="1589" width="0.1341%" height="15" fill="rgb(244,67,43)" fg:x="2351" fg:w="4"/><text x="79.0897%" y="1599.50"></text></g><g><title>__CFNumberGetValue (4 samples, 0.13%)</title><rect x="78.8397%" y="1573" width="0.1341%" height="15" fill="rgb(236,189,24)" fg:x="2351" fg:w="4"/><text x="79.0897%" y="1583.50"></text></g><g><title>objc_retain (1 samples, 0.03%)</title><rect x="78.9738%" y="1605" width="0.0335%" height="15" fill="rgb(239,214,33)" fg:x="2355" fg:w="1"/><text x="79.2238%" y="1615.50"></text></g><g><title>+[FPCAMetalLayerState _commandBufferForAddress:] (10 samples, 0.34%)</title><rect x="78.7056%" y="1621" width="0.3353%" height="15" fill="rgb(226,176,41)" fg:x="2347" fg:w="10"/><text x="78.9556%" y="1631.50"></text></g><g><title>objc_retainAutoreleaseReturnValue (1 samples, 0.03%)</title><rect x="79.0074%" y="1605" width="0.0335%" height="15" fill="rgb(248,47,8)" fg:x="2356" fg:w="1"/><text x="79.2574%" y="1615.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (1 samples, 0.03%)</title><rect x="79.0409%" y="1605" width="0.0335%" height="15" fill="rgb(218,81,44)" fg:x="2357" fg:w="1"/><text x="79.2909%" y="1615.50"></text></g><g><title>_CFNonObjCHash (1 samples, 0.03%)</title><rect x="79.0409%" y="1589" width="0.0335%" height="15" fill="rgb(213,98,6)" fg:x="2357" fg:w="1"/><text x="79.2909%" y="1599.50"></text></g><g><title>__70+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:]_block_invoke (3 samples, 0.10%)</title><rect x="79.0409%" y="1621" width="0.1006%" height="15" fill="rgb(222,85,22)" fg:x="2357" fg:w="3"/><text x="79.2909%" y="1631.50"></text></g><g><title>mdict_removeObjectForKey (2 samples, 0.07%)</title><rect x="79.0744%" y="1605" width="0.0671%" height="15" fill="rgb(239,46,39)" fg:x="2358" fg:w="2"/><text x="79.3244%" y="1615.50"></text></g><g><title>__CFNumberHash (1 samples, 0.03%)</title><rect x="79.1080%" y="1589" width="0.0335%" height="15" fill="rgb(237,12,29)" fg:x="2359" fg:w="1"/><text x="79.3580%" y="1599.50"></text></g><g><title>__CFNumberGetValue (1 samples, 0.03%)</title><rect x="79.1080%" y="1573" width="0.0335%" height="15" fill="rgb(214,77,8)" fg:x="2359" fg:w="1"/><text x="79.3580%" y="1583.50"></text></g><g><title>DYLD-STUB$$free (1 samples, 0.03%)</title><rect x="79.1415%" y="1589" width="0.0335%" height="15" fill="rgb(217,168,37)" fg:x="2360" fg:w="1"/><text x="79.3915%" y="1599.50"></text></g><g><title>-[__NSArrayM insertObject:atIndex:] (2 samples, 0.07%)</title><rect x="79.1415%" y="1605" width="0.0671%" height="15" fill="rgb(221,217,23)" fg:x="2360" fg:w="2"/><text x="79.3915%" y="1615.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="79.1751%" y="1589" width="0.0335%" height="15" fill="rgb(243,229,36)" fg:x="2361" fg:w="1"/><text x="79.4251%" y="1599.50"></text></g><g><title>__55+[FPCAMetalLayerState _updateCommandBufferState:block:]_block_invoke (17 samples, 0.57%)</title><rect x="78.6720%" y="1637" width="0.5701%" height="15" fill="rgb(251,163,40)" fg:x="2346" fg:w="17"/><text x="78.9220%" y="1647.50"></text></g><g><title>__76+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:]_block_invoke (3 samples, 0.10%)</title><rect x="79.1415%" y="1621" width="0.1006%" height="15" fill="rgb(237,222,12)" fg:x="2360" fg:w="3"/><text x="79.3915%" y="1631.50"></text></g><g><title>objc_release (1 samples, 0.03%)</title><rect x="79.2086%" y="1605" width="0.0335%" height="15" fill="rgb(248,132,6)" fg:x="2362" fg:w="1"/><text x="79.4586%" y="1615.50"></text></g><g><title>-[__NSCFNumber isEqualToNumber:] (1 samples, 0.03%)</title><rect x="79.3763%" y="1589" width="0.0335%" height="15" fill="rgb(227,167,50)" fg:x="2367" fg:w="1"/><text x="79.6263%" y="1599.50"></text></g><g><title>-[__NSCFNumber compare:] (1 samples, 0.03%)</title><rect x="79.3763%" y="1573" width="0.0335%" height="15" fill="rgb(242,84,37)" fg:x="2367" fg:w="1"/><text x="79.6263%" y="1583.50"></text></g><g><title>_CFNonObjCHash (1 samples, 0.03%)</title><rect x="79.4098%" y="1589" width="0.0335%" height="15" fill="rgb(212,4,50)" fg:x="2368" fg:w="1"/><text x="79.6598%" y="1599.50"></text></g><g><title>+[FPCAMetalLayerState _commandBufferForAddress:] (7 samples, 0.23%)</title><rect x="79.2757%" y="1621" width="0.2347%" height="15" fill="rgb(230,228,32)" fg:x="2364" fg:w="7"/><text x="79.5257%" y="1631.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (7 samples, 0.23%)</title><rect x="79.2757%" y="1605" width="0.2347%" height="15" fill="rgb(248,217,23)" fg:x="2364" fg:w="7"/><text x="79.5257%" y="1615.50"></text></g><g><title>__CFNumberHash (2 samples, 0.07%)</title><rect x="79.4433%" y="1589" width="0.0671%" height="15" fill="rgb(238,197,32)" fg:x="2369" fg:w="2"/><text x="79.6933%" y="1599.50"></text></g><g><title>__CFNumberGetValue (2 samples, 0.07%)</title><rect x="79.4433%" y="1573" width="0.0671%" height="15" fill="rgb(236,106,1)" fg:x="2369" fg:w="2"/><text x="79.6933%" y="1583.50"></text></g><g><title>DYLD-STUB$$objc_retain (1 samples, 0.03%)</title><rect x="79.5439%" y="1605" width="0.0335%" height="15" fill="rgb(219,228,13)" fg:x="2372" fg:w="1"/><text x="79.7939%" y="1615.50"></text></g><g><title>-[__NSDictionaryM setObject:forKeyedSubscript:] (4 samples, 0.13%)</title><rect x="79.5104%" y="1621" width="0.1341%" height="15" fill="rgb(238,30,35)" fg:x="2371" fg:w="4"/><text x="79.7604%" y="1631.50"></text></g><g><title>__CFNumberHash (2 samples, 0.07%)</title><rect x="79.5775%" y="1605" width="0.0671%" height="15" fill="rgb(236,70,23)" fg:x="2373" fg:w="2"/><text x="79.8275%" y="1615.50"></text></g><g><title>__CFNumberGetValue (2 samples, 0.07%)</title><rect x="79.5775%" y="1589" width="0.0671%" height="15" fill="rgb(249,104,48)" fg:x="2373" fg:w="2"/><text x="79.8275%" y="1599.50"></text></g><g><title>DYLD-STUB$$mach_continuous_time (1 samples, 0.03%)</title><rect x="79.6445%" y="1621" width="0.0335%" height="15" fill="rgb(254,117,50)" fg:x="2375" fg:w="1"/><text x="79.8945%" y="1631.50"></text></g><g><title>_dispatch_call_block_and_release (39 samples, 1.31%)</title><rect x="78.4038%" y="1653" width="1.3078%" height="15" fill="rgb(223,152,4)" fg:x="2338" fg:w="39"/><text x="78.6538%" y="1663.50"></text></g><g><title>__56+[FPCAMetalLayerState commandBufferCreate:creationTime:]_block_invoke (14 samples, 0.47%)</title><rect x="79.2421%" y="1637" width="0.4695%" height="15" fill="rgb(245,6,2)" fg:x="2363" fg:w="14"/><text x="79.4921%" y="1647.50"></text></g><g><title>objc_alloc (1 samples, 0.03%)</title><rect x="79.6781%" y="1621" width="0.0335%" height="15" fill="rgb(249,150,24)" fg:x="2376" fg:w="1"/><text x="79.9281%" y="1631.50"></text></g><g><title>async_collect_callback(void*) (5 samples, 0.17%)</title><rect x="79.7116%" y="1653" width="0.1677%" height="15" fill="rgb(228,185,42)" fg:x="2377" fg:w="5"/><text x="79.9616%" y="1663.50"></text></g><g><title>CABackingStoreCollect (5 samples, 0.17%)</title><rect x="79.7116%" y="1637" width="0.1677%" height="15" fill="rgb(226,39,33)" fg:x="2377" fg:w="5"/><text x="79.9616%" y="1647.50"></text></g><g><title>CABackingStoreCollect_(double, bool) (5 samples, 0.17%)</title><rect x="79.7116%" y="1621" width="0.1677%" height="15" fill="rgb(221,166,19)" fg:x="2377" fg:w="5"/><text x="79.9616%" y="1631.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="79.8457%" y="1605" width="0.0335%" height="15" fill="rgb(209,109,2)" fg:x="2381" fg:w="1"/><text x="80.0957%" y="1615.50"></text></g><g><title>-[NSMutableArray removeObjectsInRange:inArray:range:] (1 samples, 0.03%)</title><rect x="79.8793%" y="1621" width="0.0335%" height="15" fill="rgb(252,216,26)" fg:x="2382" fg:w="1"/><text x="80.1293%" y="1631.50"></text></g><g><title>-[__NSArrayM removeObjectsInRange:] (1 samples, 0.03%)</title><rect x="79.8793%" y="1605" width="0.0335%" height="15" fill="rgb(227,173,36)" fg:x="2382" fg:w="1"/><text x="80.1293%" y="1615.50"></text></g><g><title>-[CAMetalDrawable release] (1 samples, 0.03%)</title><rect x="79.8793%" y="1589" width="0.0335%" height="15" fill="rgb(209,90,7)" fg:x="2382" fg:w="1"/><text x="80.1293%" y="1599.50"></text></g><g><title>objc_msgSend$retainCount (1 samples, 0.03%)</title><rect x="79.8793%" y="1573" width="0.0335%" height="15" fill="rgb(250,194,11)" fg:x="2382" fg:w="1"/><text x="80.1293%" y="1583.50"></text></g><g><title>__NSArrayM_new (1 samples, 0.03%)</title><rect x="79.9128%" y="1621" width="0.0335%" height="15" fill="rgb(220,72,50)" fg:x="2383" fg:w="1"/><text x="80.1628%" y="1631.50"></text></g><g><title>_os_signpost_emit_with_name_impl (1 samples, 0.03%)</title><rect x="79.9463%" y="1621" width="0.0335%" height="15" fill="rgb(222,106,48)" fg:x="2384" fg:w="1"/><text x="80.1963%" y="1631.50"></text></g><g><title>__os_signpost_emit_impl (1 samples, 0.03%)</title><rect x="79.9463%" y="1605" width="0.0335%" height="15" fill="rgb(216,220,45)" fg:x="2384" fg:w="1"/><text x="80.1963%" y="1615.50"></text></g><g><title>_os_log_impl_flatten_and_send (1 samples, 0.03%)</title><rect x="79.9463%" y="1589" width="0.0335%" height="15" fill="rgb(234,112,18)" fg:x="2384" fg:w="1"/><text x="80.1963%" y="1599.50"></text></g><g><title>voucher_activity_trace_v_2 (1 samples, 0.03%)</title><rect x="79.9463%" y="1573" width="0.0335%" height="15" fill="rgb(206,179,9)" fg:x="2384" fg:w="1"/><text x="80.1963%" y="1583.50"></text></g><g><title>+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (1 samples, 0.03%)</title><rect x="79.9799%" y="1605" width="0.0335%" height="15" fill="rgb(215,115,40)" fg:x="2385" fg:w="1"/><text x="80.2299%" y="1615.50"></text></g><g><title>+[FPCAMetalLayerState _updateLayerState:block:] (1 samples, 0.03%)</title><rect x="79.9799%" y="1589" width="0.0335%" height="15" fill="rgb(222,69,34)" fg:x="2385" fg:w="1"/><text x="80.2299%" y="1599.50"></text></g><g><title>_dispatch_event_loop_poke (1 samples, 0.03%)</title><rect x="79.9799%" y="1573" width="0.0335%" height="15" fill="rgb(209,161,10)" fg:x="2385" fg:w="1"/><text x="80.2299%" y="1583.50"></text></g><g><title>_dispatch_kq_poll (1 samples, 0.03%)</title><rect x="79.9799%" y="1557" width="0.0335%" height="15" fill="rgb(217,6,38)" fg:x="2385" fg:w="1"/><text x="80.2299%" y="1567.50"></text></g><g><title>kevent_id (1 samples, 0.03%)</title><rect x="79.9799%" y="1541" width="0.0335%" height="15" fill="rgb(229,229,48)" fg:x="2385" fg:w="1"/><text x="80.2299%" y="1551.50"></text></g><g><title>_dispatch_client_callout (55 samples, 1.84%)</title><rect x="78.2025%" y="1669" width="1.8444%" height="15" fill="rgb(225,21,28)" fg:x="2332" fg:w="55"/><text x="78.4525%" y="1679.50">_..</text></g><g><title>invoke_presented_callback(void*) (5 samples, 0.17%)</title><rect x="79.8793%" y="1653" width="0.1677%" height="15" fill="rgb(206,33,13)" fg:x="2382" fg:w="5"/><text x="80.1293%" y="1663.50"></text></g><g><title>layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (5 samples, 0.17%)</title><rect x="79.8793%" y="1637" width="0.1677%" height="15" fill="rgb(242,178,17)" fg:x="2382" fg:w="5"/><text x="80.1293%" y="1647.50"></text></g><g><title>mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (2 samples, 0.07%)</title><rect x="79.9799%" y="1621" width="0.0671%" height="15" fill="rgb(220,162,5)" fg:x="2385" fg:w="2"/><text x="80.2299%" y="1631.50"></text></g><g><title>_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="80.0134%" y="1605" width="0.0335%" height="15" fill="rgb(210,33,43)" fg:x="2386" fg:w="1"/><text x="80.2634%" y="1615.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.03%)</title><rect x="80.0134%" y="1589" width="0.0335%" height="15" fill="rgb(216,116,54)" fg:x="2386" fg:w="1"/><text x="80.2634%" y="1599.50"></text></g><g><title>getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.03%)</title><rect x="80.0134%" y="1573" width="0.0335%" height="15" fill="rgb(249,92,24)" fg:x="2386" fg:w="1"/><text x="80.2634%" y="1583.50"></text></g><g><title>_dispatch_event_loop_poke (11 samples, 0.37%)</title><rect x="80.1140%" y="1493" width="0.3689%" height="15" fill="rgb(231,189,14)" fg:x="2389" fg:w="11"/><text x="80.3640%" y="1503.50"></text></g><g><title>_dispatch_kq_poll (11 samples, 0.37%)</title><rect x="80.1140%" y="1477" width="0.3689%" height="15" fill="rgb(230,8,41)" fg:x="2389" fg:w="11"/><text x="80.3640%" y="1487.50"></text></g><g><title>kevent_id (10 samples, 0.34%)</title><rect x="80.1476%" y="1461" width="0.3353%" height="15" fill="rgb(249,7,27)" fg:x="2390" fg:w="10"/><text x="80.3976%" y="1471.50"></text></g><g><title>_dispatch_queue_wakeup (1 samples, 0.03%)</title><rect x="80.4829%" y="1493" width="0.0335%" height="15" fill="rgb(232,86,5)" fg:x="2400" fg:w="1"/><text x="80.7329%" y="1503.50"></text></g><g><title>_os_object_retain (1 samples, 0.03%)</title><rect x="80.5164%" y="1493" width="0.0335%" height="15" fill="rgb(224,175,18)" fg:x="2401" fg:w="1"/><text x="80.7664%" y="1503.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (14 samples, 0.47%)</title><rect x="80.1140%" y="1525" width="0.4695%" height="15" fill="rgb(220,129,12)" fg:x="2389" fg:w="14"/><text x="80.3640%" y="1535.50"></text></g><g><title>+[FPCAMetalLayerState _updateCommandBufferState:block:] (14 samples, 0.47%)</title><rect x="80.1140%" y="1509" width="0.4695%" height="15" fill="rgb(210,19,36)" fg:x="2389" fg:w="14"/><text x="80.3640%" y="1519.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="80.5500%" y="1493" width="0.0335%" height="15" fill="rgb(219,96,14)" fg:x="2402" fg:w="1"/><text x="80.8000%" y="1503.50"></text></g><g><title>-[NSConstantDoubleNumber release] (1 samples, 0.03%)</title><rect x="80.5835%" y="1445" width="0.0335%" height="15" fill="rgb(249,106,1)" fg:x="2403" fg:w="1"/><text x="80.8335%" y="1455.50"></text></g><g><title>_call_dispose_helpers_excp (2 samples, 0.07%)</title><rect x="80.5835%" y="1493" width="0.0671%" height="15" fill="rgb(249,155,20)" fg:x="2403" fg:w="2"/><text x="80.8335%" y="1503.50"></text></g><g><title>__destroy_helper_block_e8_32o40o48o (2 samples, 0.07%)</title><rect x="80.5835%" y="1477" width="0.0671%" height="15" fill="rgb(244,168,9)" fg:x="2403" fg:w="2"/><text x="80.8335%" y="1487.50"></text></g><g><title>-[__NSDictionaryI dealloc] (2 samples, 0.07%)</title><rect x="80.5835%" y="1461" width="0.0671%" height="15" fill="rgb(216,23,50)" fg:x="2403" fg:w="2"/><text x="80.8335%" y="1471.50"></text></g><g><title>-[__NSCFBoolean release] (1 samples, 0.03%)</title><rect x="80.6170%" y="1445" width="0.0335%" height="15" fill="rgb(224,219,20)" fg:x="2404" fg:w="1"/><text x="80.8670%" y="1455.50"></text></g><g><title>_Block_release (3 samples, 0.10%)</title><rect x="80.5835%" y="1509" width="0.1006%" height="15" fill="rgb(222,156,15)" fg:x="2403" fg:w="3"/><text x="80.8335%" y="1519.50"></text></g><g><title>objc_destructInstance (1 samples, 0.03%)</title><rect x="80.6506%" y="1493" width="0.0335%" height="15" fill="rgb(231,97,17)" fg:x="2405" fg:w="1"/><text x="80.9006%" y="1503.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (1 samples, 0.03%)</title><rect x="80.6506%" y="1477" width="0.0335%" height="15" fill="rgb(218,70,48)" fg:x="2405" fg:w="1"/><text x="80.9006%" y="1487.50"></text></g><g><title>_object_remove_associations (1 samples, 0.03%)</title><rect x="80.6506%" y="1461" width="0.0335%" height="15" fill="rgb(212,196,52)" fg:x="2405" fg:w="1"/><text x="80.9006%" y="1471.50"></text></g><g><title>objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::find(DisguisedPtr&lt;objc_object&gt; const&amp;) (1 samples, 0.03%)</title><rect x="80.6506%" y="1445" width="0.0335%" height="15" fill="rgb(243,203,18)" fg:x="2405" fg:w="1"/><text x="80.9006%" y="1455.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt;&gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt; const*&amp;) const (1 samples, 0.03%)</title><rect x="80.6506%" y="1429" width="0.0335%" height="15" fill="rgb(252,125,41)" fg:x="2405" fg:w="1"/><text x="80.9006%" y="1439.50"></text></g><g><title>-[CAMetalDrawable presentWithOptions:] (3 samples, 0.10%)</title><rect x="80.6841%" y="1493" width="0.1006%" height="15" fill="rgb(223,180,33)" fg:x="2406" fg:w="3"/><text x="80.9341%" y="1503.50"></text></g><g><title>-[__NSDictionaryI objectForKey:] (3 samples, 0.10%)</title><rect x="80.6841%" y="1477" width="0.1006%" height="15" fill="rgb(254,159,46)" fg:x="2406" fg:w="3"/><text x="80.9341%" y="1487.50"></text></g><g><title>-[__NSCFString isEqual:] (3 samples, 0.10%)</title><rect x="80.6841%" y="1461" width="0.1006%" height="15" fill="rgb(254,38,10)" fg:x="2406" fg:w="3"/><text x="80.9341%" y="1471.50"></text></g><g><title>__CFStringEqual (1 samples, 0.03%)</title><rect x="80.7512%" y="1445" width="0.0335%" height="15" fill="rgb(208,217,32)" fg:x="2408" fg:w="1"/><text x="81.0012%" y="1455.50"></text></g><g><title>_platform_memcmp (1 samples, 0.03%)</title><rect x="80.7512%" y="1429" width="0.0335%" height="15" fill="rgb(221,120,13)" fg:x="2408" fg:w="1"/><text x="81.0012%" y="1439.50"></text></g><g><title>-[CAMetalDrawable present] (1 samples, 0.03%)</title><rect x="80.7847%" y="1477" width="0.0335%" height="15" fill="rgb(246,54,52)" fg:x="2409" fg:w="1"/><text x="81.0347%" y="1487.50"></text></g><g><title>_dispatch_event_loop_poke (1 samples, 0.03%)</title><rect x="80.8182%" y="1429" width="0.0335%" height="15" fill="rgb(242,34,25)" fg:x="2410" fg:w="1"/><text x="81.0682%" y="1439.50"></text></g><g><title>_dispatch_kq_poll (1 samples, 0.03%)</title><rect x="80.8182%" y="1413" width="0.0335%" height="15" fill="rgb(247,209,9)" fg:x="2410" fg:w="1"/><text x="81.0682%" y="1423.50"></text></g><g><title>kevent_id (1 samples, 0.03%)</title><rect x="80.8182%" y="1397" width="0.0335%" height="15" fill="rgb(228,71,26)" fg:x="2410" fg:w="1"/><text x="81.0682%" y="1407.50"></text></g><g><title>dispatch_async (1 samples, 0.03%)</title><rect x="80.8518%" y="1429" width="0.0335%" height="15" fill="rgb(222,145,49)" fg:x="2411" fg:w="1"/><text x="81.1018%" y="1439.50"></text></g><g><title>_dispatch_Block_copy (1 samples, 0.03%)</title><rect x="80.8518%" y="1413" width="0.0335%" height="15" fill="rgb(218,121,17)" fg:x="2411" fg:w="1"/><text x="81.1018%" y="1423.50"></text></g><g><title>_Block_copy (1 samples, 0.03%)</title><rect x="80.8518%" y="1397" width="0.0335%" height="15" fill="rgb(244,50,7)" fg:x="2411" fg:w="1"/><text x="81.1018%" y="1407.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="80.8518%" y="1381" width="0.0335%" height="15" fill="rgb(246,229,37)" fg:x="2411" fg:w="1"/><text x="81.1018%" y="1391.50"></text></g><g><title>+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:] (3 samples, 0.10%)</title><rect x="80.8182%" y="1461" width="0.1006%" height="15" fill="rgb(225,18,5)" fg:x="2410" fg:w="3"/><text x="81.0682%" y="1471.50"></text></g><g><title>+[FPCAMetalLayerState _updateLayerState:block:] (3 samples, 0.10%)</title><rect x="80.8182%" y="1445" width="0.1006%" height="15" fill="rgb(213,204,8)" fg:x="2410" fg:w="3"/><text x="81.0682%" y="1455.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="80.8853%" y="1429" width="0.0335%" height="15" fill="rgb(238,103,6)" fg:x="2412" fg:w="1"/><text x="81.1353%" y="1439.50"></text></g><g><title>IOSurfaceClientSignalEvent (13 samples, 0.44%)</title><rect x="80.9188%" y="1461" width="0.4359%" height="15" fill="rgb(222,25,35)" fg:x="2413" fg:w="13"/><text x="81.1688%" y="1471.50"></text></g><g><title>IOConnectCallMethod (13 samples, 0.44%)</title><rect x="80.9188%" y="1445" width="0.4359%" height="15" fill="rgb(213,203,35)" fg:x="2413" fg:w="13"/><text x="81.1688%" y="1455.50"></text></g><g><title>io_connect_method (13 samples, 0.44%)</title><rect x="80.9188%" y="1429" width="0.4359%" height="15" fill="rgb(221,79,53)" fg:x="2413" fg:w="13"/><text x="81.1688%" y="1439.50"></text></g><g><title>mach_msg2_internal (13 samples, 0.44%)</title><rect x="80.9188%" y="1413" width="0.4359%" height="15" fill="rgb(243,200,35)" fg:x="2413" fg:w="13"/><text x="81.1688%" y="1423.50"></text></g><g><title>mach_msg2_trap (13 samples, 0.44%)</title><rect x="80.9188%" y="1397" width="0.4359%" height="15" fill="rgb(248,60,25)" fg:x="2413" fg:w="13"/><text x="81.1688%" y="1407.50"></text></g><g><title>IOConnectCallMethod (5 samples, 0.17%)</title><rect x="81.3548%" y="1445" width="0.1677%" height="15" fill="rgb(227,53,46)" fg:x="2426" fg:w="5"/><text x="81.6048%" y="1455.50"></text></g><g><title>io_connect_method (5 samples, 0.17%)</title><rect x="81.3548%" y="1429" width="0.1677%" height="15" fill="rgb(216,120,32)" fg:x="2426" fg:w="5"/><text x="81.6048%" y="1439.50"></text></g><g><title>mach_msg2_internal (4 samples, 0.13%)</title><rect x="81.3883%" y="1413" width="0.1341%" height="15" fill="rgb(220,134,1)" fg:x="2427" fg:w="4"/><text x="81.6383%" y="1423.50"></text></g><g><title>mach_msg2_trap (4 samples, 0.13%)</title><rect x="81.3883%" y="1397" width="0.1341%" height="15" fill="rgb(237,168,5)" fg:x="2427" fg:w="4"/><text x="81.6383%" y="1407.50"></text></g><g><title>_Block_copy (1 samples, 0.03%)</title><rect x="81.5225%" y="1445" width="0.0335%" height="15" fill="rgb(231,100,33)" fg:x="2431" fg:w="1"/><text x="81.7725%" y="1455.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="81.5225%" y="1429" width="0.0335%" height="15" fill="rgb(236,177,47)" fg:x="2431" fg:w="1"/><text x="81.7725%" y="1439.50"></text></g><g><title>IOSurfaceSharedEventNotifyEventListener (7 samples, 0.23%)</title><rect x="81.3548%" y="1461" width="0.2347%" height="15" fill="rgb(235,7,49)" fg:x="2426" fg:w="7"/><text x="81.6048%" y="1471.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="81.5560%" y="1445" width="0.0335%" height="15" fill="rgb(232,119,22)" fg:x="2432" fg:w="1"/><text x="81.8060%" y="1455.50"></text></g><g><title>MTLDispatchListApply (31 samples, 1.04%)</title><rect x="80.5835%" y="1525" width="1.0396%" height="15" fill="rgb(254,73,53)" fg:x="2403" fg:w="31"/><text x="80.8335%" y="1535.50"></text></g><g><title>__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (28 samples, 0.94%)</title><rect x="80.6841%" y="1509" width="0.9390%" height="15" fill="rgb(251,35,20)" fg:x="2406" fg:w="28"/><text x="80.9341%" y="1519.50"></text></g><g><title>-[CAMetalDrawable present] (25 samples, 0.84%)</title><rect x="80.7847%" y="1493" width="0.8384%" height="15" fill="rgb(241,119,20)" fg:x="2409" fg:w="25"/><text x="81.0347%" y="1503.50"></text></g><g><title>layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (24 samples, 0.80%)</title><rect x="80.8182%" y="1477" width="0.8048%" height="15" fill="rgb(207,102,14)" fg:x="2410" fg:w="24"/><text x="81.0682%" y="1487.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="81.5895%" y="1461" width="0.0335%" height="15" fill="rgb(248,201,50)" fg:x="2433" fg:w="1"/><text x="81.8395%" y="1471.50"></text></g><g><title>_pthread_mutex_lock_init_slow (1 samples, 0.03%)</title><rect x="81.6231%" y="1525" width="0.0335%" height="15" fill="rgb(222,185,44)" fg:x="2434" fg:w="1"/><text x="81.8731%" y="1535.50"></text></g><g><title>_pthread_mutex_check_init_slow (1 samples, 0.03%)</title><rect x="81.6231%" y="1509" width="0.0335%" height="15" fill="rgb(218,107,18)" fg:x="2434" fg:w="1"/><text x="81.8731%" y="1519.50"></text></g><g><title>-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (48 samples, 1.61%)</title><rect x="80.1140%" y="1541" width="1.6097%" height="15" fill="rgb(237,177,39)" fg:x="2389" fg:w="48"/><text x="80.3640%" y="1551.50"></text></g><g><title>pthread_cond_broadcast (2 samples, 0.07%)</title><rect x="81.6566%" y="1525" width="0.0671%" height="15" fill="rgb(246,69,6)" fg:x="2435" fg:w="2"/><text x="81.9066%" y="1535.50"></text></g><g><title>_dispatch_event_loop_poke (11 samples, 0.37%)</title><rect x="81.7572%" y="1461" width="0.3689%" height="15" fill="rgb(234,208,37)" fg:x="2438" fg:w="11"/><text x="82.0072%" y="1471.50"></text></g><g><title>_dispatch_kq_poll (11 samples, 0.37%)</title><rect x="81.7572%" y="1445" width="0.3689%" height="15" fill="rgb(225,4,6)" fg:x="2438" fg:w="11"/><text x="82.0072%" y="1455.50"></text></g><g><title>kevent_id (11 samples, 0.37%)</title><rect x="81.7572%" y="1429" width="0.3689%" height="15" fill="rgb(233,45,0)" fg:x="2438" fg:w="11"/><text x="82.0072%" y="1439.50"></text></g><g><title>_call_copy_helpers_excp (1 samples, 0.03%)</title><rect x="82.1261%" y="1413" width="0.0335%" height="15" fill="rgb(226,136,5)" fg:x="2449" fg:w="1"/><text x="82.3761%" y="1423.50"></text></g><g><title>_Block_object_assign (1 samples, 0.03%)</title><rect x="82.1261%" y="1397" width="0.0335%" height="15" fill="rgb(211,91,47)" fg:x="2449" fg:w="1"/><text x="82.3761%" y="1407.50"></text></g><g><title>_Block_copy (1 samples, 0.03%)</title><rect x="82.1261%" y="1381" width="0.0335%" height="15" fill="rgb(242,88,51)" fg:x="2449" fg:w="1"/><text x="82.3761%" y="1391.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="82.1261%" y="1365" width="0.0335%" height="15" fill="rgb(230,91,28)" fg:x="2449" fg:w="1"/><text x="82.3761%" y="1375.50"></text></g><g><title>-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (13 samples, 0.44%)</title><rect x="81.7572%" y="1509" width="0.4359%" height="15" fill="rgb(254,186,29)" fg:x="2438" fg:w="13"/><text x="82.0072%" y="1519.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:] (13 samples, 0.44%)</title><rect x="81.7572%" y="1493" width="0.4359%" height="15" fill="rgb(238,6,4)" fg:x="2438" fg:w="13"/><text x="82.0072%" y="1503.50"></text></g><g><title>+[FPCAMetalLayerState _updateCommandBufferState:block:] (13 samples, 0.44%)</title><rect x="81.7572%" y="1477" width="0.4359%" height="15" fill="rgb(221,151,16)" fg:x="2438" fg:w="13"/><text x="82.0072%" y="1487.50"></text></g><g><title>dispatch_async (2 samples, 0.07%)</title><rect x="82.1261%" y="1461" width="0.0671%" height="15" fill="rgb(251,143,52)" fg:x="2449" fg:w="2"/><text x="82.3761%" y="1471.50"></text></g><g><title>_dispatch_Block_copy (2 samples, 0.07%)</title><rect x="82.1261%" y="1445" width="0.0671%" height="15" fill="rgb(206,90,15)" fg:x="2449" fg:w="2"/><text x="82.3761%" y="1455.50"></text></g><g><title>_Block_copy (2 samples, 0.07%)</title><rect x="82.1261%" y="1429" width="0.0671%" height="15" fill="rgb(218,35,8)" fg:x="2449" fg:w="2"/><text x="82.3761%" y="1439.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="82.1596%" y="1413" width="0.0335%" height="15" fill="rgb(239,215,6)" fg:x="2450" fg:w="1"/><text x="82.4096%" y="1423.50"></text></g><g><title>-[MTLResourceList releaseAllObjectsAndReset] (1 samples, 0.03%)</title><rect x="82.1932%" y="1477" width="0.0335%" height="15" fill="rgb(245,116,39)" fg:x="2451" fg:w="1"/><text x="82.4432%" y="1487.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="82.1932%" y="1461" width="0.0335%" height="15" fill="rgb(242,65,28)" fg:x="2451" fg:w="1"/><text x="82.4432%" y="1471.50"></text></g><g><title>IOGPUMetalCommandBufferStorageReset (2 samples, 0.07%)</title><rect x="82.1932%" y="1493" width="0.0671%" height="15" fill="rgb(252,132,53)" fg:x="2451" fg:w="2"/><text x="82.4432%" y="1503.50"></text></g><g><title>_iogpuMetalCommandBufferStorageReleaseCurrentResources (1 samples, 0.03%)</title><rect x="82.2267%" y="1477" width="0.0335%" height="15" fill="rgb(224,159,50)" fg:x="2452" fg:w="1"/><text x="82.4767%" y="1487.50"></text></g><g><title>IOGPUMetalPooledResourceRelease (1 samples, 0.03%)</title><rect x="82.2267%" y="1461" width="0.0335%" height="15" fill="rgb(224,93,4)" fg:x="2452" fg:w="1"/><text x="82.4767%" y="1471.50"></text></g><g><title>objc_opt_isKindOfClass (1 samples, 0.03%)</title><rect x="82.2267%" y="1445" width="0.0335%" height="15" fill="rgb(208,81,34)" fg:x="2452" fg:w="1"/><text x="82.4767%" y="1455.50"></text></g><g><title>-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (17 samples, 0.57%)</title><rect x="81.7237%" y="1525" width="0.5701%" height="15" fill="rgb(233,92,54)" fg:x="2437" fg:w="17"/><text x="81.9737%" y="1535.50"></text></g><g><title>IOGPUMetalCommandBufferStorageDealloc (3 samples, 0.10%)</title><rect x="82.1932%" y="1509" width="0.1006%" height="15" fill="rgb(237,21,14)" fg:x="2451" fg:w="3"/><text x="82.4432%" y="1519.50"></text></g><g><title>IOGPUMetalDeviceShmemUpdateTrimLevel (1 samples, 0.03%)</title><rect x="82.2602%" y="1493" width="0.0335%" height="15" fill="rgb(249,128,51)" fg:x="2453" fg:w="1"/><text x="82.5102%" y="1503.50"></text></g><g><title>-[IOGPUMetalCommandQueue device] (1 samples, 0.03%)</title><rect x="82.2938%" y="1525" width="0.0335%" height="15" fill="rgb(223,129,24)" fg:x="2454" fg:w="1"/><text x="82.5438%" y="1535.50"></text></g><g><title>-[NSMutableArray removeObject:] (1 samples, 0.03%)</title><rect x="82.3273%" y="1525" width="0.0335%" height="15" fill="rgb(231,168,25)" fg:x="2455" fg:w="1"/><text x="82.5773%" y="1535.50"></text></g><g><title>-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (20 samples, 0.67%)</title><rect x="81.7237%" y="1541" width="0.6707%" height="15" fill="rgb(224,39,20)" fg:x="2437" fg:w="20"/><text x="81.9737%" y="1551.50"></text></g><g><title>-[__NSArrayM _mutate] (1 samples, 0.03%)</title><rect x="82.3608%" y="1525" width="0.0335%" height="15" fill="rgb(225,152,53)" fg:x="2456" fg:w="1"/><text x="82.6108%" y="1535.50"></text></g><g><title>IODataQueueDequeue (2 samples, 0.07%)</title><rect x="82.3944%" y="1541" width="0.0671%" height="15" fill="rgb(252,17,24)" fg:x="2457" fg:w="2"/><text x="82.6444%" y="1551.50"></text></g><g><title>IOGPUDeviceCheckAndLogSoftFaultCount (1 samples, 0.03%)</title><rect x="82.4614%" y="1541" width="0.0335%" height="15" fill="rgb(250,114,30)" fg:x="2459" fg:w="1"/><text x="82.7114%" y="1551.50"></text></g><g><title>free (1 samples, 0.03%)</title><rect x="82.5620%" y="1477" width="0.0335%" height="15" fill="rgb(229,5,4)" fg:x="2462" fg:w="1"/><text x="82.8120%" y="1487.50"></text></g><g><title>_Block_release (5 samples, 0.17%)</title><rect x="82.4950%" y="1541" width="0.1677%" height="15" fill="rgb(225,176,49)" fg:x="2460" fg:w="5"/><text x="82.7450%" y="1551.50"></text></g><g><title>objc_destructInstance (5 samples, 0.17%)</title><rect x="82.4950%" y="1525" width="0.1677%" height="15" fill="rgb(224,221,49)" fg:x="2460" fg:w="5"/><text x="82.7450%" y="1535.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (5 samples, 0.17%)</title><rect x="82.4950%" y="1509" width="0.1677%" height="15" fill="rgb(253,169,27)" fg:x="2460" fg:w="5"/><text x="82.7450%" y="1519.50"></text></g><g><title>_object_remove_associations (4 samples, 0.13%)</title><rect x="82.5285%" y="1493" width="0.1341%" height="15" fill="rgb(211,206,16)" fg:x="2461" fg:w="4"/><text x="82.7785%" y="1503.50"></text></g><g><title>objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::find(DisguisedPtr&lt;objc_object&gt; const&amp;) (2 samples, 0.07%)</title><rect x="82.5956%" y="1477" width="0.0671%" height="15" fill="rgb(244,87,35)" fg:x="2463" fg:w="2"/><text x="82.8456%" y="1487.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt;&gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt; const*&amp;) const (2 samples, 0.07%)</title><rect x="82.5956%" y="1461" width="0.0671%" height="15" fill="rgb(246,28,10)" fg:x="2463" fg:w="2"/><text x="82.8456%" y="1471.50"></text></g><g><title>__62-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:]_block_invoke (1 samples, 0.03%)</title><rect x="82.6626%" y="1541" width="0.0335%" height="15" fill="rgb(229,12,44)" fg:x="2465" fg:w="1"/><text x="82.9126%" y="1551.50"></text></g><g><title>__IODataQueueDequeue (1 samples, 0.03%)</title><rect x="82.6962%" y="1541" width="0.0335%" height="15" fill="rgb(210,145,37)" fg:x="2466" fg:w="1"/><text x="82.9462%" y="1551.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="82.6962%" y="1525" width="0.0335%" height="15" fill="rgb(227,112,52)" fg:x="2466" fg:w="1"/><text x="82.9462%" y="1535.50"></text></g><g><title>_dispatch_client_callout4 (80 samples, 2.68%)</title><rect x="80.1140%" y="1589" width="2.6828%" height="15" fill="rgb(238,155,34)" fg:x="2389" fg:w="80"/><text x="80.3640%" y="1599.50">_d..</text></g><g><title>__IOGPUNotificationQueueSetDispatchQueue_block_invoke (80 samples, 2.68%)</title><rect x="80.1140%" y="1573" width="2.6828%" height="15" fill="rgb(239,226,36)" fg:x="2389" fg:w="80"/><text x="80.3640%" y="1583.50">__..</text></g><g><title>IOGPUNotificationQueueDispatchAvailableCompletionNotifications (80 samples, 2.68%)</title><rect x="80.1140%" y="1557" width="2.6828%" height="15" fill="rgb(230,16,23)" fg:x="2389" fg:w="80"/><text x="80.3640%" y="1567.50">IO..</text></g><g><title>objc_msgSend (2 samples, 0.07%)</title><rect x="82.7297%" y="1541" width="0.0671%" height="15" fill="rgb(236,171,36)" fg:x="2467" fg:w="2"/><text x="82.9797%" y="1551.50"></text></g><g><title>-[OS_dispatch_object dealloc] (1 samples, 0.03%)</title><rect x="82.7968%" y="1573" width="0.0335%" height="15" fill="rgb(221,22,14)" fg:x="2469" fg:w="1"/><text x="83.0468%" y="1583.50"></text></g><g><title>_dispatch_lane_invoke (85 samples, 2.85%)</title><rect x="80.0469%" y="1669" width="2.8504%" height="15" fill="rgb(242,43,11)" fg:x="2387" fg:w="85"/><text x="80.2969%" y="1679.50">_d..</text></g><g><title>_dispatch_lane_serial_drain (84 samples, 2.82%)</title><rect x="80.0805%" y="1653" width="2.8169%" height="15" fill="rgb(232,69,23)" fg:x="2388" fg:w="84"/><text x="80.3305%" y="1663.50">_d..</text></g><g><title>_dispatch_mach_invoke (84 samples, 2.82%)</title><rect x="80.0805%" y="1637" width="2.8169%" height="15" fill="rgb(216,180,54)" fg:x="2388" fg:w="84"/><text x="80.3305%" y="1647.50">_d..</text></g><g><title>_dispatch_lane_serial_drain (84 samples, 2.82%)</title><rect x="80.0805%" y="1621" width="2.8169%" height="15" fill="rgb(216,5,24)" fg:x="2388" fg:w="84"/><text x="80.3305%" y="1631.50">_d..</text></g><g><title>_dispatch_mach_msg_invoke (83 samples, 2.78%)</title><rect x="80.1140%" y="1605" width="2.7834%" height="15" fill="rgb(225,89,9)" fg:x="2389" fg:w="83"/><text x="80.3640%" y="1615.50">_d..</text></g><g><title>dispatch_release (3 samples, 0.10%)</title><rect x="82.7968%" y="1589" width="0.1006%" height="15" fill="rgb(243,75,33)" fg:x="2469" fg:w="3"/><text x="83.0468%" y="1599.50"></text></g><g><title>_dispatch_dispose (2 samples, 0.07%)</title><rect x="82.8303%" y="1573" width="0.0671%" height="15" fill="rgb(247,141,45)" fg:x="2470" fg:w="2"/><text x="83.0803%" y="1583.50"></text></g><g><title>_nanov2_free (1 samples, 0.03%)</title><rect x="82.8638%" y="1557" width="0.0335%" height="15" fill="rgb(232,177,36)" fg:x="2471" fg:w="1"/><text x="83.1138%" y="1567.50"></text></g><g><title>_dispatch_lane_serial_drain (1 samples, 0.03%)</title><rect x="82.8974%" y="1669" width="0.0335%" height="15" fill="rgb(219,125,36)" fg:x="2472" fg:w="1"/><text x="83.1474%" y="1679.50"></text></g><g><title>_dispatch_mach_invoke (1 samples, 0.03%)</title><rect x="82.9309%" y="1669" width="0.0335%" height="15" fill="rgb(227,94,9)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1679.50"></text></g><g><title>_dispatch_lane_serial_drain (1 samples, 0.03%)</title><rect x="82.9309%" y="1653" width="0.0335%" height="15" fill="rgb(240,34,52)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1663.50"></text></g><g><title>_dispatch_mach_msg_invoke (1 samples, 0.03%)</title><rect x="82.9309%" y="1637" width="0.0335%" height="15" fill="rgb(216,45,12)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1647.50"></text></g><g><title>_dispatch_client_callout4 (1 samples, 0.03%)</title><rect x="82.9309%" y="1621" width="0.0335%" height="15" fill="rgb(246,21,19)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1631.50"></text></g><g><title>_xpc_connection_mach_event (1 samples, 0.03%)</title><rect x="82.9309%" y="1605" width="0.0335%" height="15" fill="rgb(213,98,42)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1615.50"></text></g><g><title>_xpc_connection_call_event_handler (1 samples, 0.03%)</title><rect x="82.9309%" y="1589" width="0.0335%" height="15" fill="rgb(250,136,47)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1599.50"></text></g><g><title>invocation function for block in CoreAnalytics::Client::initConnection() (1 samples, 0.03%)</title><rect x="82.9309%" y="1573" width="0.0335%" height="15" fill="rgb(251,124,27)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1583.50"></text></g><g><title>$_0::operator()() const::&apos;lambda0&apos;(unsigned long, std::__type_descriptor_t)::__invoke(unsigned long, std::__type_descriptor_t) (1 samples, 0.03%)</title><rect x="82.9309%" y="1557" width="0.0335%" height="15" fill="rgb(229,180,14)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1567.50"></text></g><g><title>__typed_operator_new_impl[abi:ne190102](unsigned long, std::__type_descriptor_t) (1 samples, 0.03%)</title><rect x="82.9309%" y="1541" width="0.0335%" height="15" fill="rgb(245,216,25)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1551.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="82.9309%" y="1525" width="0.0335%" height="15" fill="rgb(251,43,5)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1535.50"></text></g><g><title>nanov2_allocate_outlined (1 samples, 0.03%)</title><rect x="82.9309%" y="1509" width="0.0335%" height="15" fill="rgb(250,128,24)" fg:x="2473" fg:w="1"/><text x="83.1809%" y="1519.50"></text></g><g><title>-[IOGPUMetalDevice periodicUpdateResourcePoolPurgeability] (1 samples, 0.03%)</title><rect x="83.1657%" y="1605" width="0.0335%" height="15" fill="rgb(217,117,27)" fg:x="2480" fg:w="1"/><text x="83.4157%" y="1615.50"></text></g><g><title>-[IOGPUMetalResourcePool updateResourcePurgeability] (1 samples, 0.03%)</title><rect x="83.1657%" y="1589" width="0.0335%" height="15" fill="rgb(245,147,4)" fg:x="2480" fg:w="1"/><text x="83.4157%" y="1599.50"></text></g><g><title>-[IOGPUMetalResource setPurgeableState:] (1 samples, 0.03%)</title><rect x="83.1657%" y="1573" width="0.0335%" height="15" fill="rgb(242,201,35)" fg:x="2480" fg:w="1"/><text x="83.4157%" y="1583.50"></text></g><g><title>IOGPUResourceSetPurgeable (1 samples, 0.03%)</title><rect x="83.1657%" y="1557" width="0.0335%" height="15" fill="rgb(218,181,1)" fg:x="2480" fg:w="1"/><text x="83.4157%" y="1567.50"></text></g><g><title>iokit_user_client_trap (1 samples, 0.03%)</title><rect x="83.1657%" y="1541" width="0.0335%" height="15" fill="rgb(222,6,29)" fg:x="2480" fg:w="1"/><text x="83.4157%" y="1551.50"></text></g><g><title>-[AGXG16GFamilyCommandBuffer fillCommandBufferArgs:commandQueue:] (2 samples, 0.07%)</title><rect x="83.2327%" y="1557" width="0.0671%" height="15" fill="rgb(208,186,3)" fg:x="2482" fg:w="2"/><text x="83.4827%" y="1567.50"></text></g><g><title>-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:] (2 samples, 0.07%)</title><rect x="83.2327%" y="1541" width="0.0671%" height="15" fill="rgb(216,36,26)" fg:x="2482" fg:w="2"/><text x="83.4827%" y="1551.50"></text></g><g><title>_Block_copy (2 samples, 0.07%)</title><rect x="83.2327%" y="1525" width="0.0671%" height="15" fill="rgb(248,201,23)" fg:x="2482" fg:w="2"/><text x="83.4827%" y="1535.50"></text></g><g><title>nanov2_malloc_type (2 samples, 0.07%)</title><rect x="83.2327%" y="1509" width="0.0671%" height="15" fill="rgb(251,170,31)" fg:x="2482" fg:w="2"/><text x="83.4827%" y="1519.50"></text></g><g><title>nanov2_allocate_outlined (1 samples, 0.03%)</title><rect x="83.2663%" y="1493" width="0.0335%" height="15" fill="rgb(207,110,25)" fg:x="2483" fg:w="1"/><text x="83.5163%" y="1503.50"></text></g><g><title>nanov2_find_block_and_allocate (1 samples, 0.03%)</title><rect x="83.2663%" y="1477" width="0.0335%" height="15" fill="rgb(250,54,15)" fg:x="2483" fg:w="1"/><text x="83.5163%" y="1487.50"></text></g><g><title>CFGetTypeID (1 samples, 0.03%)</title><rect x="83.2998%" y="1541" width="0.0335%" height="15" fill="rgb(227,68,33)" fg:x="2484" fg:w="1"/><text x="83.5498%" y="1551.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="83.2998%" y="1525" width="0.0335%" height="15" fill="rgb(238,34,41)" fg:x="2484" fg:w="1"/><text x="83.5498%" y="1535.50"></text></g><g><title>IOConnectCallMethod (273 samples, 9.15%)</title><rect x="83.3333%" y="1541" width="9.1549%" height="15" fill="rgb(220,11,15)" fg:x="2485" fg:w="273"/><text x="83.5833%" y="1551.50">IOConnectCall..</text></g><g><title>io_connect_method (273 samples, 9.15%)</title><rect x="83.3333%" y="1525" width="9.1549%" height="15" fill="rgb(246,111,35)" fg:x="2485" fg:w="273"/><text x="83.5833%" y="1535.50">io_connect_me..</text></g><g><title>mach_msg2_internal (273 samples, 9.15%)</title><rect x="83.3333%" y="1509" width="9.1549%" height="15" fill="rgb(209,88,53)" fg:x="2485" fg:w="273"/><text x="83.5833%" y="1519.50">mach_msg2_int..</text></g><g><title>mach_msg2_trap (272 samples, 9.12%)</title><rect x="83.3669%" y="1493" width="9.1214%" height="15" fill="rgb(231,185,47)" fg:x="2486" fg:w="272"/><text x="83.6169%" y="1503.50">mach_msg2_trap</text></g><g><title>-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (291 samples, 9.76%)</title><rect x="83.2327%" y="1589" width="9.7586%" height="15" fill="rgb(233,154,1)" fg:x="2482" fg:w="291"/><text x="83.4827%" y="1599.50">-[IOGPUMetalCo..</text></g><g><title>-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (291 samples, 9.76%)</title><rect x="83.2327%" y="1573" width="9.7586%" height="15" fill="rgb(225,15,46)" fg:x="2482" fg:w="291"/><text x="83.4827%" y="1583.50">-[IOGPUMetalCo..</text></g><g><title>IOGPUCommandQueueSubmitCommandBuffers (289 samples, 9.69%)</title><rect x="83.2998%" y="1557" width="9.6915%" height="15" fill="rgb(211,135,41)" fg:x="2484" fg:w="289"/><text x="83.5498%" y="1567.50">IOGPUCommandQu..</text></g><g><title>iokit_user_client_trap (15 samples, 0.50%)</title><rect x="92.4883%" y="1541" width="0.5030%" height="15" fill="rgb(208,54,0)" fg:x="2758" fg:w="15"/><text x="92.7383%" y="1551.50"></text></g><g><title>-[__NSArrayM _mutate] (1 samples, 0.03%)</title><rect x="92.9913%" y="1573" width="0.0335%" height="15" fill="rgb(244,136,14)" fg:x="2773" fg:w="1"/><text x="93.2413%" y="1583.50"></text></g><g><title>-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (2 samples, 0.07%)</title><rect x="92.9913%" y="1589" width="0.0671%" height="15" fill="rgb(241,56,14)" fg:x="2773" fg:w="2"/><text x="93.2413%" y="1599.50"></text></g><g><title>-[__NSArrayM replaceObjectsInRange:withObjects:count:] (1 samples, 0.03%)</title><rect x="93.0248%" y="1573" width="0.0335%" height="15" fill="rgb(205,80,24)" fg:x="2774" fg:w="1"/><text x="93.2748%" y="1583.50"></text></g><g><title>-[__NSArrayM insertObjects:count:atIndex:] (1 samples, 0.03%)</title><rect x="93.0248%" y="1557" width="0.0335%" height="15" fill="rgb(220,57,4)" fg:x="2774" fg:w="1"/><text x="93.2748%" y="1567.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="93.0248%" y="1541" width="0.0335%" height="15" fill="rgb(226,193,50)" fg:x="2774" fg:w="1"/><text x="93.2748%" y="1551.50"></text></g><g><title>-[_MTLCommandQueue _submitAvailableCommandBuffers] (295 samples, 9.89%)</title><rect x="83.1992%" y="1605" width="9.8927%" height="15" fill="rgb(231,168,22)" fg:x="2481" fg:w="295"/><text x="83.4492%" y="1615.50">-[_MTLCommandQ..</text></g><g><title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="93.0584%" y="1589" width="0.0335%" height="15" fill="rgb(254,215,14)" fg:x="2775" fg:w="1"/><text x="93.3084%" y="1599.50"></text></g><g><title>_pthread_mutex_firstfit_wake (1 samples, 0.03%)</title><rect x="93.0584%" y="1573" width="0.0335%" height="15" fill="rgb(211,115,16)" fg:x="2775" fg:w="1"/><text x="93.3084%" y="1583.50"></text></g><g><title>__psynch_mutexdrop (1 samples, 0.03%)</title><rect x="93.0584%" y="1557" width="0.0335%" height="15" fill="rgb(236,210,16)" fg:x="2775" fg:w="1"/><text x="93.3084%" y="1567.50"></text></g><g><title>___aggregationTimerSource_block_invoke_2 (1 samples, 0.03%)</title><rect x="93.0919%" y="1605" width="0.0335%" height="15" fill="rgb(221,94,12)" fg:x="2776" fg:w="1"/><text x="93.3419%" y="1615.50"></text></g><g><title>_os_signpost_emit_with_name_impl (1 samples, 0.03%)</title><rect x="93.0919%" y="1589" width="0.0335%" height="15" fill="rgb(235,218,49)" fg:x="2776" fg:w="1"/><text x="93.3419%" y="1599.50"></text></g><g><title>__os_signpost_emit_impl (1 samples, 0.03%)</title><rect x="93.0919%" y="1573" width="0.0335%" height="15" fill="rgb(217,114,14)" fg:x="2776" fg:w="1"/><text x="93.3419%" y="1583.50"></text></g><g><title>_os_log_impl_flatten_and_send (1 samples, 0.03%)</title><rect x="93.0919%" y="1557" width="0.0335%" height="15" fill="rgb(216,145,22)" fg:x="2776" fg:w="1"/><text x="93.3419%" y="1567.50"></text></g><g><title>_os_log_invoke_callback (1 samples, 0.03%)</title><rect x="93.0919%" y="1541" width="0.0335%" height="15" fill="rgb(217,112,39)" fg:x="2776" fg:w="1"/><text x="93.3419%" y="1551.50"></text></g><g><title>CFArrayGetFirstIndexOfValue (1 samples, 0.03%)</title><rect x="93.1254%" y="1525" width="0.0335%" height="15" fill="rgb(225,85,32)" fg:x="2777" fg:w="1"/><text x="93.3754%" y="1535.50"></text></g><g><title>-[__NSCFArray objectAtIndex:] (1 samples, 0.03%)</title><rect x="93.1254%" y="1509" width="0.0335%" height="15" fill="rgb(245,209,47)" fg:x="2777" fg:w="1"/><text x="93.3754%" y="1519.50"></text></g><g><title>_iosRemoveEventBlock (2 samples, 0.07%)</title><rect x="93.1254%" y="1541" width="0.0671%" height="15" fill="rgb(218,220,15)" fg:x="2777" fg:w="2"/><text x="93.3754%" y="1551.50"></text></g><g><title>_CFArrayReplaceValues (1 samples, 0.03%)</title><rect x="93.1590%" y="1525" width="0.0335%" height="15" fill="rgb(222,202,31)" fg:x="2778" fg:w="1"/><text x="93.4090%" y="1535.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="93.1590%" y="1509" width="0.0335%" height="15" fill="rgb(243,203,4)" fg:x="2778" fg:w="1"/><text x="93.4090%" y="1519.50"></text></g><g><title>invocation function for block in layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (1 samples, 0.03%)</title><rect x="93.1925%" y="1541" width="0.0335%" height="15" fill="rgb(237,92,17)" fg:x="2779" fg:w="1"/><text x="93.4425%" y="1551.50"></text></g><g><title>-[CAMetalDrawable setStatus:] (1 samples, 0.03%)</title><rect x="93.2260%" y="1525" width="0.0335%" height="15" fill="rgb(231,119,7)" fg:x="2780" fg:w="1"/><text x="93.4760%" y="1535.50"></text></g><g><title>CA::Context::Generic::retain_render_context() (1 samples, 0.03%)</title><rect x="93.2931%" y="1493" width="0.0335%" height="15" fill="rgb(237,82,41)" fg:x="2782" fg:w="1"/><text x="93.5431%" y="1503.50"></text></g><g><title>CA::GenericContext::retain_context_with_id(unsigned int) (1 samples, 0.03%)</title><rect x="93.3266%" y="1493" width="0.0335%" height="15" fill="rgb(226,81,48)" fg:x="2783" fg:w="1"/><text x="93.5766%" y="1503.50"></text></g><g><title>CA::Context::retain_context_with_id(unsigned int) (1 samples, 0.03%)</title><rect x="93.3266%" y="1477" width="0.0335%" height="15" fill="rgb(234,70,51)" fg:x="2783" fg:w="1"/><text x="93.5766%" y="1487.50"></text></g><g><title>CAImageQueuePing_ (10 samples, 0.34%)</title><rect x="93.2931%" y="1509" width="0.3353%" height="15" fill="rgb(251,86,4)" fg:x="2782" fg:w="10"/><text x="93.5431%" y="1519.50"></text></g><g><title>mach_msg (8 samples, 0.27%)</title><rect x="93.3602%" y="1493" width="0.2683%" height="15" fill="rgb(244,144,28)" fg:x="2784" fg:w="8"/><text x="93.6102%" y="1503.50"></text></g><g><title>mach_msg_overwrite (8 samples, 0.27%)</title><rect x="93.3602%" y="1477" width="0.2683%" height="15" fill="rgb(232,161,39)" fg:x="2784" fg:w="8"/><text x="93.6102%" y="1487.50"></text></g><g><title>mach_msg2_internal (8 samples, 0.27%)</title><rect x="93.3602%" y="1461" width="0.2683%" height="15" fill="rgb(247,34,51)" fg:x="2784" fg:w="8"/><text x="93.6102%" y="1471.50"></text></g><g><title>mach_msg2_trap (8 samples, 0.27%)</title><rect x="93.3602%" y="1445" width="0.2683%" height="15" fill="rgb(225,132,2)" fg:x="2784" fg:w="8"/><text x="93.6102%" y="1455.50"></text></g><g><title>CFRetain (1 samples, 0.03%)</title><rect x="93.6284%" y="1509" width="0.0335%" height="15" fill="rgb(209,159,44)" fg:x="2792" fg:w="1"/><text x="93.8784%" y="1519.50"></text></g><g><title>os_signpost_enabled (1 samples, 0.03%)</title><rect x="93.6620%" y="1509" width="0.0335%" height="15" fill="rgb(251,214,1)" fg:x="2793" fg:w="1"/><text x="93.9120%" y="1519.50"></text></g><g><title>CAImageQueueInsertImage_ (14 samples, 0.47%)</title><rect x="93.2596%" y="1525" width="0.4695%" height="15" fill="rgb(247,84,47)" fg:x="2781" fg:w="14"/><text x="93.5096%" y="1535.50"></text></g><g><title>x_hash_table_lookup (1 samples, 0.03%)</title><rect x="93.6955%" y="1509" width="0.0335%" height="15" fill="rgb(240,111,43)" fg:x="2794" fg:w="1"/><text x="93.9455%" y="1519.50"></text></g><g><title>_IODispatchCalloutWithDispatch (20 samples, 0.67%)</title><rect x="93.1254%" y="1589" width="0.6707%" height="15" fill="rgb(215,214,35)" fg:x="2777" fg:w="20"/><text x="93.3754%" y="1599.50"></text></g><g><title>IODispatchCalloutFromCFMessage (20 samples, 0.67%)</title><rect x="93.1254%" y="1573" width="0.6707%" height="15" fill="rgb(248,207,23)" fg:x="2777" fg:w="20"/><text x="93.3754%" y="1583.50"></text></g><g><title>_ioSurfaceEventNotificationCallback2 (20 samples, 0.67%)</title><rect x="93.1254%" y="1557" width="0.6707%" height="15" fill="rgb(214,186,4)" fg:x="2777" fg:w="20"/><text x="93.3754%" y="1567.50"></text></g><g><title>layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (17 samples, 0.57%)</title><rect x="93.2260%" y="1541" width="0.5701%" height="15" fill="rgb(220,133,22)" fg:x="2780" fg:w="17"/><text x="93.4760%" y="1551.50"></text></g><g><title>objc_msgSend (2 samples, 0.07%)</title><rect x="93.7290%" y="1525" width="0.0671%" height="15" fill="rgb(239,134,19)" fg:x="2795" fg:w="2"/><text x="93.9790%" y="1535.50"></text></g><g><title>_platform_memset (2 samples, 0.07%)</title><rect x="93.7961%" y="1589" width="0.0671%" height="15" fill="rgb(250,140,9)" fg:x="2797" fg:w="2"/><text x="94.0461%" y="1599.50"></text></g><g><title>dispatch_mig_server (24 samples, 0.80%)</title><rect x="93.1254%" y="1605" width="0.8048%" height="15" fill="rgb(225,59,14)" fg:x="2777" fg:w="24"/><text x="93.3754%" y="1615.50"></text></g><g><title>mach_msg (2 samples, 0.07%)</title><rect x="93.8632%" y="1589" width="0.0671%" height="15" fill="rgb(214,152,51)" fg:x="2799" fg:w="2"/><text x="94.1132%" y="1599.50"></text></g><g><title>mach_msg_overwrite (2 samples, 0.07%)</title><rect x="93.8632%" y="1573" width="0.0671%" height="15" fill="rgb(251,227,43)" fg:x="2799" fg:w="2"/><text x="94.1132%" y="1583.50"></text></g><g><title>mach_msg2_internal (2 samples, 0.07%)</title><rect x="93.8632%" y="1557" width="0.0671%" height="15" fill="rgb(241,96,17)" fg:x="2799" fg:w="2"/><text x="94.1132%" y="1567.50"></text></g><g><title>mach_msg2_trap (2 samples, 0.07%)</title><rect x="93.8632%" y="1541" width="0.0671%" height="15" fill="rgb(234,198,43)" fg:x="2799" fg:w="2"/><text x="94.1132%" y="1551.50"></text></g><g><title>_XImageQueueCollectable (3 samples, 0.10%)</title><rect x="93.9302%" y="1589" width="0.1006%" height="15" fill="rgb(220,108,29)" fg:x="2801" fg:w="3"/><text x="94.1802%" y="1599.50"></text></g><g><title>invoke_collectable_callback(void*) (3 samples, 0.10%)</title><rect x="93.9302%" y="1573" width="0.1006%" height="15" fill="rgb(226,163,33)" fg:x="2801" fg:w="3"/><text x="94.1802%" y="1583.50"></text></g><g><title>layer_collectable_signal(_CAImageQueue*, void*) (.11423) (3 samples, 0.10%)</title><rect x="93.9302%" y="1557" width="0.1006%" height="15" fill="rgb(205,194,45)" fg:x="2801" fg:w="3"/><text x="94.1802%" y="1567.50"></text></g><g><title>_dispatch_semaphore_signal_slow (3 samples, 0.10%)</title><rect x="93.9302%" y="1541" width="0.1006%" height="15" fill="rgb(206,143,44)" fg:x="2801" fg:w="3"/><text x="94.1802%" y="1551.50"></text></g><g><title>_dispatch_sema4_signal (3 samples, 0.10%)</title><rect x="93.9302%" y="1525" width="0.1006%" height="15" fill="rgb(236,136,36)" fg:x="2801" fg:w="3"/><text x="94.1802%" y="1535.50"></text></g><g><title>semaphore_signal_trap (3 samples, 0.10%)</title><rect x="93.9302%" y="1509" width="0.1006%" height="15" fill="rgb(249,172,42)" fg:x="2801" fg:w="3"/><text x="94.1802%" y="1519.50"></text></g><g><title>-[IOGPUMetalTexture iosurface] (1 samples, 0.03%)</title><rect x="94.0644%" y="1557" width="0.0335%" height="15" fill="rgb(216,139,23)" fg:x="2805" fg:w="1"/><text x="94.3144%" y="1567.50"></text></g><g><title>_CFRetain (1 samples, 0.03%)</title><rect x="94.0979%" y="1557" width="0.0335%" height="15" fill="rgb(207,166,20)" fg:x="2806" fg:w="1"/><text x="94.3479%" y="1567.50"></text></g><g><title>-[NSMutableArray removeObjectsInRange:inArray:range:] (1 samples, 0.03%)</title><rect x="94.1315%" y="1541" width="0.0335%" height="15" fill="rgb(210,209,22)" fg:x="2807" fg:w="1"/><text x="94.3815%" y="1551.50"></text></g><g><title>-[__NSArrayM countByEnumeratingWithState:objects:count:] (1 samples, 0.03%)</title><rect x="94.1650%" y="1541" width="0.0335%" height="15" fill="rgb(232,118,20)" fg:x="2808" fg:w="1"/><text x="94.4150%" y="1551.50"></text></g><g><title>-[__NSArrayM dealloc] (1 samples, 0.03%)</title><rect x="94.1985%" y="1541" width="0.0335%" height="15" fill="rgb(238,113,42)" fg:x="2809" fg:w="1"/><text x="94.4485%" y="1551.50"></text></g><g><title>__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.03%)</title><rect x="94.1985%" y="1525" width="0.0335%" height="15" fill="rgb(231,42,5)" fg:x="2809" fg:w="1"/><text x="94.4485%" y="1535.50"></text></g><g><title>objc_release (1 samples, 0.03%)</title><rect x="94.1985%" y="1509" width="0.0335%" height="15" fill="rgb(243,166,24)" fg:x="2809" fg:w="1"/><text x="94.4485%" y="1519.50"></text></g><g><title>-[__NSArrayM insertObject:atIndex:] (1 samples, 0.03%)</title><rect x="94.2321%" y="1541" width="0.0335%" height="15" fill="rgb(237,226,12)" fg:x="2810" fg:w="1"/><text x="94.4821%" y="1551.50"></text></g><g><title>__kdebug_trace64 (2 samples, 0.07%)</title><rect x="94.2656%" y="1541" width="0.0671%" height="15" fill="rgb(229,133,24)" fg:x="2811" fg:w="2"/><text x="94.5156%" y="1551.50"></text></g><g><title>layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (7 samples, 0.23%)</title><rect x="94.1315%" y="1557" width="0.2347%" height="15" fill="rgb(238,33,43)" fg:x="2807" fg:w="7"/><text x="94.3815%" y="1567.50"></text></g><g><title>objc_msgSend (1 samples, 0.03%)</title><rect x="94.3327%" y="1541" width="0.0335%" height="15" fill="rgb(227,59,38)" fg:x="2813" fg:w="1"/><text x="94.5827%" y="1551.50"></text></g><g><title>_XImageQueueDidComposite (11 samples, 0.37%)</title><rect x="94.0309%" y="1589" width="0.3689%" height="15" fill="rgb(230,97,0)" fg:x="2804" fg:w="11"/><text x="94.2809%" y="1599.50"></text></g><g><title>CAImageQueueDidComposite (11 samples, 0.37%)</title><rect x="94.0309%" y="1573" width="0.3689%" height="15" fill="rgb(250,173,50)" fg:x="2804" fg:w="11"/><text x="94.2809%" y="1583.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="94.3662%" y="1557" width="0.0335%" height="15" fill="rgb(240,15,50)" fg:x="2814" fg:w="1"/><text x="94.6162%" y="1567.50"></text></g><g><title>_dispatch_event_loop_poke (1 samples, 0.03%)</title><rect x="94.3997%" y="1573" width="0.0335%" height="15" fill="rgb(221,93,22)" fg:x="2815" fg:w="1"/><text x="94.6497%" y="1583.50"></text></g><g><title>_dispatch_kq_poll (1 samples, 0.03%)</title><rect x="94.3997%" y="1557" width="0.0335%" height="15" fill="rgb(245,180,53)" fg:x="2815" fg:w="1"/><text x="94.6497%" y="1567.50"></text></g><g><title>kevent_id (1 samples, 0.03%)</title><rect x="94.3997%" y="1541" width="0.0335%" height="15" fill="rgb(231,88,51)" fg:x="2815" fg:w="1"/><text x="94.6497%" y="1551.50"></text></g><g><title>_XImageQueueDidPresent (2 samples, 0.07%)</title><rect x="94.3997%" y="1589" width="0.0671%" height="15" fill="rgb(240,58,21)" fg:x="2815" fg:w="2"/><text x="94.6497%" y="1599.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="94.4333%" y="1573" width="0.0335%" height="15" fill="rgb(237,21,10)" fg:x="2816" fg:w="1"/><text x="94.6833%" y="1583.50"></text></g><g><title>_dispatch_lane_serial_drain (495 samples, 16.60%)</title><rect x="78.0684%" y="1685" width="16.5996%" height="15" fill="rgb(218,43,11)" fg:x="2328" fg:w="495"/><text x="78.3184%" y="1695.50">_dispatch_lane_serial_drain</text></g><g><title>_dispatch_source_invoke (349 samples, 11.70%)</title><rect x="82.9645%" y="1669" width="11.7036%" height="15" fill="rgb(218,221,29)" fg:x="2474" fg:w="349"/><text x="83.2145%" y="1679.50">_dispatch_source_..</text></g><g><title>_dispatch_source_latch_and_call (344 samples, 11.54%)</title><rect x="83.1321%" y="1653" width="11.5359%" height="15" fill="rgb(214,118,42)" fg:x="2479" fg:w="344"/><text x="83.3821%" y="1663.50">_dispatch_source_..</text></g><g><title>_dispatch_continuation_pop (344 samples, 11.54%)</title><rect x="83.1321%" y="1637" width="11.5359%" height="15" fill="rgb(251,200,26)" fg:x="2479" fg:w="344"/><text x="83.3821%" y="1647.50">_dispatch_continu..</text></g><g><title>_dispatch_client_callout (343 samples, 11.50%)</title><rect x="83.1657%" y="1621" width="11.5023%" height="15" fill="rgb(237,101,39)" fg:x="2480" fg:w="343"/><text x="83.4157%" y="1631.50">_dispatch_client_..</text></g><g><title>invocation function for block in CA::MachPortUtil::ClientIPC::create(char const*) (22 samples, 0.74%)</title><rect x="93.9302%" y="1605" width="0.7378%" height="15" fill="rgb(251,117,11)" fg:x="2801" fg:w="22"/><text x="94.1802%" y="1615.50"></text></g><g><title>mach_msg (6 samples, 0.20%)</title><rect x="94.4668%" y="1589" width="0.2012%" height="15" fill="rgb(216,223,23)" fg:x="2817" fg:w="6"/><text x="94.7168%" y="1599.50"></text></g><g><title>mach_msg_overwrite (6 samples, 0.20%)</title><rect x="94.4668%" y="1573" width="0.2012%" height="15" fill="rgb(251,54,12)" fg:x="2817" fg:w="6"/><text x="94.7168%" y="1583.50"></text></g><g><title>mach_msg2_internal (6 samples, 0.20%)</title><rect x="94.4668%" y="1557" width="0.2012%" height="15" fill="rgb(254,176,54)" fg:x="2817" fg:w="6"/><text x="94.7168%" y="1567.50"></text></g><g><title>mach_msg2_trap (6 samples, 0.20%)</title><rect x="94.4668%" y="1541" width="0.2012%" height="15" fill="rgb(210,32,8)" fg:x="2817" fg:w="6"/><text x="94.7168%" y="1551.50"></text></g><g><title>_dispatch_last_resort_autorelease_pool_pop (1 samples, 0.03%)</title><rect x="94.6680%" y="1685" width="0.0335%" height="15" fill="rgb(235,52,38)" fg:x="2823" fg:w="1"/><text x="94.9180%" y="1695.50"></text></g><g><title>objc_autoreleasePoolPop (1 samples, 0.03%)</title><rect x="94.6680%" y="1669" width="0.0335%" height="15" fill="rgb(231,4,44)" fg:x="2823" fg:w="1"/><text x="94.9180%" y="1679.50"></text></g><g><title>AutoreleasePoolPage::releaseUntil(objc_object**) (1 samples, 0.03%)</title><rect x="94.6680%" y="1653" width="0.0335%" height="15" fill="rgb(249,2,32)" fg:x="2823" fg:w="1"/><text x="94.9180%" y="1663.50"></text></g><g><title>-[__NSArrayI_Transfer dealloc] (1 samples, 0.03%)</title><rect x="94.6680%" y="1637" width="0.0335%" height="15" fill="rgb(224,65,26)" fg:x="2823" fg:w="1"/><text x="94.9180%" y="1647.50"></text></g><g><title>-[NSObject dealloc] (1 samples, 0.03%)</title><rect x="94.6680%" y="1621" width="0.0335%" height="15" fill="rgb(250,73,40)" fg:x="2823" fg:w="1"/><text x="94.9180%" y="1631.50"></text></g><g><title>start_wqthread (520 samples, 17.44%)</title><rect x="77.2971%" y="1765" width="17.4380%" height="15" fill="rgb(253,177,16)" fg:x="2305" fg:w="520"/><text x="77.5471%" y="1775.50">start_wqthread</text></g><g><title>_pthread_wqthread (520 samples, 17.44%)</title><rect x="77.2971%" y="1749" width="17.4380%" height="15" fill="rgb(217,32,34)" fg:x="2305" fg:w="520"/><text x="77.5471%" y="1759.50">_pthread_wqthread</text></g><g><title>_dispatch_workloop_worker_thread (517 samples, 17.34%)</title><rect x="77.3977%" y="1733" width="17.3374%" height="15" fill="rgb(212,7,10)" fg:x="2308" fg:w="517"/><text x="77.6477%" y="1743.50">_dispatch_workloop_worker_t..</text></g><g><title>_dispatch_root_queue_drain_deferred_wlh (502 samples, 16.83%)</title><rect x="77.9007%" y="1717" width="16.8343%" height="15" fill="rgb(245,89,8)" fg:x="2323" fg:w="502"/><text x="78.1507%" y="1727.50">_dispatch_root_queue_drain..</text></g><g><title>_dispatch_lane_invoke (499 samples, 16.73%)</title><rect x="78.0013%" y="1701" width="16.7337%" height="15" fill="rgb(237,16,53)" fg:x="2326" fg:w="499"/><text x="78.2513%" y="1711.50">_dispatch_lane_invoke</text></g><g><title>_dispatch_last_resort_autorelease_pool_push (1 samples, 0.03%)</title><rect x="94.7015%" y="1685" width="0.0335%" height="15" fill="rgb(250,204,30)" fg:x="2824" fg:w="1"/><text x="94.9515%" y="1695.50"></text></g><g><title>objc_autoreleasePoolPush (1 samples, 0.03%)</title><rect x="94.7015%" y="1669" width="0.0335%" height="15" fill="rgb(208,77,27)" fg:x="2824" fg:w="1"/><text x="94.9515%" y="1679.50"></text></g><g><title>__CFRunLoopModeIsEmpty (1 samples, 0.03%)</title><rect x="94.7351%" y="1701" width="0.0335%" height="15" fill="rgb(250,204,28)" fg:x="2825" fg:w="1"/><text x="94.9851%" y="1711.50"></text></g><g><title>CFDictionaryGetValue (1 samples, 0.03%)</title><rect x="94.7686%" y="1685" width="0.0335%" height="15" fill="rgb(244,63,21)" fg:x="2826" fg:w="1"/><text x="95.0186%" y="1695.50"></text></g><g><title>___CFBasicHashFindBucket_Linear (1 samples, 0.03%)</title><rect x="94.7686%" y="1669" width="0.0335%" height="15" fill="rgb(236,85,44)" fg:x="2826" fg:w="1"/><text x="95.0186%" y="1679.50"></text></g><g><title>_CFAutoreleasePoolPush (1 samples, 0.03%)</title><rect x="94.8021%" y="1669" width="0.0335%" height="15" fill="rgb(215,98,4)" fg:x="2827" fg:w="1"/><text x="95.0521%" y="1679.50"></text></g><g><title>AutoreleasePoolPage::push() (1 samples, 0.03%)</title><rect x="94.8021%" y="1653" width="0.0335%" height="15" fill="rgb(235,38,11)" fg:x="2827" fg:w="1"/><text x="95.0521%" y="1663.50"></text></g><g><title>CFRelease (1 samples, 0.03%)</title><rect x="94.9027%" y="1589" width="0.0335%" height="15" fill="rgb(254,186,25)" fg:x="2830" fg:w="1"/><text x="95.1527%" y="1599.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="94.9027%" y="1573" width="0.0335%" height="15" fill="rgb(225,55,31)" fg:x="2830" fg:w="1"/><text x="95.1527%" y="1583.50"></text></g><g><title>CFEqual (1 samples, 0.03%)</title><rect x="94.9363%" y="1541" width="0.0335%" height="15" fill="rgb(211,15,21)" fg:x="2831" fg:w="1"/><text x="95.1863%" y="1551.50"></text></g><g><title>CF_IS_OBJC (1 samples, 0.03%)</title><rect x="94.9363%" y="1525" width="0.0335%" height="15" fill="rgb(215,187,41)" fg:x="2831" fg:w="1"/><text x="95.1863%" y="1535.50"></text></g><g><title>CFRunLoopPerformBlock (5 samples, 0.17%)</title><rect x="94.8357%" y="1605" width="0.1677%" height="15" fill="rgb(248,69,32)" fg:x="2828" fg:w="5"/><text x="95.0857%" y="1615.50"></text></g><g><title>__CFRunLoopCopyMode (2 samples, 0.07%)</title><rect x="94.9363%" y="1589" width="0.0671%" height="15" fill="rgb(252,102,52)" fg:x="2831" fg:w="2"/><text x="95.1863%" y="1599.50"></text></g><g><title>CFSetGetValue (2 samples, 0.07%)</title><rect x="94.9363%" y="1573" width="0.0671%" height="15" fill="rgb(253,140,32)" fg:x="2831" fg:w="2"/><text x="95.1863%" y="1583.50"></text></g><g><title>___CFBasicHashFindBucket_Linear (2 samples, 0.07%)</title><rect x="94.9363%" y="1557" width="0.0671%" height="15" fill="rgb(216,56,42)" fg:x="2831" fg:w="2"/><text x="95.1863%" y="1567.50"></text></g><g><title>__CFStringHash (1 samples, 0.03%)</title><rect x="94.9698%" y="1541" width="0.0335%" height="15" fill="rgb(216,184,14)" fg:x="2832" fg:w="1"/><text x="95.2198%" y="1551.50"></text></g><g><title>CFRunLoopTimerSetNextFireDate (3 samples, 0.10%)</title><rect x="95.0034%" y="1605" width="0.1006%" height="15" fill="rgb(237,187,27)" fg:x="2833" fg:w="3"/><text x="95.2534%" y="1615.50"></text></g><g><title>__CFRepositionTimerInMode (2 samples, 0.07%)</title><rect x="95.0369%" y="1589" width="0.0671%" height="15" fill="rgb(219,65,3)" fg:x="2834" fg:w="2"/><text x="95.2869%" y="1599.50"></text></g><g><title>CFArrayGetCount (2 samples, 0.07%)</title><rect x="95.0369%" y="1573" width="0.0671%" height="15" fill="rgb(245,83,25)" fg:x="2834" fg:w="2"/><text x="95.2869%" y="1583.50"></text></g><g><title>CFRunLoopWakeUp (1 samples, 0.03%)</title><rect x="95.1040%" y="1605" width="0.0335%" height="15" fill="rgb(214,205,45)" fg:x="2836" fg:w="1"/><text x="95.3540%" y="1615.50"></text></g><g><title>mach_msg (1 samples, 0.03%)</title><rect x="95.1040%" y="1589" width="0.0335%" height="15" fill="rgb(241,20,18)" fg:x="2836" fg:w="1"/><text x="95.3540%" y="1599.50"></text></g><g><title>mach_msg_overwrite (1 samples, 0.03%)</title><rect x="95.1040%" y="1573" width="0.0335%" height="15" fill="rgb(232,163,23)" fg:x="2836" fg:w="1"/><text x="95.3540%" y="1583.50"></text></g><g><title>mach_msg2_internal (1 samples, 0.03%)</title><rect x="95.1040%" y="1557" width="0.0335%" height="15" fill="rgb(214,5,46)" fg:x="2836" fg:w="1"/><text x="95.3540%" y="1567.50"></text></g><g><title>mach_msg2_trap (1 samples, 0.03%)</title><rect x="95.1040%" y="1541" width="0.0335%" height="15" fill="rgb(229,78,17)" fg:x="2836" fg:w="1"/><text x="95.3540%" y="1551.50"></text></g><g><title>KernelTraceEvent(unsigned int, __CGEvent*, __CGEvent*) (1 samples, 0.03%)</title><rect x="95.1375%" y="1605" width="0.0335%" height="15" fill="rgb(248,89,10)" fg:x="2837" fg:w="1"/><text x="95.3875%" y="1615.50"></text></g><g><title>(anonymous namespace)::get_process_notifier() (1 samples, 0.03%)</title><rect x="95.1710%" y="1573" width="0.0335%" height="15" fill="rgb(248,54,15)" fg:x="2838" fg:w="1"/><text x="95.4210%" y="1583.50"></text></g><g><title>(anonymous namespace)::Registry::existence_check(unsigned int) const (1 samples, 0.03%)</title><rect x="95.2046%" y="1541" width="0.0335%" height="15" fill="rgb(223,116,6)" fg:x="2839" fg:w="1"/><text x="95.4546%" y="1551.50"></text></g><g><title>CGSConnectionRegistryCheckConnectionID (2 samples, 0.07%)</title><rect x="95.2046%" y="1557" width="0.0671%" height="15" fill="rgb(205,125,38)" fg:x="2839" fg:w="2"/><text x="95.4546%" y="1567.50"></text></g><g><title>std::__1::mutex::lock() (1 samples, 0.03%)</title><rect x="95.2381%" y="1541" width="0.0335%" height="15" fill="rgb(251,78,38)" fg:x="2840" fg:w="1"/><text x="95.4881%" y="1551.50"></text></g><g><title>DYLD-STUB$$pthread_mutex_lock (1 samples, 0.03%)</title><rect x="95.2381%" y="1525" width="0.0335%" height="15" fill="rgb(253,78,28)" fg:x="2840" fg:w="1"/><text x="95.4881%" y="1535.50"></text></g><g><title>-[NSObject retainWeakReference] (1 samples, 0.03%)</title><rect x="95.3387%" y="1461" width="0.0335%" height="15" fill="rgb(209,120,3)" fg:x="2843" fg:w="1"/><text x="95.5887%" y="1471.50"></text></g><g><title>-[__NSCFType _tryRetain] (1 samples, 0.03%)</title><rect x="95.3722%" y="1461" width="0.0335%" height="15" fill="rgb(238,229,9)" fg:x="2844" fg:w="1"/><text x="95.6222%" y="1471.50"></text></g><g><title>_CFTryRetain (1 samples, 0.03%)</title><rect x="95.3722%" y="1445" width="0.0335%" height="15" fill="rgb(253,159,18)" fg:x="2844" fg:w="1"/><text x="95.6222%" y="1455.50"></text></g><g><title>invocation function for block in CGSGetKnownConnectionByID(unsigned int) (5 samples, 0.17%)</title><rect x="95.2716%" y="1541" width="0.1677%" height="15" fill="rgb(244,42,34)" fg:x="2841" fg:w="5"/><text x="95.5216%" y="1551.50"></text></g><g><title>-[NSConcreteMapTable objectForKey:] (5 samples, 0.17%)</title><rect x="95.2716%" y="1525" width="0.1677%" height="15" fill="rgb(224,8,7)" fg:x="2841" fg:w="5"/><text x="95.5216%" y="1535.50"></text></g><g><title>startReadARCWeakAutoreleasingAt (3 samples, 0.10%)</title><rect x="95.3387%" y="1509" width="0.1006%" height="15" fill="rgb(210,201,45)" fg:x="2843" fg:w="3"/><text x="95.5887%" y="1519.50"></text></g><g><title>objc_loadWeak (3 samples, 0.10%)</title><rect x="95.3387%" y="1493" width="0.1006%" height="15" fill="rgb(252,185,21)" fg:x="2843" fg:w="3"/><text x="95.5887%" y="1503.50"></text></g><g><title>objc_loadWeakRetained (3 samples, 0.10%)</title><rect x="95.3387%" y="1477" width="0.1006%" height="15" fill="rgb(223,131,1)" fg:x="2843" fg:w="3"/><text x="95.5887%" y="1487.50"></text></g><g><title>lookUpImpOrForwardTryCache (1 samples, 0.03%)</title><rect x="95.4058%" y="1461" width="0.0335%" height="15" fill="rgb(245,141,16)" fg:x="2845" fg:w="1"/><text x="95.6558%" y="1471.50"></text></g><g><title>CGSConnectionByID (9 samples, 0.30%)</title><rect x="95.2046%" y="1573" width="0.3018%" height="15" fill="rgb(229,55,45)" fg:x="2839" fg:w="9"/><text x="95.4546%" y="1583.50"></text></g><g><title>CGSGetKnownConnectionByID(unsigned int) (7 samples, 0.23%)</title><rect x="95.2716%" y="1557" width="0.2347%" height="15" fill="rgb(208,92,15)" fg:x="2841" fg:w="7"/><text x="95.5216%" y="1567.50"></text></g><g><title>pthread_mutex_lock (2 samples, 0.07%)</title><rect x="95.4393%" y="1541" width="0.0671%" height="15" fill="rgb(234,185,47)" fg:x="2846" fg:w="2"/><text x="95.6893%" y="1551.50"></text></g><g><title>(anonymous namespace)::GestureEventLog::getLogString() const (1 samples, 0.03%)</title><rect x="95.5064%" y="1557" width="0.0335%" height="15" fill="rgb(253,104,50)" fg:x="2848" fg:w="1"/><text x="95.7564%" y="1567.50"></text></g><g><title>(anonymous namespace)::EventLog::getLogString() const (1 samples, 0.03%)</title><rect x="95.5064%" y="1541" width="0.0335%" height="15" fill="rgb(205,70,7)" fg:x="2848" fg:w="1"/><text x="95.7564%" y="1551.50"></text></g><g><title>snprintf (1 samples, 0.03%)</title><rect x="95.5064%" y="1525" width="0.0335%" height="15" fill="rgb(240,178,43)" fg:x="2848" fg:w="1"/><text x="95.7564%" y="1535.50"></text></g><g><title>_vsnprintf (1 samples, 0.03%)</title><rect x="95.5064%" y="1509" width="0.0335%" height="15" fill="rgb(214,112,2)" fg:x="2848" fg:w="1"/><text x="95.7564%" y="1519.50"></text></g><g><title>__vfprintf (1 samples, 0.03%)</title><rect x="95.5064%" y="1493" width="0.0335%" height="15" fill="rgb(206,46,17)" fg:x="2848" fg:w="1"/><text x="95.7564%" y="1503.50"></text></g><g><title>__ultoa (1 samples, 0.03%)</title><rect x="95.5064%" y="1477" width="0.0335%" height="15" fill="rgb(225,220,16)" fg:x="2848" fg:w="1"/><text x="95.7564%" y="1487.50"></text></g><g><title>(anonymous namespace)::LogRingBuffer::push_back(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&amp;) (1 samples, 0.03%)</title><rect x="95.5399%" y="1557" width="0.0335%" height="15" fill="rgb(238,65,40)" fg:x="2849" fg:w="1"/><text x="95.7899%" y="1567.50"></text></g><g><title>__dtoa (1 samples, 0.03%)</title><rect x="95.6070%" y="1477" width="0.0335%" height="15" fill="rgb(230,151,21)" fg:x="2851" fg:w="1"/><text x="95.8570%" y="1487.50"></text></g><g><title>__d2b_D2A (1 samples, 0.03%)</title><rect x="95.6070%" y="1461" width="0.0335%" height="15" fill="rgb(218,58,49)" fg:x="2851" fg:w="1"/><text x="95.8570%" y="1471.50"></text></g><g><title>__Balloc_D2A (1 samples, 0.03%)</title><rect x="95.6070%" y="1445" width="0.0335%" height="15" fill="rgb(219,179,14)" fg:x="2851" fg:w="1"/><text x="95.8570%" y="1455.50"></text></g><g><title>CGSEventLogEvent (5 samples, 0.17%)</title><rect x="95.5064%" y="1573" width="0.1677%" height="15" fill="rgb(223,72,1)" fg:x="2848" fg:w="5"/><text x="95.7564%" y="1583.50"></text></g><g><title>(anonymous namespace)::MouseEventLog::getLogString() const (3 samples, 0.10%)</title><rect x="95.5734%" y="1557" width="0.1006%" height="15" fill="rgb(238,126,10)" fg:x="2850" fg:w="3"/><text x="95.8234%" y="1567.50"></text></g><g><title>(anonymous namespace)::EventLog::getLogString() const (3 samples, 0.10%)</title><rect x="95.5734%" y="1541" width="0.1006%" height="15" fill="rgb(224,206,38)" fg:x="2850" fg:w="3"/><text x="95.8234%" y="1551.50"></text></g><g><title>snprintf (3 samples, 0.10%)</title><rect x="95.5734%" y="1525" width="0.1006%" height="15" fill="rgb(212,201,54)" fg:x="2850" fg:w="3"/><text x="95.8234%" y="1535.50"></text></g><g><title>_vsnprintf (3 samples, 0.10%)</title><rect x="95.5734%" y="1509" width="0.1006%" height="15" fill="rgb(218,154,48)" fg:x="2850" fg:w="3"/><text x="95.8234%" y="1519.50"></text></g><g><title>__vfprintf (3 samples, 0.10%)</title><rect x="95.5734%" y="1493" width="0.1006%" height="15" fill="rgb(232,93,24)" fg:x="2850" fg:w="3"/><text x="95.8234%" y="1503.50"></text></g><g><title>__sfvwrite (1 samples, 0.03%)</title><rect x="95.6405%" y="1477" width="0.0335%" height="15" fill="rgb(245,30,21)" fg:x="2852" fg:w="1"/><text x="95.8905%" y="1487.50"></text></g><g><title>_platform_memmove (1 samples, 0.03%)</title><rect x="95.6405%" y="1461" width="0.0335%" height="15" fill="rgb(242,148,29)" fg:x="2852" fg:w="1"/><text x="95.8905%" y="1471.50"></text></g><g><title>$_0::operator()() const::&apos;lambda0&apos;(unsigned long, std::__type_descriptor_t)::__invoke(unsigned long, std::__type_descriptor_t) (1 samples, 0.03%)</title><rect x="95.7076%" y="1557" width="0.0335%" height="15" fill="rgb(244,153,54)" fg:x="2854" fg:w="1"/><text x="95.9576%" y="1567.50"></text></g><g><title>__typed_operator_new_impl[abi:ne190102](unsigned long, std::__type_descriptor_t) (1 samples, 0.03%)</title><rect x="95.7076%" y="1541" width="0.0335%" height="15" fill="rgb(252,87,22)" fg:x="2854" fg:w="1"/><text x="95.9576%" y="1551.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.03%)</title><rect x="95.7076%" y="1525" width="0.0335%" height="15" fill="rgb(210,51,29)" fg:x="2854" fg:w="1"/><text x="95.9576%" y="1535.50"></text></g><g><title>CGSDatagramReadStream::VMData::release() (4 samples, 0.13%)</title><rect x="95.7411%" y="1557" width="0.1341%" height="15" fill="rgb(242,136,47)" fg:x="2855" fg:w="4"/><text x="95.9911%" y="1567.50"></text></g><g><title>CGSDatagramReadStream::VMData::~VMData() (4 samples, 0.13%)</title><rect x="95.7411%" y="1541" width="0.1341%" height="15" fill="rgb(238,68,4)" fg:x="2855" fg:w="4"/><text x="95.9911%" y="1551.50"></text></g><g><title>mach_vm_deallocate (4 samples, 0.13%)</title><rect x="95.7411%" y="1525" width="0.1341%" height="15" fill="rgb(242,161,30)" fg:x="2855" fg:w="4"/><text x="95.9911%" y="1535.50"></text></g><g><title>_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.13%)</title><rect x="95.7411%" y="1509" width="0.1341%" height="15" fill="rgb(218,58,44)" fg:x="2855" fg:w="4"/><text x="95.9911%" y="1519.50"></text></g><g><title>CGSDatagramReadStream::release() (1 samples, 0.03%)</title><rect x="95.8753%" y="1557" width="0.0335%" height="15" fill="rgb(252,125,32)" fg:x="2859" fg:w="1"/><text x="96.1253%" y="1567.50"></text></g><g><title>SLSServerPortCheckError (1 samples, 0.03%)</title><rect x="95.9088%" y="1557" width="0.0335%" height="15" fill="rgb(219,178,0)" fg:x="2860" fg:w="1"/><text x="96.1588%" y="1567.50"></text></g><g><title>_nanov2_free (1 samples, 0.03%)</title><rect x="95.9423%" y="1557" width="0.0335%" height="15" fill="rgb(213,152,7)" fg:x="2861" fg:w="1"/><text x="96.1923%" y="1567.50"></text></g><g><title>_platform_memset (1 samples, 0.03%)</title><rect x="95.9423%" y="1541" width="0.0335%" height="15" fill="rgb(249,109,34)" fg:x="2861" fg:w="1"/><text x="96.1923%" y="1551.50"></text></g><g><title>dispatch_get_current_queue (2 samples, 0.07%)</title><rect x="95.9759%" y="1557" width="0.0671%" height="15" fill="rgb(232,96,21)" fg:x="2862" fg:w="2"/><text x="96.2259%" y="1567.50"></text></g><g><title>CGSConnectionRegistryCheckConnectionID (1 samples, 0.03%)</title><rect x="96.0765%" y="1525" width="0.0335%" height="15" fill="rgb(228,27,39)" fg:x="2865" fg:w="1"/><text x="96.3265%" y="1535.50"></text></g><g><title>(anonymous namespace)::Registry::zombie_check(unsigned int) const (1 samples, 0.03%)</title><rect x="96.0765%" y="1509" width="0.0335%" height="15" fill="rgb(211,182,52)" fg:x="2865" fg:w="1"/><text x="96.3265%" y="1519.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="96.1100%" y="1509" width="0.0335%" height="15" fill="rgb(234,178,38)" fg:x="2866" fg:w="1"/><text x="96.3600%" y="1519.50"></text></g><g><title>CGSConnectionByID (3 samples, 0.10%)</title><rect x="96.0765%" y="1541" width="0.1006%" height="15" fill="rgb(221,111,3)" fg:x="2865" fg:w="3"/><text x="96.3265%" y="1551.50"></text></g><g><title>CGSGetKnownConnectionByID(unsigned int) (2 samples, 0.07%)</title><rect x="96.1100%" y="1525" width="0.0671%" height="15" fill="rgb(228,175,21)" fg:x="2866" fg:w="2"/><text x="96.3600%" y="1535.50"></text></g><g><title>invocation function for block in CGSGetKnownConnectionByID(unsigned int) (1 samples, 0.03%)</title><rect x="96.1435%" y="1509" width="0.0335%" height="15" fill="rgb(228,174,43)" fg:x="2867" fg:w="1"/><text x="96.3935%" y="1519.50"></text></g><g><title>-[NSConcreteMapTable objectForKey:] (1 samples, 0.03%)</title><rect x="96.1435%" y="1493" width="0.0335%" height="15" fill="rgb(211,191,0)" fg:x="2867" fg:w="1"/><text x="96.3935%" y="1503.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_buffer_b(unsigned long, void (void const*, unsigned long) block_pointer) (1 samples, 0.03%)</title><rect x="96.1771%" y="1493" width="0.0335%" height="15" fill="rgb(253,117,3)" fg:x="2868" fg:w="1"/><text x="96.4271%" y="1503.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="96.1771%" y="1477" width="0.0335%" height="15" fill="rgb(241,127,19)" fg:x="2868" fg:w="1"/><text x="96.4271%" y="1487.50"></text></g><g><title>SLS::TokenizedCoding::Decoder::CreateFromProvider(std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadDataProvider&gt;) (2 samples, 0.07%)</title><rect x="96.1771%" y="1509" width="0.0671%" height="15" fill="rgb(218,103,12)" fg:x="2868" fg:w="2"/><text x="96.4271%" y="1519.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="96.2106%" y="1493" width="0.0335%" height="15" fill="rgb(236,214,43)" fg:x="2869" fg:w="1"/><text x="96.4606%" y="1503.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_buffer_b(unsigned long, void (void const*, unsigned long) block_pointer) (5 samples, 0.17%)</title><rect x="96.2441%" y="1493" width="0.1677%" height="15" fill="rgb(244,144,19)" fg:x="2870" fg:w="5"/><text x="96.4941%" y="1503.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="96.3783%" y="1477" width="0.0335%" height="15" fill="rgb(246,188,10)" fg:x="2874" fg:w="1"/><text x="96.6283%" y="1487.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (2 samples, 0.07%)</title><rect x="96.4453%" y="1477" width="0.0671%" height="15" fill="rgb(212,193,33)" fg:x="2876" fg:w="2"/><text x="96.6953%" y="1487.50"></text></g><g><title>_nanov2_free (2 samples, 0.07%)</title><rect x="96.5124%" y="1477" width="0.0671%" height="15" fill="rgb(241,51,29)" fg:x="2878" fg:w="2"/><text x="96.7624%" y="1487.50"></text></g><g><title>SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) (1 samples, 0.03%)</title><rect x="96.6465%" y="1429" width="0.0335%" height="15" fill="rgb(211,58,19)" fg:x="2882" fg:w="1"/><text x="96.8965%" y="1439.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_buffer_b(unsigned long, void (void const*, unsigned long) block_pointer) (1 samples, 0.03%)</title><rect x="96.6465%" y="1413" width="0.0335%" height="15" fill="rgb(229,111,26)" fg:x="2882" fg:w="1"/><text x="96.8965%" y="1423.50"></text></g><g><title>SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda0&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) (1 samples, 0.03%)</title><rect x="96.6801%" y="1429" width="0.0335%" height="15" fill="rgb(213,115,40)" fg:x="2883" fg:w="1"/><text x="96.9301%" y="1439.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_buffer_b(unsigned long, void (void const*, unsigned long) block_pointer) (1 samples, 0.03%)</title><rect x="96.7807%" y="1413" width="0.0335%" height="15" fill="rgb(209,56,44)" fg:x="2886" fg:w="1"/><text x="97.0307%" y="1423.50"></text></g><g><title>SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda1&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) (4 samples, 0.13%)</title><rect x="96.7136%" y="1429" width="0.1341%" height="15" fill="rgb(230,108,32)" fg:x="2884" fg:w="4"/><text x="96.9636%" y="1439.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="96.8142%" y="1413" width="0.0335%" height="15" fill="rgb(216,165,31)" fg:x="2887" fg:w="1"/><text x="97.0642%" y="1423.50"></text></g><g><title>SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda5&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) (1 samples, 0.03%)</title><rect x="96.8478%" y="1429" width="0.0335%" height="15" fill="rgb(218,122,21)" fg:x="2888" fg:w="1"/><text x="97.0978%" y="1439.50"></text></g><g><title>bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void (void const*, unsigned long) block_pointer) (1 samples, 0.03%)</title><rect x="96.8478%" y="1413" width="0.0335%" height="15" fill="rgb(223,224,47)" fg:x="2888" fg:w="1"/><text x="97.0978%" y="1423.50"></text></g><g><title>SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void (void const*, unsigned long) block_pointer) (1 samples, 0.03%)</title><rect x="96.8478%" y="1397" width="0.0335%" height="15" fill="rgb(238,102,44)" fg:x="2888" fg:w="1"/><text x="97.0978%" y="1407.50"></text></g><g><title>invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda5&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) const (1 samples, 0.03%)</title><rect x="96.8478%" y="1381" width="0.0335%" height="15" fill="rgb(236,46,40)" fg:x="2888" fg:w="1"/><text x="97.0978%" y="1391.50"></text></g><g><title>IOHIDEventCreateWithBytes (1 samples, 0.03%)</title><rect x="96.8478%" y="1365" width="0.0335%" height="15" fill="rgb(247,202,50)" fg:x="2888" fg:w="1"/><text x="97.0978%" y="1375.50"></text></g><g><title>-[SLSSkyLightGestureEventAuthenticationMessage initWithMessageInitData:] (1 samples, 0.03%)</title><rect x="96.8813%" y="1349" width="0.0335%" height="15" fill="rgb(209,99,20)" fg:x="2889" fg:w="1"/><text x="97.1313%" y="1359.50"></text></g><g><title>-[SLSSkyLightMouseEventAuthenticationMessage initWithMessageInitData:] (3 samples, 0.10%)</title><rect x="96.9148%" y="1349" width="0.1006%" height="15" fill="rgb(252,27,34)" fg:x="2890" fg:w="3"/><text x="97.1648%" y="1359.50"></text></g><g><title>-[SLSSkyLightEventAuthenticationMessage initWithMessageInitData:] (3 samples, 0.10%)</title><rect x="96.9148%" y="1333" width="0.1006%" height="15" fill="rgb(215,206,23)" fg:x="2890" fg:w="3"/><text x="97.1648%" y="1343.50"></text></g><g><title>-[SLSEventAuthenticationMessage initWithMessageInitData:] (3 samples, 0.10%)</title><rect x="96.9148%" y="1317" width="0.1006%" height="15" fill="rgb(212,135,36)" fg:x="2890" fg:w="3"/><text x="97.1648%" y="1327.50"></text></g><g><title>(anonymous namespace)::MessageInitDataCustomSerializationBasis::proxyTargetProcess() const (1 samples, 0.03%)</title><rect x="96.9819%" y="1301" width="0.0335%" height="15" fill="rgb(240,189,1)" fg:x="2892" fg:w="1"/><text x="97.2319%" y="1311.50"></text></g><g><title>_objc_rootAllocWithZone (1 samples, 0.03%)</title><rect x="96.9819%" y="1285" width="0.0335%" height="15" fill="rgb(242,56,20)" fg:x="2892" fg:w="1"/><text x="97.2319%" y="1295.50"></text></g><g><title>nanov2_calloc_type (1 samples, 0.03%)</title><rect x="96.9819%" y="1269" width="0.0335%" height="15" fill="rgb(247,132,33)" fg:x="2892" fg:w="1"/><text x="97.2319%" y="1279.50"></text></g><g><title>-[__NSCFData bytes] (2 samples, 0.07%)</title><rect x="97.0154%" y="1349" width="0.0671%" height="15" fill="rgb(208,149,11)" fg:x="2893" fg:w="2"/><text x="97.2654%" y="1359.50"></text></g><g><title>DYLD-STUB$$objc_autorelease (1 samples, 0.03%)</title><rect x="97.0825%" y="1349" width="0.0335%" height="15" fill="rgb(211,33,11)" fg:x="2895" fg:w="1"/><text x="97.3325%" y="1359.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_buffer_b(unsigned long, void (void const*, unsigned long) block_pointer) (1 samples, 0.03%)</title><rect x="97.1160%" y="1269" width="0.0335%" height="15" fill="rgb(221,29,38)" fg:x="2896" fg:w="1"/><text x="97.3660%" y="1279.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="97.1160%" y="1253" width="0.0335%" height="15" fill="rgb(206,182,49)" fg:x="2896" fg:w="1"/><text x="97.3660%" y="1263.50"></text></g><g><title>SLS::TokenizedCoding::(anonymous namespace)::ManagedAddressStorage&lt;SLS::TokenizedCoding::ReadStorage::CreateWithUnownedAddressAndLength(void const*, unsigned long)::$_0 const&gt;::address() const (1 samples, 0.03%)</title><rect x="97.1160%" y="1237" width="0.0335%" height="15" fill="rgb(216,140,1)" fg:x="2896" fg:w="1"/><text x="97.3660%" y="1247.50"></text></g><g><title>SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (5 samples, 0.17%)</title><rect x="97.1160%" y="1349" width="0.1677%" height="15" fill="rgb(232,57,40)" fg:x="2896" fg:w="5"/><text x="97.3660%" y="1359.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadDataProvider&gt;&amp;) block_pointer) (5 samples, 0.17%)</title><rect x="97.1160%" y="1333" width="0.1677%" height="15" fill="rgb(224,186,18)" fg:x="2896" fg:w="5"/><text x="97.3660%" y="1343.50"></text></g><g><title>invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (5 samples, 0.17%)</title><rect x="97.1160%" y="1317" width="0.1677%" height="15" fill="rgb(215,121,11)" fg:x="2896" fg:w="5"/><text x="97.3660%" y="1327.50"></text></g><g><title>invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (5 samples, 0.17%)</title><rect x="97.1160%" y="1301" width="0.1677%" height="15" fill="rgb(245,147,10)" fg:x="2896" fg:w="5"/><text x="97.3660%" y="1311.50"></text></g><g><title>invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;(anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;&amp;)::&apos;lambda&apos;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;) const (5 samples, 0.17%)</title><rect x="97.1160%" y="1285" width="0.1677%" height="15" fill="rgb(238,153,13)" fg:x="2896" fg:w="5"/><text x="97.3660%" y="1295.50"></text></g><g><title>SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void (void const*, unsigned long) block_pointer) (4 samples, 0.13%)</title><rect x="97.1496%" y="1269" width="0.1341%" height="15" fill="rgb(233,108,0)" fg:x="2897" fg:w="4"/><text x="97.3996%" y="1279.50"></text></g><g><title>___ZZN3SLS15TokenizedCoding7Decoder12decode_bytesIZZN12_GLOBAL__N_139MessageInitDataCustomSerializationBasis6CreateEPKvmENK3$_0clINS0_5TokenILNS0_7VersionE3EEENS0_16VersionedDecoderILSA_3EEEEEDaT_RT0_EUlS6_mE_EEbmOSF_ENKUlRSF_E_clISD_EESE_SK__block_invoke (4 samples, 0.13%)</title><rect x="97.1496%" y="1253" width="0.1341%" height="15" fill="rgb(212,157,17)" fg:x="2897" fg:w="4"/><text x="97.3996%" y="1263.50"></text></g><g><title>+[NSData(NSData) dataWithBytes:length:] (3 samples, 0.10%)</title><rect x="97.1831%" y="1237" width="0.1006%" height="15" fill="rgb(225,213,38)" fg:x="2898" fg:w="3"/><text x="97.4331%" y="1247.50"></text></g><g><title>-[_NSPlaceholderData initWithBytes:length:copy:deallocator:] (1 samples, 0.03%)</title><rect x="97.2502%" y="1221" width="0.0335%" height="15" fill="rgb(248,16,11)" fg:x="2900" fg:w="1"/><text x="97.5002%" y="1231.50"></text></g><g><title>-[_NSInlineData initWithBytes:length:] (1 samples, 0.03%)</title><rect x="97.2502%" y="1205" width="0.0335%" height="15" fill="rgb(241,33,4)" fg:x="2900" fg:w="1"/><text x="97.5002%" y="1215.50"></text></g><g><title>objc_autorelease (1 samples, 0.03%)</title><rect x="97.2837%" y="1349" width="0.0335%" height="15" fill="rgb(222,26,43)" fg:x="2901" fg:w="1"/><text x="97.5337%" y="1359.50"></text></g><g><title>objc_release (1 samples, 0.03%)</title><rect x="97.3172%" y="1349" width="0.0335%" height="15" fill="rgb(243,29,36)" fg:x="2902" fg:w="1"/><text x="97.5672%" y="1359.50"></text></g><g><title>SLEventAuthenticationMessageCreateWithData (15 samples, 0.50%)</title><rect x="96.8813%" y="1365" width="0.5030%" height="15" fill="rgb(241,9,27)" fg:x="2889" fg:w="15"/><text x="97.1313%" y="1375.50"></text></g><g><title>std::__1::__shared_weak_count::__release_shared[abi:nn190102]() (1 samples, 0.03%)</title><rect x="97.3508%" y="1349" width="0.0335%" height="15" fill="rgb(205,117,26)" fg:x="2903" fg:w="1"/><text x="97.6008%" y="1359.50"></text></g><g><title>std::__1::__shared_weak_count::__release_shared[abi:nn190102]() (1 samples, 0.03%)</title><rect x="97.3508%" y="1333" width="0.0335%" height="15" fill="rgb(209,80,39)" fg:x="2903" fg:w="1"/><text x="97.6008%" y="1343.50"></text></g><g><title>SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) (17 samples, 0.57%)</title><rect x="96.8813%" y="1429" width="0.5701%" height="15" fill="rgb(239,155,6)" fg:x="2889" fg:w="17"/><text x="97.1313%" y="1439.50"></text></g><g><title>bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void (void const*, unsigned long) block_pointer) (17 samples, 0.57%)</title><rect x="96.8813%" y="1413" width="0.5701%" height="15" fill="rgb(212,104,12)" fg:x="2889" fg:w="17"/><text x="97.1313%" y="1423.50"></text></g><g><title>SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void (void const*, unsigned long) block_pointer) (17 samples, 0.57%)</title><rect x="96.8813%" y="1397" width="0.5701%" height="15" fill="rgb(234,204,3)" fg:x="2889" fg:w="17"/><text x="97.1313%" y="1407.50"></text></g><g><title>invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) const (17 samples, 0.57%)</title><rect x="96.8813%" y="1381" width="0.5701%" height="15" fill="rgb(251,218,7)" fg:x="2889" fg:w="17"/><text x="97.1313%" y="1391.50"></text></g><g><title>__CFDataInit (2 samples, 0.07%)</title><rect x="97.3843%" y="1365" width="0.0671%" height="15" fill="rgb(221,81,32)" fg:x="2904" fg:w="2"/><text x="97.6343%" y="1375.50"></text></g><g><title>SLS::TokenizedCoding::(anonymous namespace)::ManagedAddressStorage&lt;SLS::TokenizedCoding::ReadStorage::CreateWithUnownedAddressAndLength(void const*, unsigned long)::$_0 const&gt;::length() const (1 samples, 0.03%)</title><rect x="97.4514%" y="1397" width="0.0335%" height="15" fill="rgb(214,152,26)" fg:x="2906" fg:w="1"/><text x="97.7014%" y="1407.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_buffer_b(unsigned long, void (void const*, unsigned long) block_pointer) (2 samples, 0.07%)</title><rect x="97.4514%" y="1413" width="0.0671%" height="15" fill="rgb(223,22,3)" fg:x="2906" fg:w="2"/><text x="97.7014%" y="1423.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="97.4849%" y="1397" width="0.0335%" height="15" fill="rgb(207,174,7)" fg:x="2907" fg:w="1"/><text x="97.7349%" y="1407.50"></text></g><g><title>SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda8&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) (3 samples, 0.10%)</title><rect x="97.4514%" y="1429" width="0.1006%" height="15" fill="rgb(224,19,52)" fg:x="2906" fg:w="3"/><text x="97.7014%" y="1439.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="97.5184%" y="1413" width="0.0335%" height="15" fill="rgb(228,24,14)" fg:x="2908" fg:w="1"/><text x="97.7684%" y="1423.50"></text></g><g><title>invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (33 samples, 1.11%)</title><rect x="96.5795%" y="1477" width="1.1066%" height="15" fill="rgb(230,153,43)" fg:x="2880" fg:w="33"/><text x="96.8295%" y="1487.50"></text></g><g><title>invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (32 samples, 1.07%)</title><rect x="96.6130%" y="1461" width="1.0731%" height="15" fill="rgb(231,106,12)" fg:x="2881" fg:w="32"/><text x="96.8630%" y="1471.50"></text></g><g><title>invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;) const (32 samples, 1.07%)</title><rect x="96.6130%" y="1445" width="1.0731%" height="15" fill="rgb(215,92,2)" fg:x="2881" fg:w="32"/><text x="96.8630%" y="1455.50"></text></g><g><title>SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (4 samples, 0.13%)</title><rect x="97.5520%" y="1429" width="0.1341%" height="15" fill="rgb(249,143,25)" fg:x="2909" fg:w="4"/><text x="97.8020%" y="1439.50"></text></g><g><title>CGSEventAppendixCreate (1 samples, 0.03%)</title><rect x="97.6526%" y="1413" width="0.0335%" height="15" fill="rgb(252,7,35)" fg:x="2912" fg:w="1"/><text x="97.9026%" y="1423.50"></text></g><g><title>SLTypeCreateInstance (1 samples, 0.03%)</title><rect x="97.6526%" y="1397" width="0.0335%" height="15" fill="rgb(216,69,40)" fg:x="2912" fg:w="1"/><text x="97.9026%" y="1407.50"></text></g><g><title>DYLD-STUB$$_CFRuntimeCreateInstance (1 samples, 0.03%)</title><rect x="97.6526%" y="1381" width="0.0335%" height="15" fill="rgb(240,36,33)" fg:x="2912" fg:w="1"/><text x="97.9026%" y="1391.50"></text></g><g><title>DYLD-STUB$$malloc_type_malloc (1 samples, 0.03%)</title><rect x="97.6861%" y="1445" width="0.0335%" height="15" fill="rgb(231,128,14)" fg:x="2913" fg:w="1"/><text x="97.9361%" y="1455.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadDataProvider&gt;&amp;) block_pointer) (42 samples, 1.41%)</title><rect x="96.4118%" y="1493" width="1.4085%" height="15" fill="rgb(245,143,14)" fg:x="2875" fg:w="42"/><text x="96.6618%" y="1503.50"></text></g><g><title>std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadDataProvider&gt; std::__1::allocate_shared[abi:nn190102]&lt;SLS::TokenizedCoding::ReadDataProvider, std::__1::allocator&lt;SLS::TokenizedCoding::ReadDataProvider&gt;, SLS::TokenizedCoding::DataProvider::scoper, std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadStorage&gt;, unsigned long&amp;, std::__1::optional&lt;unsigned long&gt;&amp;, 0&gt;(std::__1::allocator&lt;SLS::TokenizedCoding::ReadDataProvider&gt; const&amp;, SLS::TokenizedCoding::DataProvider::scoper&amp;&amp;, std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadStorage&gt;&amp;&amp;, unsigned long&amp;, std::__1::optional&lt;unsigned long&gt;&amp;) (4 samples, 0.13%)</title><rect x="97.6861%" y="1477" width="0.1341%" height="15" fill="rgb(222,130,28)" fg:x="2913" fg:w="4"/><text x="97.9361%" y="1487.50"></text></g><g><title>operator new(unsigned long) (4 samples, 0.13%)</title><rect x="97.6861%" y="1461" width="0.1341%" height="15" fill="rgb(212,10,48)" fg:x="2913" fg:w="4"/><text x="97.9361%" y="1471.50"></text></g><g><title>nanov2_malloc_type (3 samples, 0.10%)</title><rect x="97.7197%" y="1445" width="0.1006%" height="15" fill="rgb(254,118,45)" fg:x="2914" fg:w="3"/><text x="97.9697%" y="1455.50"></text></g><g><title>event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (54 samples, 1.81%)</title><rect x="96.0429%" y="1557" width="1.8109%" height="15" fill="rgb(228,6,45)" fg:x="2864" fg:w="54"/><text x="96.2929%" y="1567.50">e..</text></g><g><title>CGSDecodeEventRecord (50 samples, 1.68%)</title><rect x="96.1771%" y="1541" width="1.6767%" height="15" fill="rgb(241,18,35)" fg:x="2868" fg:w="50"/><text x="96.4271%" y="1551.50"></text></g><g><title>_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (50 samples, 1.68%)</title><rect x="96.1771%" y="1525" width="1.6767%" height="15" fill="rgb(227,214,53)" fg:x="2868" fg:w="50"/><text x="96.4271%" y="1535.50"></text></g><g><title>SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (48 samples, 1.61%)</title><rect x="96.2441%" y="1509" width="1.6097%" height="15" fill="rgb(224,107,51)" fg:x="2870" fg:w="48"/><text x="96.4941%" y="1519.50"></text></g><g><title>SLS::TokenizedCoding::Storage::valid() const (1 samples, 0.03%)</title><rect x="97.8203%" y="1493" width="0.0335%" height="15" fill="rgb(248,60,28)" fg:x="2917" fg:w="1"/><text x="98.0703%" y="1503.50"></text></g><g><title>CGSSnarfAndDispatchDatagrams (104 samples, 3.49%)</title><rect x="95.6740%" y="1573" width="3.4876%" height="15" fill="rgb(249,101,23)" fg:x="2853" fg:w="104"/><text x="95.9240%" y="1583.50">CGS..</text></g><g><title>mach_msg (39 samples, 1.31%)</title><rect x="97.8538%" y="1557" width="1.3078%" height="15" fill="rgb(228,51,19)" fg:x="2918" fg:w="39"/><text x="98.1038%" y="1567.50"></text></g><g><title>mach_msg_overwrite (39 samples, 1.31%)</title><rect x="97.8538%" y="1541" width="1.3078%" height="15" fill="rgb(213,20,6)" fg:x="2918" fg:w="39"/><text x="98.1038%" y="1551.50"></text></g><g><title>mach_msg2_internal (39 samples, 1.31%)</title><rect x="97.8538%" y="1525" width="1.3078%" height="15" fill="rgb(212,124,10)" fg:x="2918" fg:w="39"/><text x="98.1038%" y="1535.50"></text></g><g><title>mach_msg2_trap (39 samples, 1.31%)</title><rect x="97.8538%" y="1509" width="1.3078%" height="15" fill="rgb(248,3,40)" fg:x="2918" fg:w="39"/><text x="98.1038%" y="1519.50"></text></g><g><title>SLEventCreateNextEvent (120 samples, 4.02%)</title><rect x="95.1710%" y="1605" width="4.0241%" height="15" fill="rgb(223,178,23)" fg:x="2838" fg:w="120"/><text x="95.4210%" y="1615.50">SLEv..</text></g><g><title>SLSGetNextEventRecordInternal (120 samples, 4.02%)</title><rect x="95.1710%" y="1589" width="4.0241%" height="15" fill="rgb(240,132,45)" fg:x="2838" fg:w="120"/><text x="95.4210%" y="1599.50">SLSG..</text></g><g><title>dequeue_event(CGSEventQueue*) (1 samples, 0.03%)</title><rect x="99.1616%" y="1573" width="0.0335%" height="15" fill="rgb(245,164,36)" fg:x="2957" fg:w="1"/><text x="99.4116%" y="1583.50"></text></g><g><title>CGSEventQueueDequeueEvent (1 samples, 0.03%)</title><rect x="99.1616%" y="1557" width="0.0335%" height="15" fill="rgb(231,188,53)" fg:x="2957" fg:w="1"/><text x="99.4116%" y="1567.50"></text></g><g><title>___NSEventThread_block_invoke (2 samples, 0.07%)</title><rect x="99.1952%" y="1605" width="0.0671%" height="15" fill="rgb(237,198,39)" fg:x="2958" fg:w="2"/><text x="99.4452%" y="1615.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (1 samples, 0.03%)</title><rect x="99.2287%" y="1589" width="0.0335%" height="15" fill="rgb(223,120,35)" fg:x="2959" fg:w="1"/><text x="99.4787%" y="1599.50"></text></g><g><title>MessageHandler(__CFMachPort*, void*, long, void*) (133 samples, 4.46%)</title><rect x="94.8357%" y="1637" width="4.4601%" height="15" fill="rgb(253,107,49)" fg:x="2828" fg:w="133"/><text x="95.0857%" y="1647.50">Messa..</text></g><g><title>PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (133 samples, 4.46%)</title><rect x="94.8357%" y="1621" width="4.4601%" height="15" fill="rgb(216,44,31)" fg:x="2828" fg:w="133"/><text x="95.0857%" y="1631.50">PullE..</text></g><g><title>traceSlugEvent (1 samples, 0.03%)</title><rect x="99.2622%" y="1605" width="0.0335%" height="15" fill="rgb(253,87,21)" fg:x="2960" fg:w="1"/><text x="99.5122%" y="1615.50"></text></g><g><title>__CFRunLoopDoSource1 (136 samples, 4.56%)</title><rect x="94.8021%" y="1685" width="4.5607%" height="15" fill="rgb(226,18,2)" fg:x="2827" fg:w="136"/><text x="95.0521%" y="1695.50">__CFR..</text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (135 samples, 4.53%)</title><rect x="94.8357%" y="1669" width="4.5272%" height="15" fill="rgb(216,8,46)" fg:x="2828" fg:w="135"/><text x="95.0857%" y="1679.50">__CFR..</text></g><g><title>__CFMachPortPerform (135 samples, 4.53%)</title><rect x="94.8357%" y="1653" width="4.5272%" height="15" fill="rgb(226,140,39)" fg:x="2828" fg:w="135"/><text x="95.0857%" y="1663.50">__CFM..</text></g><g><title>_CFRelease (2 samples, 0.07%)</title><rect x="99.2958%" y="1637" width="0.0671%" height="15" fill="rgb(221,194,54)" fg:x="2961" fg:w="2"/><text x="99.5458%" y="1647.50"></text></g><g><title>__CFMachPortBoostDeallocate (2 samples, 0.07%)</title><rect x="99.2958%" y="1621" width="0.0671%" height="15" fill="rgb(213,92,11)" fg:x="2961" fg:w="2"/><text x="99.5458%" y="1631.50"></text></g><g><title>voucher_decrement_importance_count4CF (2 samples, 0.07%)</title><rect x="99.2958%" y="1605" width="0.0671%" height="15" fill="rgb(229,162,46)" fg:x="2961" fg:w="2"/><text x="99.5458%" y="1615.50"></text></g><g><title>mach_voucher_attr_command (2 samples, 0.07%)</title><rect x="99.2958%" y="1589" width="0.0671%" height="15" fill="rgb(214,111,36)" fg:x="2961" fg:w="2"/><text x="99.5458%" y="1599.50"></text></g><g><title>mach_msg2_internal (2 samples, 0.07%)</title><rect x="99.2958%" y="1573" width="0.0671%" height="15" fill="rgb(207,6,21)" fg:x="2961" fg:w="2"/><text x="99.5458%" y="1583.50"></text></g><g><title>mach_msg2_trap (2 samples, 0.07%)</title><rect x="99.2958%" y="1557" width="0.0671%" height="15" fill="rgb(213,127,38)" fg:x="2961" fg:w="2"/><text x="99.5458%" y="1567.50"></text></g><g><title>__CFRunLoopServiceMachPort (9 samples, 0.30%)</title><rect x="99.3628%" y="1685" width="0.3018%" height="15" fill="rgb(238,118,32)" fg:x="2963" fg:w="9"/><text x="99.6128%" y="1695.50"></text></g><g><title>mach_msg (9 samples, 0.30%)</title><rect x="99.3628%" y="1669" width="0.3018%" height="15" fill="rgb(240,139,39)" fg:x="2963" fg:w="9"/><text x="99.6128%" y="1679.50"></text></g><g><title>mach_msg_overwrite (9 samples, 0.30%)</title><rect x="99.3628%" y="1653" width="0.3018%" height="15" fill="rgb(235,10,37)" fg:x="2963" fg:w="9"/><text x="99.6128%" y="1663.50"></text></g><g><title>mach_msg2_internal (9 samples, 0.30%)</title><rect x="99.3628%" y="1637" width="0.3018%" height="15" fill="rgb(249,171,38)" fg:x="2963" fg:w="9"/><text x="99.6128%" y="1647.50"></text></g><g><title>mach_msg2_trap (9 samples, 0.30%)</title><rect x="99.3628%" y="1621" width="0.3018%" height="15" fill="rgb(242,144,32)" fg:x="2963" fg:w="9"/><text x="99.6128%" y="1631.50"></text></g><g><title>__kdebug_trace64 (3 samples, 0.10%)</title><rect x="99.6647%" y="1685" width="0.1006%" height="15" fill="rgb(217,117,21)" fg:x="2972" fg:w="3"/><text x="99.9147%" y="1695.50"></text></g><g><title>kdebug_trace (1 samples, 0.03%)</title><rect x="99.7653%" y="1685" width="0.0335%" height="15" fill="rgb(249,87,1)" fg:x="2975" fg:w="1"/><text x="100.0153%" y="1695.50"></text></g><g><title>kdebug_is_enabled (1 samples, 0.03%)</title><rect x="99.7653%" y="1669" width="0.0335%" height="15" fill="rgb(248,196,48)" fg:x="2975" fg:w="1"/><text x="100.0153%" y="1679.50"></text></g><g><title>CFRunLoopRunSpecific (156 samples, 5.23%)</title><rect x="94.7351%" y="1717" width="5.2314%" height="15" fill="rgb(251,206,33)" fg:x="2825" fg:w="156"/><text x="94.9851%" y="1727.50">CFRunL..</text></g><g><title>__CFRunLoopRun (155 samples, 5.20%)</title><rect x="94.7686%" y="1701" width="5.1979%" height="15" fill="rgb(232,141,28)" fg:x="2826" fg:w="155"/><text x="95.0186%" y="1711.50">__CFRu..</text></g><g><title>voucher_mach_msg_revert (5 samples, 0.17%)</title><rect x="99.7988%" y="1685" width="0.1677%" height="15" fill="rgb(209,167,14)" fg:x="2976" fg:w="5"/><text x="100.0488%" y="1695.50"></text></g><g><title>_dispatch_set_priority_and_mach_voucher_slow (5 samples, 0.17%)</title><rect x="99.7988%" y="1669" width="0.1677%" height="15" fill="rgb(225,11,50)" fg:x="2976" fg:w="5"/><text x="100.0488%" y="1679.50"></text></g><g><title>_pthread_set_properties_self (5 samples, 0.17%)</title><rect x="99.7988%" y="1653" width="0.1677%" height="15" fill="rgb(209,50,20)" fg:x="2976" fg:w="5"/><text x="100.0488%" y="1663.50"></text></g><g><title>__bsdthread_ctl (5 samples, 0.17%)</title><rect x="99.7988%" y="1637" width="0.1677%" height="15" fill="rgb(212,17,46)" fg:x="2976" fg:w="5"/><text x="100.0488%" y="1647.50"></text></g><g><title>all (2,982 samples, 100%)</title><rect x="0.0000%" y="1781" width="100.0000%" height="15" fill="rgb(216,101,39)" fg:x="0" fg:w="2982"/><text x="0.2500%" y="1791.50"></text></g><g><title>thread_start (157 samples, 5.26%)</title><rect x="94.7351%" y="1765" width="5.2649%" height="15" fill="rgb(212,228,48)" fg:x="2825" fg:w="157"/><text x="94.9851%" y="1775.50">thread..</text></g><g><title>_pthread_start (157 samples, 5.26%)</title><rect x="94.7351%" y="1749" width="5.2649%" height="15" fill="rgb(250,6,50)" fg:x="2825" fg:w="157"/><text x="94.9851%" y="1759.50">_pthre..</text></g><g><title>_NSEventThread (157 samples, 5.26%)</title><rect x="94.7351%" y="1733" width="5.2649%" height="15" fill="rgb(250,160,48)" fg:x="2825" fg:w="157"/><text x="94.9851%" y="1743.50">_NSEve..</text></g><g><title>os_unfair_lock_unlock (1 samples, 0.03%)</title><rect x="99.9665%" y="1717" width="0.0335%" height="15" fill="rgb(244,216,33)" fg:x="2981" fg:w="1"/><text x="100.2165%" y="1727.50"></text></g></svg></svg>